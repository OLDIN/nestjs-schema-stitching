schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

scalar _text

"""
expression to compare columns of type _text. All fields are combined with logical 'AND'.
"""
input _text_comparison_exp {
  _eq: _text
  _gt: _text
  _gte: _text
  _in: [_text]
  _is_null: Boolean
  _lt: _text
  _lte: _text
  _neq: _text
  _nin: [_text]
}

"""
columns and relationships of "artist"
"""
type artist {
  """An array relationship"""
  artistCategories(
    """distinct select on columns"""
    distinct_on: [artistCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistCategory_order_by!]

    """filter the rows returned"""
    where: artistCategory_bool_exp
  ): [artistCategory!]!

  """An aggregated array relationship"""
  artistCategories_aggregate(
    """distinct select on columns"""
    distinct_on: [artistCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistCategory_order_by!]

    """filter the rows returned"""
    where: artistCategory_bool_exp
  ): artistCategory_aggregate!
  deletedAt: timestamptz
  id: uuid!

  """An array relationship"""
  links(
    """distinct select on columns"""
    distinct_on: [link_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [link_order_by!]

    """filter the rows returned"""
    where: link_bool_exp
  ): [link!]!

  """An aggregated array relationship"""
  links_aggregate(
    """distinct select on columns"""
    distinct_on: [link_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [link_order_by!]

    """filter the rows returned"""
    where: link_bool_exp
  ): link_aggregate!
  photo(
    """JSON select path"""
    path: String
  ): jsonb!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [artistI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistI18n_order_by!]

    """filter the rows returned"""
    where: artistI18n_bool_exp
  ): [artistI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [artistI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistI18n_order_by!]

    """filter the rows returned"""
    where: artistI18n_bool_exp
  ): artistI18n_aggregate!

  """An array relationship"""
  works(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): [work!]!

  """An aggregated array relationship"""
  works_aggregate(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): work_aggregate!
}

"""
aggregated selection of "artist"
"""
type artist_aggregate {
  aggregate: artist_aggregate_fields
  nodes: [artist!]!
}

"""
aggregate fields of "artist"
"""
type artist_aggregate_fields {
  count(columns: [artist_select_column!], distinct: Boolean): Int
  max: artist_max_fields
  min: artist_min_fields
}

"""
order by aggregate values of table "artist"
"""
input artist_aggregate_order_by {
  count: order_by
  max: artist_max_order_by
  min: artist_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input artist_append_input {
  photo: jsonb
}

"""
input type for inserting array relation for remote table "artist"
"""
input artist_arr_rel_insert_input {
  data: [artist_insert_input!]!
  on_conflict: artist_on_conflict
}

"""
Boolean expression to filter rows from the table "artist". All fields are combined with a logical 'AND'.
"""
input artist_bool_exp {
  _and: [artist_bool_exp]
  _not: artist_bool_exp
  _or: [artist_bool_exp]
  artistCategories: artistCategory_bool_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  links: link_bool_exp
  photo: jsonb_comparison_exp
  translations: artistI18n_bool_exp
  works: work_bool_exp
}

"""
unique or primary key constraints on table "artist"
"""
enum artist_constraint {
  """unique or primary key constraint"""
  PK_55b76e71568b5db4d01d3e394ed
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input artist_delete_at_path_input {
  photo: [String]
}

"""
delete the array element with specified index (negative integers count from the
end). throws an error if top level container is not an array
"""
input artist_delete_elem_input {
  photo: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input artist_delete_key_input {
  photo: String
}

"""
input type for inserting data into table "artist"
"""
input artist_insert_input {
  artistCategories: artistCategory_arr_rel_insert_input
  deletedAt: timestamptz
  id: uuid
  links: link_arr_rel_insert_input
  photo: jsonb
  translations: artistI18n_arr_rel_insert_input
  works: work_arr_rel_insert_input
}

"""aggregate max on columns"""
type artist_max_fields {
  deletedAt: timestamptz
}

"""
order by max() on columns of table "artist"
"""
input artist_max_order_by {
  deletedAt: order_by
}

"""aggregate min on columns"""
type artist_min_fields {
  deletedAt: timestamptz
}

"""
order by min() on columns of table "artist"
"""
input artist_min_order_by {
  deletedAt: order_by
}

"""
response of any mutation on the table "artist"
"""
type artist_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [artist!]!
}

"""
input type for inserting object relation for remote table "artist"
"""
input artist_obj_rel_insert_input {
  data: artist_insert_input!
  on_conflict: artist_on_conflict
}

"""
on conflict condition type for table "artist"
"""
input artist_on_conflict {
  constraint: artist_constraint!
  update_columns: [artist_update_column!]!
}

"""
ordering options when selecting data from "artist"
"""
input artist_order_by {
  artistCategories_aggregate: artistCategory_aggregate_order_by
  deletedAt: order_by
  id: order_by
  links_aggregate: link_aggregate_order_by
  photo: order_by
  translations_aggregate: artistI18n_aggregate_order_by
  works_aggregate: work_aggregate_order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input artist_prepend_input {
  photo: jsonb
}

"""
select columns of table "artist"
"""
enum artist_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  photo
}

"""
input type for updating data in table "artist"
"""
input artist_set_input {
  deletedAt: timestamptz
  id: uuid
  photo: jsonb
}

"""
update columns of table "artist"
"""
enum artist_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  photo
}

"""
columns and relationships of "artistCategory"
"""
type artistCategory {
  """An object relationship"""
  artist: artist!
  artistId: uuid!

  """An object relationship"""
  category: category!
  categoryId: uuid!
}

"""
aggregated selection of "artistCategory"
"""
type artistCategory_aggregate {
  aggregate: artistCategory_aggregate_fields
  nodes: [artistCategory!]!
}

"""
aggregate fields of "artistCategory"
"""
type artistCategory_aggregate_fields {
  count(columns: [artistCategory_select_column!], distinct: Boolean): Int
}

"""
order by aggregate values of table "artistCategory"
"""
input artistCategory_aggregate_order_by {
  count: order_by
}

"""
input type for inserting array relation for remote table "artistCategory"
"""
input artistCategory_arr_rel_insert_input {
  data: [artistCategory_insert_input!]!
  on_conflict: artistCategory_on_conflict
}

"""
Boolean expression to filter rows from the table "artistCategory". All fields are combined with a logical 'AND'.
"""
input artistCategory_bool_exp {
  _and: [artistCategory_bool_exp]
  _not: artistCategory_bool_exp
  _or: [artistCategory_bool_exp]
  artist: artist_bool_exp
  artistId: uuid_comparison_exp
  category: category_bool_exp
  categoryId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "artistCategory"
"""
enum artistCategory_constraint {
  """unique or primary key constraint"""
  PK_3fc4782ed5ef8959e993d8481fe
}

"""
input type for inserting data into table "artistCategory"
"""
input artistCategory_insert_input {
  artist: artist_obj_rel_insert_input
  artistId: uuid
  category: category_obj_rel_insert_input
  categoryId: uuid
}

"""
response of any mutation on the table "artistCategory"
"""
type artistCategory_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [artistCategory!]!
}

"""
input type for inserting object relation for remote table "artistCategory"
"""
input artistCategory_obj_rel_insert_input {
  data: artistCategory_insert_input!
  on_conflict: artistCategory_on_conflict
}

"""
on conflict condition type for table "artistCategory"
"""
input artistCategory_on_conflict {
  constraint: artistCategory_constraint!
  update_columns: [artistCategory_update_column!]!
}

"""
ordering options when selecting data from "artistCategory"
"""
input artistCategory_order_by {
  artist: artist_order_by
  artistId: order_by
  category: category_order_by
  categoryId: order_by
}

"""
select columns of table "artistCategory"
"""
enum artistCategory_select_column {
  """column name"""
  artistId

  """column name"""
  categoryId
}

"""
input type for updating data in table "artistCategory"
"""
input artistCategory_set_input {
  artistId: uuid
  categoryId: uuid
}

"""
update columns of table "artistCategory"
"""
enum artistCategory_update_column {
  """column name"""
  artistId

  """column name"""
  categoryId
}

"""
columns and relationships of "artistI18n"
"""
type artistI18n {
  """An object relationship"""
  artist: artist!
  artistId: uuid!
  date: String
  deletedAt: timestamptz
  description: String
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  metaDescription: String!
  metaTitle: String!
  name: String!
  slug: String!
}

"""
aggregated selection of "artistI18n"
"""
type artistI18n_aggregate {
  aggregate: artistI18n_aggregate_fields
  nodes: [artistI18n!]!
}

"""
aggregate fields of "artistI18n"
"""
type artistI18n_aggregate_fields {
  count(columns: [artistI18n_select_column!], distinct: Boolean): Int
  max: artistI18n_max_fields
  min: artistI18n_min_fields
}

"""
order by aggregate values of table "artistI18n"
"""
input artistI18n_aggregate_order_by {
  count: order_by
  max: artistI18n_max_order_by
  min: artistI18n_min_order_by
}

"""
input type for inserting array relation for remote table "artistI18n"
"""
input artistI18n_arr_rel_insert_input {
  data: [artistI18n_insert_input!]!
  on_conflict: artistI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "artistI18n". All fields are combined with a logical 'AND'.
"""
input artistI18n_bool_exp {
  _and: [artistI18n_bool_exp]
  _not: artistI18n_bool_exp
  _or: [artistI18n_bool_exp]
  artist: artist_bool_exp
  artistId: uuid_comparison_exp
  date: varchar_comparison_exp
  deletedAt: timestamptz_comparison_exp
  description: text_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  metaDescription: varchar_comparison_exp
  metaTitle: varchar_comparison_exp
  name: varchar_comparison_exp
  slug: varchar_comparison_exp
}

"""
unique or primary key constraints on table "artistI18n"
"""
enum artistI18n_constraint {
  """unique or primary key constraint"""
  PK_bb7af4874b4bbd24df76e2c8db3

  """unique or primary key constraint"""
  UQ_e3b4071ce5f2f9f17c1b950c873
}

"""
input type for inserting data into table "artistI18n"
"""
input artistI18n_insert_input {
  artist: artist_obj_rel_insert_input
  artistId: uuid
  date: String
  deletedAt: timestamptz
  description: String
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  metaDescription: String
  metaTitle: String
  name: String
  slug: String
}

"""aggregate max on columns"""
type artistI18n_max_fields {
  date: String
  deletedAt: timestamptz
  description: String
  metaDescription: String
  metaTitle: String
  name: String
  slug: String
}

"""
order by max() on columns of table "artistI18n"
"""
input artistI18n_max_order_by {
  date: order_by
  deletedAt: order_by
  description: order_by
  metaDescription: order_by
  metaTitle: order_by
  name: order_by
  slug: order_by
}

"""aggregate min on columns"""
type artistI18n_min_fields {
  date: String
  deletedAt: timestamptz
  description: String
  metaDescription: String
  metaTitle: String
  name: String
  slug: String
}

"""
order by min() on columns of table "artistI18n"
"""
input artistI18n_min_order_by {
  date: order_by
  deletedAt: order_by
  description: order_by
  metaDescription: order_by
  metaTitle: order_by
  name: order_by
  slug: order_by
}

"""
response of any mutation on the table "artistI18n"
"""
type artistI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [artistI18n!]!
}

"""
input type for inserting object relation for remote table "artistI18n"
"""
input artistI18n_obj_rel_insert_input {
  data: artistI18n_insert_input!
  on_conflict: artistI18n_on_conflict
}

"""
on conflict condition type for table "artistI18n"
"""
input artistI18n_on_conflict {
  constraint: artistI18n_constraint!
  update_columns: [artistI18n_update_column!]!
}

"""
ordering options when selecting data from "artistI18n"
"""
input artistI18n_order_by {
  artist: artist_order_by
  artistId: order_by
  date: order_by
  deletedAt: order_by
  description: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  metaDescription: order_by
  metaTitle: order_by
  name: order_by
  slug: order_by
}

"""
select columns of table "artistI18n"
"""
enum artistI18n_select_column {
  """column name"""
  artistId

  """column name"""
  date

  """column name"""
  deletedAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  name

  """column name"""
  slug
}

"""
input type for updating data in table "artistI18n"
"""
input artistI18n_set_input {
  artistId: uuid
  date: String
  deletedAt: timestamptz
  description: String
  id: uuid
  localeId: uuid
  metaDescription: String
  metaTitle: String
  name: String
  slug: String
}

"""
update columns of table "artistI18n"
"""
enum artistI18n_update_column {
  """column name"""
  artistId

  """column name"""
  date

  """column name"""
  deletedAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  name

  """column name"""
  slug
}

"""
columns and relationships of "basis"
"""
type basis {
  deletedAt: timestamptz
  id: uuid!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [basisI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basisI18n_order_by!]

    """filter the rows returned"""
    where: basisI18n_bool_exp
  ): [basisI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [basisI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basisI18n_order_by!]

    """filter the rows returned"""
    where: basisI18n_bool_exp
  ): basisI18n_aggregate!

  """An array relationship"""
  works(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): [work!]!

  """An aggregated array relationship"""
  works_aggregate(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): work_aggregate!
}

"""
aggregated selection of "basis"
"""
type basis_aggregate {
  aggregate: basis_aggregate_fields
  nodes: [basis!]!
}

"""
aggregate fields of "basis"
"""
type basis_aggregate_fields {
  count(columns: [basis_select_column!], distinct: Boolean): Int
  max: basis_max_fields
  min: basis_min_fields
}

"""
order by aggregate values of table "basis"
"""
input basis_aggregate_order_by {
  count: order_by
  max: basis_max_order_by
  min: basis_min_order_by
}

"""
input type for inserting array relation for remote table "basis"
"""
input basis_arr_rel_insert_input {
  data: [basis_insert_input!]!
  on_conflict: basis_on_conflict
}

"""
Boolean expression to filter rows from the table "basis". All fields are combined with a logical 'AND'.
"""
input basis_bool_exp {
  _and: [basis_bool_exp]
  _not: basis_bool_exp
  _or: [basis_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  translations: basisI18n_bool_exp
  works: work_bool_exp
}

"""
unique or primary key constraints on table "basis"
"""
enum basis_constraint {
  """unique or primary key constraint"""
  PK_794d2f4dbab3c1cf4abaa43981e
}

"""
input type for inserting data into table "basis"
"""
input basis_insert_input {
  deletedAt: timestamptz
  id: uuid
  translations: basisI18n_arr_rel_insert_input
  works: work_arr_rel_insert_input
}

"""aggregate max on columns"""
type basis_max_fields {
  deletedAt: timestamptz
}

"""
order by max() on columns of table "basis"
"""
input basis_max_order_by {
  deletedAt: order_by
}

"""aggregate min on columns"""
type basis_min_fields {
  deletedAt: timestamptz
}

"""
order by min() on columns of table "basis"
"""
input basis_min_order_by {
  deletedAt: order_by
}

"""
response of any mutation on the table "basis"
"""
type basis_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [basis!]!
}

"""
input type for inserting object relation for remote table "basis"
"""
input basis_obj_rel_insert_input {
  data: basis_insert_input!
  on_conflict: basis_on_conflict
}

"""
on conflict condition type for table "basis"
"""
input basis_on_conflict {
  constraint: basis_constraint!
  update_columns: [basis_update_column!]!
}

"""
ordering options when selecting data from "basis"
"""
input basis_order_by {
  deletedAt: order_by
  id: order_by
  translations_aggregate: basisI18n_aggregate_order_by
  works_aggregate: work_aggregate_order_by
}

"""
select columns of table "basis"
"""
enum basis_select_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
input type for updating data in table "basis"
"""
input basis_set_input {
  deletedAt: timestamptz
  id: uuid
}

"""
update columns of table "basis"
"""
enum basis_update_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
columns and relationships of "basisI18n"
"""
type basisI18n {
  """An object relationship"""
  basis: basis!
  basisId: uuid!
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  name: String!
}

"""
aggregated selection of "basisI18n"
"""
type basisI18n_aggregate {
  aggregate: basisI18n_aggregate_fields
  nodes: [basisI18n!]!
}

"""
aggregate fields of "basisI18n"
"""
type basisI18n_aggregate_fields {
  count(columns: [basisI18n_select_column!], distinct: Boolean): Int
  max: basisI18n_max_fields
  min: basisI18n_min_fields
}

"""
order by aggregate values of table "basisI18n"
"""
input basisI18n_aggregate_order_by {
  count: order_by
  max: basisI18n_max_order_by
  min: basisI18n_min_order_by
}

"""
input type for inserting array relation for remote table "basisI18n"
"""
input basisI18n_arr_rel_insert_input {
  data: [basisI18n_insert_input!]!
  on_conflict: basisI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "basisI18n". All fields are combined with a logical 'AND'.
"""
input basisI18n_bool_exp {
  _and: [basisI18n_bool_exp]
  _not: basisI18n_bool_exp
  _or: [basisI18n_bool_exp]
  basis: basis_bool_exp
  basisId: uuid_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  name: varchar_comparison_exp
}

"""
unique or primary key constraints on table "basisI18n"
"""
enum basisI18n_constraint {
  """unique or primary key constraint"""
  PK_20e17c4e061fb7e6bfcd1f42355
}

"""
input type for inserting data into table "basisI18n"
"""
input basisI18n_insert_input {
  basis: basis_obj_rel_insert_input
  basisId: uuid
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  name: String
}

"""aggregate max on columns"""
type basisI18n_max_fields {
  deletedAt: timestamptz
  name: String
}

"""
order by max() on columns of table "basisI18n"
"""
input basisI18n_max_order_by {
  deletedAt: order_by
  name: order_by
}

"""aggregate min on columns"""
type basisI18n_min_fields {
  deletedAt: timestamptz
  name: String
}

"""
order by min() on columns of table "basisI18n"
"""
input basisI18n_min_order_by {
  deletedAt: order_by
  name: order_by
}

"""
response of any mutation on the table "basisI18n"
"""
type basisI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [basisI18n!]!
}

"""
input type for inserting object relation for remote table "basisI18n"
"""
input basisI18n_obj_rel_insert_input {
  data: basisI18n_insert_input!
  on_conflict: basisI18n_on_conflict
}

"""
on conflict condition type for table "basisI18n"
"""
input basisI18n_on_conflict {
  constraint: basisI18n_constraint!
  update_columns: [basisI18n_update_column!]!
}

"""
ordering options when selecting data from "basisI18n"
"""
input basisI18n_order_by {
  basis: basis_order_by
  basisId: order_by
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  name: order_by
}

"""
select columns of table "basisI18n"
"""
enum basisI18n_select_column {
  """column name"""
  basisId

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  name
}

"""
input type for updating data in table "basisI18n"
"""
input basisI18n_set_input {
  basisId: uuid
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  name: String
}

"""
update columns of table "basisI18n"
"""
enum basisI18n_update_column {
  """column name"""
  basisId

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  name
}

"""
expression to compare columns of type boolean. All fields are combined with logical 'AND'.
"""
input boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean]
}

"""
columns and relationships of "cart"
"""
type cart {
  createdAt: timestamptz!
  deletedAt: timestamptz
  guid: uuid
  id: uuid!
  quantity: smallint!
  updatedAt: timestamptz!

  """An object relationship"""
  user: user
  userId: uuid

  """An object relationship"""
  work: work!
  workId: uuid!
}

"""
aggregated selection of "cart"
"""
type cart_aggregate {
  aggregate: cart_aggregate_fields
  nodes: [cart!]!
}

"""
aggregate fields of "cart"
"""
type cart_aggregate_fields {
  avg: cart_avg_fields
  count(columns: [cart_select_column!], distinct: Boolean): Int
  max: cart_max_fields
  min: cart_min_fields
  stddev: cart_stddev_fields
  stddev_pop: cart_stddev_pop_fields
  stddev_samp: cart_stddev_samp_fields
  sum: cart_sum_fields
  var_pop: cart_var_pop_fields
  var_samp: cart_var_samp_fields
  variance: cart_variance_fields
}

"""
order by aggregate values of table "cart"
"""
input cart_aggregate_order_by {
  avg: cart_avg_order_by
  count: order_by
  max: cart_max_order_by
  min: cart_min_order_by
  stddev: cart_stddev_order_by
  stddev_pop: cart_stddev_pop_order_by
  stddev_samp: cart_stddev_samp_order_by
  sum: cart_sum_order_by
  var_pop: cart_var_pop_order_by
  var_samp: cart_var_samp_order_by
  variance: cart_variance_order_by
}

"""
input type for inserting array relation for remote table "cart"
"""
input cart_arr_rel_insert_input {
  data: [cart_insert_input!]!
  on_conflict: cart_on_conflict
}

"""aggregate avg on columns"""
type cart_avg_fields {
  quantity: Float
}

"""
order by avg() on columns of table "cart"
"""
input cart_avg_order_by {
  quantity: order_by
}

"""
Boolean expression to filter rows from the table "cart". All fields are combined with a logical 'AND'.
"""
input cart_bool_exp {
  _and: [cart_bool_exp]
  _not: cart_bool_exp
  _or: [cart_bool_exp]
  createdAt: timestamptz_comparison_exp
  deletedAt: timestamptz_comparison_exp
  guid: uuid_comparison_exp
  id: uuid_comparison_exp
  quantity: smallint_comparison_exp
  updatedAt: timestamptz_comparison_exp
  user: user_bool_exp
  userId: uuid_comparison_exp
  work: work_bool_exp
  workId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "cart"
"""
enum cart_constraint {
  """unique or primary key constraint"""
  PK_c524ec48751b9b5bcfbf6e59be7
}

"""
input type for incrementing integer columne in table "cart"
"""
input cart_inc_input {
  quantity: smallint
}

"""
input type for inserting data into table "cart"
"""
input cart_insert_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  guid: uuid
  id: uuid
  quantity: smallint
  updatedAt: timestamptz
  user: user_obj_rel_insert_input
  userId: uuid
  work: work_obj_rel_insert_input
  workId: uuid
}

"""aggregate max on columns"""
type cart_max_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  quantity: smallint
  updatedAt: timestamptz
}

"""
order by max() on columns of table "cart"
"""
input cart_max_order_by {
  createdAt: order_by
  deletedAt: order_by
  quantity: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type cart_min_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  quantity: smallint
  updatedAt: timestamptz
}

"""
order by min() on columns of table "cart"
"""
input cart_min_order_by {
  createdAt: order_by
  deletedAt: order_by
  quantity: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "cart"
"""
type cart_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [cart!]!
}

"""
input type for inserting object relation for remote table "cart"
"""
input cart_obj_rel_insert_input {
  data: cart_insert_input!
  on_conflict: cart_on_conflict
}

"""
on conflict condition type for table "cart"
"""
input cart_on_conflict {
  constraint: cart_constraint!
  update_columns: [cart_update_column!]!
}

"""
ordering options when selecting data from "cart"
"""
input cart_order_by {
  createdAt: order_by
  deletedAt: order_by
  guid: order_by
  id: order_by
  quantity: order_by
  updatedAt: order_by
  user: user_order_by
  userId: order_by
  work: work_order_by
  workId: order_by
}

"""
select columns of table "cart"
"""
enum cart_select_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  guid

  """column name"""
  id

  """column name"""
  quantity

  """column name"""
  updatedAt

  """column name"""
  userId

  """column name"""
  workId
}

"""
input type for updating data in table "cart"
"""
input cart_set_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  guid: uuid
  id: uuid
  quantity: smallint
  updatedAt: timestamptz
  userId: uuid
  workId: uuid
}

"""aggregate stddev on columns"""
type cart_stddev_fields {
  quantity: Float
}

"""
order by stddev() on columns of table "cart"
"""
input cart_stddev_order_by {
  quantity: order_by
}

"""aggregate stddev_pop on columns"""
type cart_stddev_pop_fields {
  quantity: Float
}

"""
order by stddev_pop() on columns of table "cart"
"""
input cart_stddev_pop_order_by {
  quantity: order_by
}

"""aggregate stddev_samp on columns"""
type cart_stddev_samp_fields {
  quantity: Float
}

"""
order by stddev_samp() on columns of table "cart"
"""
input cart_stddev_samp_order_by {
  quantity: order_by
}

"""aggregate sum on columns"""
type cart_sum_fields {
  quantity: smallint
}

"""
order by sum() on columns of table "cart"
"""
input cart_sum_order_by {
  quantity: order_by
}

"""
update columns of table "cart"
"""
enum cart_update_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  guid

  """column name"""
  id

  """column name"""
  quantity

  """column name"""
  updatedAt

  """column name"""
  userId

  """column name"""
  workId
}

"""aggregate var_pop on columns"""
type cart_var_pop_fields {
  quantity: Float
}

"""
order by var_pop() on columns of table "cart"
"""
input cart_var_pop_order_by {
  quantity: order_by
}

"""aggregate var_samp on columns"""
type cart_var_samp_fields {
  quantity: Float
}

"""
order by var_samp() on columns of table "cart"
"""
input cart_var_samp_order_by {
  quantity: order_by
}

"""aggregate variance on columns"""
type cart_variance_fields {
  quantity: Float
}

"""
order by variance() on columns of table "cart"
"""
input cart_variance_order_by {
  quantity: order_by
}

"""
columns and relationships of "category"
"""
type category {
  """An array relationship"""
  artistCategories(
    """distinct select on columns"""
    distinct_on: [artistCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistCategory_order_by!]

    """filter the rows returned"""
    where: artistCategory_bool_exp
  ): [artistCategory!]!

  """An aggregated array relationship"""
  artistCategories_aggregate(
    """distinct select on columns"""
    distinct_on: [artistCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistCategory_order_by!]

    """filter the rows returned"""
    where: artistCategory_bool_exp
  ): artistCategory_aggregate!

  """An array relationship"""
  categoryWorks(
    """distinct select on columns"""
    distinct_on: [workCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workCategory_order_by!]

    """filter the rows returned"""
    where: workCategory_bool_exp
  ): [workCategory!]!

  """An aggregated array relationship"""
  categoryWorks_aggregate(
    """distinct select on columns"""
    distinct_on: [workCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workCategory_order_by!]

    """filter the rows returned"""
    where: workCategory_bool_exp
  ): workCategory_aggregate!
  deletedAt: timestamptz

  """An array relationship"""
  descendants(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): [category!]!

  """An aggregated array relationship"""
  descendants_aggregate(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): category_aggregate!

  """An array relationship"""
  exhibitionCategories(
    """distinct select on columns"""
    distinct_on: [exhibitionCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionCategory_order_by!]

    """filter the rows returned"""
    where: exhibitionCategory_bool_exp
  ): [exhibitionCategory!]!

  """An aggregated array relationship"""
  exhibitionCategories_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionCategory_order_by!]

    """filter the rows returned"""
    where: exhibitionCategory_bool_exp
  ): exhibitionCategory_aggregate!
  id: uuid!

  """An array relationship"""
  newsCategories(
    """distinct select on columns"""
    distinct_on: [newsCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsCategory_order_by!]

    """filter the rows returned"""
    where: newsCategory_bool_exp
  ): [newsCategory!]!

  """An aggregated array relationship"""
  newsCategories_aggregate(
    """distinct select on columns"""
    distinct_on: [newsCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsCategory_order_by!]

    """filter the rows returned"""
    where: newsCategory_bool_exp
  ): newsCategory_aggregate!

  """An object relationship"""
  parent: category
  parentId: uuid
  photo: String
  showInCollection: Boolean!
  showInShop: Boolean!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [categoryI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categoryI18n_order_by!]

    """filter the rows returned"""
    where: categoryI18n_bool_exp
  ): [categoryI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [categoryI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categoryI18n_order_by!]

    """filter the rows returned"""
    where: categoryI18n_bool_exp
  ): categoryI18n_aggregate!
}

"""
aggregated selection of "category"
"""
type category_aggregate {
  aggregate: category_aggregate_fields
  nodes: [category!]!
}

"""
aggregate fields of "category"
"""
type category_aggregate_fields {
  count(columns: [category_select_column!], distinct: Boolean): Int
  max: category_max_fields
  min: category_min_fields
}

"""
order by aggregate values of table "category"
"""
input category_aggregate_order_by {
  count: order_by
  max: category_max_order_by
  min: category_min_order_by
}

"""
input type for inserting array relation for remote table "category"
"""
input category_arr_rel_insert_input {
  data: [category_insert_input!]!
  on_conflict: category_on_conflict
}

"""
Boolean expression to filter rows from the table "category". All fields are combined with a logical 'AND'.
"""
input category_bool_exp {
  _and: [category_bool_exp]
  _not: category_bool_exp
  _or: [category_bool_exp]
  artistCategories: artistCategory_bool_exp
  categoryWorks: workCategory_bool_exp
  deletedAt: timestamptz_comparison_exp
  descendants: category_bool_exp
  exhibitionCategories: exhibitionCategory_bool_exp
  id: uuid_comparison_exp
  newsCategories: newsCategory_bool_exp
  parent: category_bool_exp
  parentId: uuid_comparison_exp
  photo: varchar_comparison_exp
  showInCollection: boolean_comparison_exp
  showInShop: boolean_comparison_exp
  translations: categoryI18n_bool_exp
}

"""
unique or primary key constraints on table "category"
"""
enum category_constraint {
  """unique or primary key constraint"""
  PK_9c4e4a89e3674fc9f382d733f03
}

"""
input type for inserting data into table "category"
"""
input category_insert_input {
  artistCategories: artistCategory_arr_rel_insert_input
  categoryWorks: workCategory_arr_rel_insert_input
  deletedAt: timestamptz
  descendants: category_arr_rel_insert_input
  exhibitionCategories: exhibitionCategory_arr_rel_insert_input
  id: uuid
  newsCategories: newsCategory_arr_rel_insert_input
  parent: category_obj_rel_insert_input
  parentId: uuid
  photo: String
  showInCollection: Boolean
  showInShop: Boolean
  translations: categoryI18n_arr_rel_insert_input
}

"""aggregate max on columns"""
type category_max_fields {
  deletedAt: timestamptz
  photo: String
}

"""
order by max() on columns of table "category"
"""
input category_max_order_by {
  deletedAt: order_by
  photo: order_by
}

"""aggregate min on columns"""
type category_min_fields {
  deletedAt: timestamptz
  photo: String
}

"""
order by min() on columns of table "category"
"""
input category_min_order_by {
  deletedAt: order_by
  photo: order_by
}

"""
response of any mutation on the table "category"
"""
type category_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [category!]!
}

"""
input type for inserting object relation for remote table "category"
"""
input category_obj_rel_insert_input {
  data: category_insert_input!
  on_conflict: category_on_conflict
}

"""
on conflict condition type for table "category"
"""
input category_on_conflict {
  constraint: category_constraint!
  update_columns: [category_update_column!]!
}

"""
ordering options when selecting data from "category"
"""
input category_order_by {
  artistCategories_aggregate: artistCategory_aggregate_order_by
  categoryWorks_aggregate: workCategory_aggregate_order_by
  deletedAt: order_by
  descendants_aggregate: category_aggregate_order_by
  exhibitionCategories_aggregate: exhibitionCategory_aggregate_order_by
  id: order_by
  newsCategories_aggregate: newsCategory_aggregate_order_by
  parent: category_order_by
  parentId: order_by
  photo: order_by
  showInCollection: order_by
  showInShop: order_by
  translations_aggregate: categoryI18n_aggregate_order_by
}

"""
select columns of table "category"
"""
enum category_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  parentId

  """column name"""
  photo

  """column name"""
  showInCollection

  """column name"""
  showInShop
}

"""
input type for updating data in table "category"
"""
input category_set_input {
  deletedAt: timestamptz
  id: uuid
  parentId: uuid
  photo: String
  showInCollection: Boolean
  showInShop: Boolean
}

"""
update columns of table "category"
"""
enum category_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  parentId

  """column name"""
  photo

  """column name"""
  showInCollection

  """column name"""
  showInShop
}

"""
columns and relationships of "categoryI18n"
"""
type categoryI18n {
  """An object relationship"""
  category: category!
  categoryId: uuid!
  deletedAt: timestamptz
  description: String
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  metaDescription: String!
  metaTitle: String!
  name: String!
  slug: String!
}

"""
aggregated selection of "categoryI18n"
"""
type categoryI18n_aggregate {
  aggregate: categoryI18n_aggregate_fields
  nodes: [categoryI18n!]!
}

"""
aggregate fields of "categoryI18n"
"""
type categoryI18n_aggregate_fields {
  count(columns: [categoryI18n_select_column!], distinct: Boolean): Int
  max: categoryI18n_max_fields
  min: categoryI18n_min_fields
}

"""
order by aggregate values of table "categoryI18n"
"""
input categoryI18n_aggregate_order_by {
  count: order_by
  max: categoryI18n_max_order_by
  min: categoryI18n_min_order_by
}

"""
input type for inserting array relation for remote table "categoryI18n"
"""
input categoryI18n_arr_rel_insert_input {
  data: [categoryI18n_insert_input!]!
  on_conflict: categoryI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "categoryI18n". All fields are combined with a logical 'AND'.
"""
input categoryI18n_bool_exp {
  _and: [categoryI18n_bool_exp]
  _not: categoryI18n_bool_exp
  _or: [categoryI18n_bool_exp]
  category: category_bool_exp
  categoryId: uuid_comparison_exp
  deletedAt: timestamptz_comparison_exp
  description: varchar_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  metaDescription: varchar_comparison_exp
  metaTitle: varchar_comparison_exp
  name: varchar_comparison_exp
  slug: varchar_comparison_exp
}

"""
unique or primary key constraints on table "categoryI18n"
"""
enum categoryI18n_constraint {
  """unique or primary key constraint"""
  PK_7d9da56b439dffc5c0c2191cb6e

  """unique or primary key constraint"""
  UQ_a12ea863d490c7d4e945542a19e
}

"""
input type for inserting data into table "categoryI18n"
"""
input categoryI18n_insert_input {
  category: category_obj_rel_insert_input
  categoryId: uuid
  deletedAt: timestamptz
  description: String
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  metaDescription: String
  metaTitle: String
  name: String
  slug: String
}

"""aggregate max on columns"""
type categoryI18n_max_fields {
  deletedAt: timestamptz
  description: String
  metaDescription: String
  metaTitle: String
  name: String
  slug: String
}

"""
order by max() on columns of table "categoryI18n"
"""
input categoryI18n_max_order_by {
  deletedAt: order_by
  description: order_by
  metaDescription: order_by
  metaTitle: order_by
  name: order_by
  slug: order_by
}

"""aggregate min on columns"""
type categoryI18n_min_fields {
  deletedAt: timestamptz
  description: String
  metaDescription: String
  metaTitle: String
  name: String
  slug: String
}

"""
order by min() on columns of table "categoryI18n"
"""
input categoryI18n_min_order_by {
  deletedAt: order_by
  description: order_by
  metaDescription: order_by
  metaTitle: order_by
  name: order_by
  slug: order_by
}

"""
response of any mutation on the table "categoryI18n"
"""
type categoryI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [categoryI18n!]!
}

"""
input type for inserting object relation for remote table "categoryI18n"
"""
input categoryI18n_obj_rel_insert_input {
  data: categoryI18n_insert_input!
  on_conflict: categoryI18n_on_conflict
}

"""
on conflict condition type for table "categoryI18n"
"""
input categoryI18n_on_conflict {
  constraint: categoryI18n_constraint!
  update_columns: [categoryI18n_update_column!]!
}

"""
ordering options when selecting data from "categoryI18n"
"""
input categoryI18n_order_by {
  category: category_order_by
  categoryId: order_by
  deletedAt: order_by
  description: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  metaDescription: order_by
  metaTitle: order_by
  name: order_by
  slug: order_by
}

"""
select columns of table "categoryI18n"
"""
enum categoryI18n_select_column {
  """column name"""
  categoryId

  """column name"""
  deletedAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  name

  """column name"""
  slug
}

"""
input type for updating data in table "categoryI18n"
"""
input categoryI18n_set_input {
  categoryId: uuid
  deletedAt: timestamptz
  description: String
  id: uuid
  localeId: uuid
  metaDescription: String
  metaTitle: String
  name: String
  slug: String
}

"""
update columns of table "categoryI18n"
"""
enum categoryI18n_update_column {
  """column name"""
  categoryId

  """column name"""
  deletedAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  name

  """column name"""
  slug
}

"""conflict action"""
enum conflict_action {
  """ignore the insert on this row"""
  ignore

  """update the row with the given values"""
  update
}

"""
columns and relationships of "customField"
"""
type customField {
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  translation: customFieldI18n

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [customFieldI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldI18n_order_by!]

    """filter the rows returned"""
    where: customFieldI18n_bool_exp
  ): [customFieldI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [customFieldI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldI18n_order_by!]

    """filter the rows returned"""
    where: customFieldI18n_bool_exp
  ): customFieldI18n_aggregate!
  value: String!

  """An array relationship"""
  works(
    """distinct select on columns"""
    distinct_on: [customFieldWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldWork_order_by!]

    """filter the rows returned"""
    where: customFieldWork_bool_exp
  ): [customFieldWork!]!

  """An aggregated array relationship"""
  works_aggregate(
    """distinct select on columns"""
    distinct_on: [customFieldWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldWork_order_by!]

    """filter the rows returned"""
    where: customFieldWork_bool_exp
  ): customFieldWork_aggregate!
}

"""
aggregated selection of "customField"
"""
type customField_aggregate {
  aggregate: customField_aggregate_fields
  nodes: [customField!]!
}

"""
aggregate fields of "customField"
"""
type customField_aggregate_fields {
  count(columns: [customField_select_column!], distinct: Boolean): Int
  max: customField_max_fields
  min: customField_min_fields
}

"""
order by aggregate values of table "customField"
"""
input customField_aggregate_order_by {
  count: order_by
  max: customField_max_order_by
  min: customField_min_order_by
}

"""
input type for inserting array relation for remote table "customField"
"""
input customField_arr_rel_insert_input {
  data: [customField_insert_input!]!
  on_conflict: customField_on_conflict
}

"""
Boolean expression to filter rows from the table "customField". All fields are combined with a logical 'AND'.
"""
input customField_bool_exp {
  _and: [customField_bool_exp]
  _not: customField_bool_exp
  _or: [customField_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  translation: customFieldI18n_bool_exp
  translations: customFieldI18n_bool_exp
  value: varchar_comparison_exp
  works: customFieldWork_bool_exp
}

"""
unique or primary key constraints on table "customField"
"""
enum customField_constraint {
  """unique or primary key constraint"""
  PK_ef5b63164d6cba14056f91382d7
}

"""
input type for inserting data into table "customField"
"""
input customField_insert_input {
  deletedAt: timestamptz
  id: uuid
  translation: customFieldI18n_obj_rel_insert_input
  translations: customFieldI18n_arr_rel_insert_input
  value: String
  works: customFieldWork_arr_rel_insert_input
}

"""aggregate max on columns"""
type customField_max_fields {
  deletedAt: timestamptz
  value: String
}

"""
order by max() on columns of table "customField"
"""
input customField_max_order_by {
  deletedAt: order_by
  value: order_by
}

"""aggregate min on columns"""
type customField_min_fields {
  deletedAt: timestamptz
  value: String
}

"""
order by min() on columns of table "customField"
"""
input customField_min_order_by {
  deletedAt: order_by
  value: order_by
}

"""
response of any mutation on the table "customField"
"""
type customField_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [customField!]!
}

"""
input type for inserting object relation for remote table "customField"
"""
input customField_obj_rel_insert_input {
  data: customField_insert_input!
  on_conflict: customField_on_conflict
}

"""
on conflict condition type for table "customField"
"""
input customField_on_conflict {
  constraint: customField_constraint!
  update_columns: [customField_update_column!]!
}

"""
ordering options when selecting data from "customField"
"""
input customField_order_by {
  deletedAt: order_by
  id: order_by
  translation: customFieldI18n_order_by
  translations_aggregate: customFieldI18n_aggregate_order_by
  value: order_by
  works_aggregate: customFieldWork_aggregate_order_by
}

"""
select columns of table "customField"
"""
enum customField_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  value
}

"""
input type for updating data in table "customField"
"""
input customField_set_input {
  deletedAt: timestamptz
  id: uuid
  value: String
}

"""
update columns of table "customField"
"""
enum customField_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  value
}

"""
columns and relationships of "customFieldI18n"
"""
type customFieldI18n {
  """An object relationship"""
  customField: customField!
  customFieldId: uuid!
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  title: String!
}

"""
aggregated selection of "customFieldI18n"
"""
type customFieldI18n_aggregate {
  aggregate: customFieldI18n_aggregate_fields
  nodes: [customFieldI18n!]!
}

"""
aggregate fields of "customFieldI18n"
"""
type customFieldI18n_aggregate_fields {
  count(columns: [customFieldI18n_select_column!], distinct: Boolean): Int
  max: customFieldI18n_max_fields
  min: customFieldI18n_min_fields
}

"""
order by aggregate values of table "customFieldI18n"
"""
input customFieldI18n_aggregate_order_by {
  count: order_by
  max: customFieldI18n_max_order_by
  min: customFieldI18n_min_order_by
}

"""
input type for inserting array relation for remote table "customFieldI18n"
"""
input customFieldI18n_arr_rel_insert_input {
  data: [customFieldI18n_insert_input!]!
  on_conflict: customFieldI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "customFieldI18n". All fields are combined with a logical 'AND'.
"""
input customFieldI18n_bool_exp {
  _and: [customFieldI18n_bool_exp]
  _not: customFieldI18n_bool_exp
  _or: [customFieldI18n_bool_exp]
  customField: customField_bool_exp
  customFieldId: uuid_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  title: varchar_comparison_exp
}

"""
unique or primary key constraints on table "customFieldI18n"
"""
enum customFieldI18n_constraint {
  """unique or primary key constraint"""
  PK_2336bbbb8165877a7a3f13cc567
}

"""
input type for inserting data into table "customFieldI18n"
"""
input customFieldI18n_insert_input {
  customField: customField_obj_rel_insert_input
  customFieldId: uuid
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  title: String
}

"""aggregate max on columns"""
type customFieldI18n_max_fields {
  deletedAt: timestamptz
  title: String
}

"""
order by max() on columns of table "customFieldI18n"
"""
input customFieldI18n_max_order_by {
  deletedAt: order_by
  title: order_by
}

"""aggregate min on columns"""
type customFieldI18n_min_fields {
  deletedAt: timestamptz
  title: String
}

"""
order by min() on columns of table "customFieldI18n"
"""
input customFieldI18n_min_order_by {
  deletedAt: order_by
  title: order_by
}

"""
response of any mutation on the table "customFieldI18n"
"""
type customFieldI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [customFieldI18n!]!
}

"""
input type for inserting object relation for remote table "customFieldI18n"
"""
input customFieldI18n_obj_rel_insert_input {
  data: customFieldI18n_insert_input!
  on_conflict: customFieldI18n_on_conflict
}

"""
on conflict condition type for table "customFieldI18n"
"""
input customFieldI18n_on_conflict {
  constraint: customFieldI18n_constraint!
  update_columns: [customFieldI18n_update_column!]!
}

"""
ordering options when selecting data from "customFieldI18n"
"""
input customFieldI18n_order_by {
  customField: customField_order_by
  customFieldId: order_by
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  title: order_by
}

"""
select columns of table "customFieldI18n"
"""
enum customFieldI18n_select_column {
  """column name"""
  customFieldId

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  title
}

"""
input type for updating data in table "customFieldI18n"
"""
input customFieldI18n_set_input {
  customFieldId: uuid
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  title: String
}

"""
update columns of table "customFieldI18n"
"""
enum customFieldI18n_update_column {
  """column name"""
  customFieldId

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  title
}

"""
columns and relationships of "customFieldWork"
"""
type customFieldWork {
  """An object relationship"""
  customField: customField!
  customFieldId: uuid!

  """An object relationship"""
  work: work!
  workId: uuid!
}

"""
aggregated selection of "customFieldWork"
"""
type customFieldWork_aggregate {
  aggregate: customFieldWork_aggregate_fields
  nodes: [customFieldWork!]!
}

"""
aggregate fields of "customFieldWork"
"""
type customFieldWork_aggregate_fields {
  count(columns: [customFieldWork_select_column!], distinct: Boolean): Int
}

"""
order by aggregate values of table "customFieldWork"
"""
input customFieldWork_aggregate_order_by {
  count: order_by
}

"""
input type for inserting array relation for remote table "customFieldWork"
"""
input customFieldWork_arr_rel_insert_input {
  data: [customFieldWork_insert_input!]!
  on_conflict: customFieldWork_on_conflict
}

"""
Boolean expression to filter rows from the table "customFieldWork". All fields are combined with a logical 'AND'.
"""
input customFieldWork_bool_exp {
  _and: [customFieldWork_bool_exp]
  _not: customFieldWork_bool_exp
  _or: [customFieldWork_bool_exp]
  customField: customField_bool_exp
  customFieldId: uuid_comparison_exp
  work: work_bool_exp
  workId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "customFieldWork"
"""
enum customFieldWork_constraint {
  """unique or primary key constraint"""
  PK_36f3f55fdf7e26723b6a145ba98
}

"""
input type for inserting data into table "customFieldWork"
"""
input customFieldWork_insert_input {
  customField: customField_obj_rel_insert_input
  customFieldId: uuid
  work: work_obj_rel_insert_input
  workId: uuid
}

"""
response of any mutation on the table "customFieldWork"
"""
type customFieldWork_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [customFieldWork!]!
}

"""
input type for inserting object relation for remote table "customFieldWork"
"""
input customFieldWork_obj_rel_insert_input {
  data: customFieldWork_insert_input!
  on_conflict: customFieldWork_on_conflict
}

"""
on conflict condition type for table "customFieldWork"
"""
input customFieldWork_on_conflict {
  constraint: customFieldWork_constraint!
  update_columns: [customFieldWork_update_column!]!
}

"""
ordering options when selecting data from "customFieldWork"
"""
input customFieldWork_order_by {
  customField: customField_order_by
  customFieldId: order_by
  work: work_order_by
  workId: order_by
}

"""
select columns of table "customFieldWork"
"""
enum customFieldWork_select_column {
  """column name"""
  customFieldId

  """column name"""
  workId
}

"""
input type for updating data in table "customFieldWork"
"""
input customFieldWork_set_input {
  customFieldId: uuid
  workId: uuid
}

"""
update columns of table "customFieldWork"
"""
enum customFieldWork_update_column {
  """column name"""
  customFieldId

  """column name"""
  workId
}

"""
columns and relationships of "exhibition"
"""
type exhibition {
  createdAt: timestamptz!
  deletedAt: timestamptz
  endDate: timestamptz!

  """An array relationship"""
  exhibitionCategories(
    """distinct select on columns"""
    distinct_on: [exhibitionCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionCategory_order_by!]

    """filter the rows returned"""
    where: exhibitionCategory_bool_exp
  ): [exhibitionCategory!]!

  """An aggregated array relationship"""
  exhibitionCategories_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionCategory_order_by!]

    """filter the rows returned"""
    where: exhibitionCategory_bool_exp
  ): exhibitionCategory_aggregate!

  """An array relationship"""
  exhibitionWorks(
    """distinct select on columns"""
    distinct_on: [exhibitionWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionWork_order_by!]

    """filter the rows returned"""
    where: exhibitionWork_bool_exp
  ): [exhibitionWork!]!

  """An aggregated array relationship"""
  exhibitionWorks_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionWork_order_by!]

    """filter the rows returned"""
    where: exhibitionWork_bool_exp
  ): exhibitionWork_aggregate!

  """An array relationship"""
  files(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): [file!]!

  """An aggregated array relationship"""
  files_aggregate(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): file_aggregate!
  id: uuid!
  image: String!
  positionOnMainPage: smallint!
  showInMainPage: Boolean!
  startDate: timestamptz!

  """An object relationship"""
  translation: exhibitionI18n

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [exhibitionI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionI18n_order_by!]

    """filter the rows returned"""
    where: exhibitionI18n_bool_exp
  ): [exhibitionI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionI18n_order_by!]

    """filter the rows returned"""
    where: exhibitionI18n_bool_exp
  ): exhibitionI18n_aggregate!
  updatedAt: timestamptz!
}

"""
aggregated selection of "exhibition"
"""
type exhibition_aggregate {
  aggregate: exhibition_aggregate_fields
  nodes: [exhibition!]!
}

"""
aggregate fields of "exhibition"
"""
type exhibition_aggregate_fields {
  avg: exhibition_avg_fields
  count(columns: [exhibition_select_column!], distinct: Boolean): Int
  max: exhibition_max_fields
  min: exhibition_min_fields
  stddev: exhibition_stddev_fields
  stddev_pop: exhibition_stddev_pop_fields
  stddev_samp: exhibition_stddev_samp_fields
  sum: exhibition_sum_fields
  var_pop: exhibition_var_pop_fields
  var_samp: exhibition_var_samp_fields
  variance: exhibition_variance_fields
}

"""
order by aggregate values of table "exhibition"
"""
input exhibition_aggregate_order_by {
  avg: exhibition_avg_order_by
  count: order_by
  max: exhibition_max_order_by
  min: exhibition_min_order_by
  stddev: exhibition_stddev_order_by
  stddev_pop: exhibition_stddev_pop_order_by
  stddev_samp: exhibition_stddev_samp_order_by
  sum: exhibition_sum_order_by
  var_pop: exhibition_var_pop_order_by
  var_samp: exhibition_var_samp_order_by
  variance: exhibition_variance_order_by
}

"""
input type for inserting array relation for remote table "exhibition"
"""
input exhibition_arr_rel_insert_input {
  data: [exhibition_insert_input!]!
  on_conflict: exhibition_on_conflict
}

"""aggregate avg on columns"""
type exhibition_avg_fields {
  positionOnMainPage: Float
}

"""
order by avg() on columns of table "exhibition"
"""
input exhibition_avg_order_by {
  positionOnMainPage: order_by
}

"""
Boolean expression to filter rows from the table "exhibition". All fields are combined with a logical 'AND'.
"""
input exhibition_bool_exp {
  _and: [exhibition_bool_exp]
  _not: exhibition_bool_exp
  _or: [exhibition_bool_exp]
  createdAt: timestamptz_comparison_exp
  deletedAt: timestamptz_comparison_exp
  endDate: timestamptz_comparison_exp
  exhibitionCategories: exhibitionCategory_bool_exp
  exhibitionWorks: exhibitionWork_bool_exp
  files: file_bool_exp
  id: uuid_comparison_exp
  image: varchar_comparison_exp
  positionOnMainPage: smallint_comparison_exp
  showInMainPage: boolean_comparison_exp
  startDate: timestamptz_comparison_exp
  translation: exhibitionI18n_bool_exp
  translations: exhibitionI18n_bool_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "exhibition"
"""
enum exhibition_constraint {
  """unique or primary key constraint"""
  PK_ddc3afc8e0b4daf3b68d51c31f4
}

"""
input type for incrementing integer columne in table "exhibition"
"""
input exhibition_inc_input {
  positionOnMainPage: smallint
}

"""
input type for inserting data into table "exhibition"
"""
input exhibition_insert_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  endDate: timestamptz
  exhibitionCategories: exhibitionCategory_arr_rel_insert_input
  exhibitionWorks: exhibitionWork_arr_rel_insert_input
  files: file_arr_rel_insert_input
  id: uuid
  image: String
  positionOnMainPage: smallint
  showInMainPage: Boolean
  startDate: timestamptz
  translation: exhibitionI18n_obj_rel_insert_input
  translations: exhibitionI18n_arr_rel_insert_input
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type exhibition_max_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  endDate: timestamptz
  image: String
  positionOnMainPage: smallint
  startDate: timestamptz
  updatedAt: timestamptz
}

"""
order by max() on columns of table "exhibition"
"""
input exhibition_max_order_by {
  createdAt: order_by
  deletedAt: order_by
  endDate: order_by
  image: order_by
  positionOnMainPage: order_by
  startDate: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type exhibition_min_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  endDate: timestamptz
  image: String
  positionOnMainPage: smallint
  startDate: timestamptz
  updatedAt: timestamptz
}

"""
order by min() on columns of table "exhibition"
"""
input exhibition_min_order_by {
  createdAt: order_by
  deletedAt: order_by
  endDate: order_by
  image: order_by
  positionOnMainPage: order_by
  startDate: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "exhibition"
"""
type exhibition_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [exhibition!]!
}

"""
input type for inserting object relation for remote table "exhibition"
"""
input exhibition_obj_rel_insert_input {
  data: exhibition_insert_input!
  on_conflict: exhibition_on_conflict
}

"""
on conflict condition type for table "exhibition"
"""
input exhibition_on_conflict {
  constraint: exhibition_constraint!
  update_columns: [exhibition_update_column!]!
}

"""
ordering options when selecting data from "exhibition"
"""
input exhibition_order_by {
  createdAt: order_by
  deletedAt: order_by
  endDate: order_by
  exhibitionCategories_aggregate: exhibitionCategory_aggregate_order_by
  exhibitionWorks_aggregate: exhibitionWork_aggregate_order_by
  files_aggregate: file_aggregate_order_by
  id: order_by
  image: order_by
  positionOnMainPage: order_by
  showInMainPage: order_by
  startDate: order_by
  translation: exhibitionI18n_order_by
  translations_aggregate: exhibitionI18n_aggregate_order_by
  updatedAt: order_by
}

"""
select columns of table "exhibition"
"""
enum exhibition_select_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  endDate

  """column name"""
  id

  """column name"""
  image

  """column name"""
  positionOnMainPage

  """column name"""
  showInMainPage

  """column name"""
  startDate

  """column name"""
  updatedAt
}

"""
input type for updating data in table "exhibition"
"""
input exhibition_set_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  endDate: timestamptz
  id: uuid
  image: String
  positionOnMainPage: smallint
  showInMainPage: Boolean
  startDate: timestamptz
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type exhibition_stddev_fields {
  positionOnMainPage: Float
}

"""
order by stddev() on columns of table "exhibition"
"""
input exhibition_stddev_order_by {
  positionOnMainPage: order_by
}

"""aggregate stddev_pop on columns"""
type exhibition_stddev_pop_fields {
  positionOnMainPage: Float
}

"""
order by stddev_pop() on columns of table "exhibition"
"""
input exhibition_stddev_pop_order_by {
  positionOnMainPage: order_by
}

"""aggregate stddev_samp on columns"""
type exhibition_stddev_samp_fields {
  positionOnMainPage: Float
}

"""
order by stddev_samp() on columns of table "exhibition"
"""
input exhibition_stddev_samp_order_by {
  positionOnMainPage: order_by
}

"""aggregate sum on columns"""
type exhibition_sum_fields {
  positionOnMainPage: smallint
}

"""
order by sum() on columns of table "exhibition"
"""
input exhibition_sum_order_by {
  positionOnMainPage: order_by
}

"""
update columns of table "exhibition"
"""
enum exhibition_update_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  endDate

  """column name"""
  id

  """column name"""
  image

  """column name"""
  positionOnMainPage

  """column name"""
  showInMainPage

  """column name"""
  startDate

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type exhibition_var_pop_fields {
  positionOnMainPage: Float
}

"""
order by var_pop() on columns of table "exhibition"
"""
input exhibition_var_pop_order_by {
  positionOnMainPage: order_by
}

"""aggregate var_samp on columns"""
type exhibition_var_samp_fields {
  positionOnMainPage: Float
}

"""
order by var_samp() on columns of table "exhibition"
"""
input exhibition_var_samp_order_by {
  positionOnMainPage: order_by
}

"""aggregate variance on columns"""
type exhibition_variance_fields {
  positionOnMainPage: Float
}

"""
order by variance() on columns of table "exhibition"
"""
input exhibition_variance_order_by {
  positionOnMainPage: order_by
}

"""
columns and relationships of "exhibitionCategory"
"""
type exhibitionCategory {
  """An object relationship"""
  category: category!
  categoryId: uuid!

  """An object relationship"""
  exhibition: exhibition!
  exhibitionId: uuid!
}

"""
aggregated selection of "exhibitionCategory"
"""
type exhibitionCategory_aggregate {
  aggregate: exhibitionCategory_aggregate_fields
  nodes: [exhibitionCategory!]!
}

"""
aggregate fields of "exhibitionCategory"
"""
type exhibitionCategory_aggregate_fields {
  count(columns: [exhibitionCategory_select_column!], distinct: Boolean): Int
}

"""
order by aggregate values of table "exhibitionCategory"
"""
input exhibitionCategory_aggregate_order_by {
  count: order_by
}

"""
input type for inserting array relation for remote table "exhibitionCategory"
"""
input exhibitionCategory_arr_rel_insert_input {
  data: [exhibitionCategory_insert_input!]!
  on_conflict: exhibitionCategory_on_conflict
}

"""
Boolean expression to filter rows from the table "exhibitionCategory". All fields are combined with a logical 'AND'.
"""
input exhibitionCategory_bool_exp {
  _and: [exhibitionCategory_bool_exp]
  _not: exhibitionCategory_bool_exp
  _or: [exhibitionCategory_bool_exp]
  category: category_bool_exp
  categoryId: uuid_comparison_exp
  exhibition: exhibition_bool_exp
  exhibitionId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "exhibitionCategory"
"""
enum exhibitionCategory_constraint {
  """unique or primary key constraint"""
  PK_db1481dd3e837a35b352a22d0e7
}

"""
input type for inserting data into table "exhibitionCategory"
"""
input exhibitionCategory_insert_input {
  category: category_obj_rel_insert_input
  categoryId: uuid
  exhibition: exhibition_obj_rel_insert_input
  exhibitionId: uuid
}

"""
response of any mutation on the table "exhibitionCategory"
"""
type exhibitionCategory_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [exhibitionCategory!]!
}

"""
input type for inserting object relation for remote table "exhibitionCategory"
"""
input exhibitionCategory_obj_rel_insert_input {
  data: exhibitionCategory_insert_input!
  on_conflict: exhibitionCategory_on_conflict
}

"""
on conflict condition type for table "exhibitionCategory"
"""
input exhibitionCategory_on_conflict {
  constraint: exhibitionCategory_constraint!
  update_columns: [exhibitionCategory_update_column!]!
}

"""
ordering options when selecting data from "exhibitionCategory"
"""
input exhibitionCategory_order_by {
  category: category_order_by
  categoryId: order_by
  exhibition: exhibition_order_by
  exhibitionId: order_by
}

"""
select columns of table "exhibitionCategory"
"""
enum exhibitionCategory_select_column {
  """column name"""
  categoryId

  """column name"""
  exhibitionId
}

"""
input type for updating data in table "exhibitionCategory"
"""
input exhibitionCategory_set_input {
  categoryId: uuid
  exhibitionId: uuid
}

"""
update columns of table "exhibitionCategory"
"""
enum exhibitionCategory_update_column {
  """column name"""
  categoryId

  """column name"""
  exhibitionId
}

"""
columns and relationships of "exhibitionI18n"
"""
type exhibitionI18n {
  body: String!
  deletedAt: timestamptz

  """An object relationship"""
  exhibition: exhibition!
  exhibitionId: uuid!
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  metaDescription: String!
  metaTitle: String!
  slug: String!
  title: String!
}

"""
aggregated selection of "exhibitionI18n"
"""
type exhibitionI18n_aggregate {
  aggregate: exhibitionI18n_aggregate_fields
  nodes: [exhibitionI18n!]!
}

"""
aggregate fields of "exhibitionI18n"
"""
type exhibitionI18n_aggregate_fields {
  count(columns: [exhibitionI18n_select_column!], distinct: Boolean): Int
  max: exhibitionI18n_max_fields
  min: exhibitionI18n_min_fields
}

"""
order by aggregate values of table "exhibitionI18n"
"""
input exhibitionI18n_aggregate_order_by {
  count: order_by
  max: exhibitionI18n_max_order_by
  min: exhibitionI18n_min_order_by
}

"""
input type for inserting array relation for remote table "exhibitionI18n"
"""
input exhibitionI18n_arr_rel_insert_input {
  data: [exhibitionI18n_insert_input!]!
  on_conflict: exhibitionI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "exhibitionI18n". All fields are combined with a logical 'AND'.
"""
input exhibitionI18n_bool_exp {
  _and: [exhibitionI18n_bool_exp]
  _not: exhibitionI18n_bool_exp
  _or: [exhibitionI18n_bool_exp]
  body: text_comparison_exp
  deletedAt: timestamptz_comparison_exp
  exhibition: exhibition_bool_exp
  exhibitionId: uuid_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  metaDescription: varchar_comparison_exp
  metaTitle: varchar_comparison_exp
  slug: varchar_comparison_exp
  title: varchar_comparison_exp
}

"""
unique or primary key constraints on table "exhibitionI18n"
"""
enum exhibitionI18n_constraint {
  """unique or primary key constraint"""
  PK_8920747e651d33f2848e69c6e6c

  """unique or primary key constraint"""
  UQ_1cfbae4a65eefa5dc40109a6442
}

"""
input type for inserting data into table "exhibitionI18n"
"""
input exhibitionI18n_insert_input {
  body: String
  deletedAt: timestamptz
  exhibition: exhibition_obj_rel_insert_input
  exhibitionId: uuid
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""aggregate max on columns"""
type exhibitionI18n_max_fields {
  body: String
  deletedAt: timestamptz
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""
order by max() on columns of table "exhibitionI18n"
"""
input exhibitionI18n_max_order_by {
  body: order_by
  deletedAt: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
}

"""aggregate min on columns"""
type exhibitionI18n_min_fields {
  body: String
  deletedAt: timestamptz
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""
order by min() on columns of table "exhibitionI18n"
"""
input exhibitionI18n_min_order_by {
  body: order_by
  deletedAt: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
}

"""
response of any mutation on the table "exhibitionI18n"
"""
type exhibitionI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [exhibitionI18n!]!
}

"""
input type for inserting object relation for remote table "exhibitionI18n"
"""
input exhibitionI18n_obj_rel_insert_input {
  data: exhibitionI18n_insert_input!
  on_conflict: exhibitionI18n_on_conflict
}

"""
on conflict condition type for table "exhibitionI18n"
"""
input exhibitionI18n_on_conflict {
  constraint: exhibitionI18n_constraint!
  update_columns: [exhibitionI18n_update_column!]!
}

"""
ordering options when selecting data from "exhibitionI18n"
"""
input exhibitionI18n_order_by {
  body: order_by
  deletedAt: order_by
  exhibition: exhibition_order_by
  exhibitionId: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
}

"""
select columns of table "exhibitionI18n"
"""
enum exhibitionI18n_select_column {
  """column name"""
  body

  """column name"""
  deletedAt

  """column name"""
  exhibitionId

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  slug

  """column name"""
  title
}

"""
input type for updating data in table "exhibitionI18n"
"""
input exhibitionI18n_set_input {
  body: String
  deletedAt: timestamptz
  exhibitionId: uuid
  id: uuid
  localeId: uuid
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""
update columns of table "exhibitionI18n"
"""
enum exhibitionI18n_update_column {
  """column name"""
  body

  """column name"""
  deletedAt

  """column name"""
  exhibitionId

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  slug

  """column name"""
  title
}

"""
columns and relationships of "exhibitionWork"
"""
type exhibitionWork {
  """An object relationship"""
  exhibition: exhibition!
  exhibitionId: uuid!

  """An object relationship"""
  work: work!
  workId: uuid!
}

"""
aggregated selection of "exhibitionWork"
"""
type exhibitionWork_aggregate {
  aggregate: exhibitionWork_aggregate_fields
  nodes: [exhibitionWork!]!
}

"""
aggregate fields of "exhibitionWork"
"""
type exhibitionWork_aggregate_fields {
  count(columns: [exhibitionWork_select_column!], distinct: Boolean): Int
}

"""
order by aggregate values of table "exhibitionWork"
"""
input exhibitionWork_aggregate_order_by {
  count: order_by
}

"""
input type for inserting array relation for remote table "exhibitionWork"
"""
input exhibitionWork_arr_rel_insert_input {
  data: [exhibitionWork_insert_input!]!
  on_conflict: exhibitionWork_on_conflict
}

"""
Boolean expression to filter rows from the table "exhibitionWork". All fields are combined with a logical 'AND'.
"""
input exhibitionWork_bool_exp {
  _and: [exhibitionWork_bool_exp]
  _not: exhibitionWork_bool_exp
  _or: [exhibitionWork_bool_exp]
  exhibition: exhibition_bool_exp
  exhibitionId: uuid_comparison_exp
  work: work_bool_exp
  workId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "exhibitionWork"
"""
enum exhibitionWork_constraint {
  """unique or primary key constraint"""
  PK_c8b738fe37480818a528abfeb6a
}

"""
input type for inserting data into table "exhibitionWork"
"""
input exhibitionWork_insert_input {
  exhibition: exhibition_obj_rel_insert_input
  exhibitionId: uuid
  work: work_obj_rel_insert_input
  workId: uuid
}

"""
response of any mutation on the table "exhibitionWork"
"""
type exhibitionWork_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [exhibitionWork!]!
}

"""
input type for inserting object relation for remote table "exhibitionWork"
"""
input exhibitionWork_obj_rel_insert_input {
  data: exhibitionWork_insert_input!
  on_conflict: exhibitionWork_on_conflict
}

"""
on conflict condition type for table "exhibitionWork"
"""
input exhibitionWork_on_conflict {
  constraint: exhibitionWork_constraint!
  update_columns: [exhibitionWork_update_column!]!
}

"""
ordering options when selecting data from "exhibitionWork"
"""
input exhibitionWork_order_by {
  exhibition: exhibition_order_by
  exhibitionId: order_by
  work: work_order_by
  workId: order_by
}

"""
select columns of table "exhibitionWork"
"""
enum exhibitionWork_select_column {
  """column name"""
  exhibitionId

  """column name"""
  workId
}

"""
input type for updating data in table "exhibitionWork"
"""
input exhibitionWork_set_input {
  exhibitionId: uuid
  workId: uuid
}

"""
update columns of table "exhibitionWork"
"""
enum exhibitionWork_update_column {
  """column name"""
  exhibitionId

  """column name"""
  workId
}

"""
columns and relationships of "file"
"""
type file {
  deletedAt: timestamptz

  """An object relationship"""
  exhibition: exhibition
  exhibitionId: uuid
  id: uuid!
  name: String!
  numberOfDownloads: smallint!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [fileI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fileI18n_order_by!]

    """filter the rows returned"""
    where: fileI18n_bool_exp
  ): [fileI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [fileI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fileI18n_order_by!]

    """filter the rows returned"""
    where: fileI18n_bool_exp
  ): fileI18n_aggregate!
}

"""
aggregated selection of "file"
"""
type file_aggregate {
  aggregate: file_aggregate_fields
  nodes: [file!]!
}

"""
aggregate fields of "file"
"""
type file_aggregate_fields {
  avg: file_avg_fields
  count(columns: [file_select_column!], distinct: Boolean): Int
  max: file_max_fields
  min: file_min_fields
  stddev: file_stddev_fields
  stddev_pop: file_stddev_pop_fields
  stddev_samp: file_stddev_samp_fields
  sum: file_sum_fields
  var_pop: file_var_pop_fields
  var_samp: file_var_samp_fields
  variance: file_variance_fields
}

"""
order by aggregate values of table "file"
"""
input file_aggregate_order_by {
  avg: file_avg_order_by
  count: order_by
  max: file_max_order_by
  min: file_min_order_by
  stddev: file_stddev_order_by
  stddev_pop: file_stddev_pop_order_by
  stddev_samp: file_stddev_samp_order_by
  sum: file_sum_order_by
  var_pop: file_var_pop_order_by
  var_samp: file_var_samp_order_by
  variance: file_variance_order_by
}

"""
input type for inserting array relation for remote table "file"
"""
input file_arr_rel_insert_input {
  data: [file_insert_input!]!
  on_conflict: file_on_conflict
}

"""aggregate avg on columns"""
type file_avg_fields {
  numberOfDownloads: Float
}

"""
order by avg() on columns of table "file"
"""
input file_avg_order_by {
  numberOfDownloads: order_by
}

"""
Boolean expression to filter rows from the table "file". All fields are combined with a logical 'AND'.
"""
input file_bool_exp {
  _and: [file_bool_exp]
  _not: file_bool_exp
  _or: [file_bool_exp]
  deletedAt: timestamptz_comparison_exp
  exhibition: exhibition_bool_exp
  exhibitionId: uuid_comparison_exp
  id: uuid_comparison_exp
  name: text_comparison_exp
  numberOfDownloads: smallint_comparison_exp
  translations: fileI18n_bool_exp
}

"""
unique or primary key constraints on table "file"
"""
enum file_constraint {
  """unique or primary key constraint"""
  PK_36b46d232307066b3a2c9ea3a1d
}

"""
input type for incrementing integer columne in table "file"
"""
input file_inc_input {
  numberOfDownloads: smallint
}

"""
input type for inserting data into table "file"
"""
input file_insert_input {
  deletedAt: timestamptz
  exhibition: exhibition_obj_rel_insert_input
  exhibitionId: uuid
  id: uuid
  name: String
  numberOfDownloads: smallint
  translations: fileI18n_arr_rel_insert_input
}

"""aggregate max on columns"""
type file_max_fields {
  deletedAt: timestamptz
  name: String
  numberOfDownloads: smallint
}

"""
order by max() on columns of table "file"
"""
input file_max_order_by {
  deletedAt: order_by
  name: order_by
  numberOfDownloads: order_by
}

"""aggregate min on columns"""
type file_min_fields {
  deletedAt: timestamptz
  name: String
  numberOfDownloads: smallint
}

"""
order by min() on columns of table "file"
"""
input file_min_order_by {
  deletedAt: order_by
  name: order_by
  numberOfDownloads: order_by
}

"""
response of any mutation on the table "file"
"""
type file_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [file!]!
}

"""
input type for inserting object relation for remote table "file"
"""
input file_obj_rel_insert_input {
  data: file_insert_input!
  on_conflict: file_on_conflict
}

"""
on conflict condition type for table "file"
"""
input file_on_conflict {
  constraint: file_constraint!
  update_columns: [file_update_column!]!
}

"""
ordering options when selecting data from "file"
"""
input file_order_by {
  deletedAt: order_by
  exhibition: exhibition_order_by
  exhibitionId: order_by
  id: order_by
  name: order_by
  numberOfDownloads: order_by
  translations_aggregate: fileI18n_aggregate_order_by
}

"""
select columns of table "file"
"""
enum file_select_column {
  """column name"""
  deletedAt

  """column name"""
  exhibitionId

  """column name"""
  id

  """column name"""
  name

  """column name"""
  numberOfDownloads
}

"""
input type for updating data in table "file"
"""
input file_set_input {
  deletedAt: timestamptz
  exhibitionId: uuid
  id: uuid
  name: String
  numberOfDownloads: smallint
}

"""aggregate stddev on columns"""
type file_stddev_fields {
  numberOfDownloads: Float
}

"""
order by stddev() on columns of table "file"
"""
input file_stddev_order_by {
  numberOfDownloads: order_by
}

"""aggregate stddev_pop on columns"""
type file_stddev_pop_fields {
  numberOfDownloads: Float
}

"""
order by stddev_pop() on columns of table "file"
"""
input file_stddev_pop_order_by {
  numberOfDownloads: order_by
}

"""aggregate stddev_samp on columns"""
type file_stddev_samp_fields {
  numberOfDownloads: Float
}

"""
order by stddev_samp() on columns of table "file"
"""
input file_stddev_samp_order_by {
  numberOfDownloads: order_by
}

"""aggregate sum on columns"""
type file_sum_fields {
  numberOfDownloads: smallint
}

"""
order by sum() on columns of table "file"
"""
input file_sum_order_by {
  numberOfDownloads: order_by
}

"""
update columns of table "file"
"""
enum file_update_column {
  """column name"""
  deletedAt

  """column name"""
  exhibitionId

  """column name"""
  id

  """column name"""
  name

  """column name"""
  numberOfDownloads
}

"""aggregate var_pop on columns"""
type file_var_pop_fields {
  numberOfDownloads: Float
}

"""
order by var_pop() on columns of table "file"
"""
input file_var_pop_order_by {
  numberOfDownloads: order_by
}

"""aggregate var_samp on columns"""
type file_var_samp_fields {
  numberOfDownloads: Float
}

"""
order by var_samp() on columns of table "file"
"""
input file_var_samp_order_by {
  numberOfDownloads: order_by
}

"""aggregate variance on columns"""
type file_variance_fields {
  numberOfDownloads: Float
}

"""
order by variance() on columns of table "file"
"""
input file_variance_order_by {
  numberOfDownloads: order_by
}

"""
columns and relationships of "fileI18n"
"""
type fileI18n {
  deletedAt: timestamptz

  """An object relationship"""
  file: file!
  fileId: uuid!
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  title: String
}

"""
aggregated selection of "fileI18n"
"""
type fileI18n_aggregate {
  aggregate: fileI18n_aggregate_fields
  nodes: [fileI18n!]!
}

"""
aggregate fields of "fileI18n"
"""
type fileI18n_aggregate_fields {
  count(columns: [fileI18n_select_column!], distinct: Boolean): Int
  max: fileI18n_max_fields
  min: fileI18n_min_fields
}

"""
order by aggregate values of table "fileI18n"
"""
input fileI18n_aggregate_order_by {
  count: order_by
  max: fileI18n_max_order_by
  min: fileI18n_min_order_by
}

"""
input type for inserting array relation for remote table "fileI18n"
"""
input fileI18n_arr_rel_insert_input {
  data: [fileI18n_insert_input!]!
  on_conflict: fileI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "fileI18n". All fields are combined with a logical 'AND'.
"""
input fileI18n_bool_exp {
  _and: [fileI18n_bool_exp]
  _not: fileI18n_bool_exp
  _or: [fileI18n_bool_exp]
  deletedAt: timestamptz_comparison_exp
  file: file_bool_exp
  fileId: uuid_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  title: varchar_comparison_exp
}

"""
unique or primary key constraints on table "fileI18n"
"""
enum fileI18n_constraint {
  """unique or primary key constraint"""
  PK_3a40d233c5f05805dc2b1f1ab51
}

"""
input type for inserting data into table "fileI18n"
"""
input fileI18n_insert_input {
  deletedAt: timestamptz
  file: file_obj_rel_insert_input
  fileId: uuid
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  title: String
}

"""aggregate max on columns"""
type fileI18n_max_fields {
  deletedAt: timestamptz
  title: String
}

"""
order by max() on columns of table "fileI18n"
"""
input fileI18n_max_order_by {
  deletedAt: order_by
  title: order_by
}

"""aggregate min on columns"""
type fileI18n_min_fields {
  deletedAt: timestamptz
  title: String
}

"""
order by min() on columns of table "fileI18n"
"""
input fileI18n_min_order_by {
  deletedAt: order_by
  title: order_by
}

"""
response of any mutation on the table "fileI18n"
"""
type fileI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [fileI18n!]!
}

"""
input type for inserting object relation for remote table "fileI18n"
"""
input fileI18n_obj_rel_insert_input {
  data: fileI18n_insert_input!
  on_conflict: fileI18n_on_conflict
}

"""
on conflict condition type for table "fileI18n"
"""
input fileI18n_on_conflict {
  constraint: fileI18n_constraint!
  update_columns: [fileI18n_update_column!]!
}

"""
ordering options when selecting data from "fileI18n"
"""
input fileI18n_order_by {
  deletedAt: order_by
  file: file_order_by
  fileId: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  title: order_by
}

"""
select columns of table "fileI18n"
"""
enum fileI18n_select_column {
  """column name"""
  deletedAt

  """column name"""
  fileId

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  title
}

"""
input type for updating data in table "fileI18n"
"""
input fileI18n_set_input {
  deletedAt: timestamptz
  fileId: uuid
  id: uuid
  localeId: uuid
  title: String
}

"""
update columns of table "fileI18n"
"""
enum fileI18n_update_column {
  """column name"""
  deletedAt

  """column name"""
  fileId

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  title
}

scalar jsonb

"""
expression to compare columns of type jsonb. All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb]
}

"""
columns and relationships of "link"
"""
type link {
  """An object relationship"""
  artist: artist
  artistId: uuid
  deletedAt: timestamptz
  id: uuid!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [linkI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [linkI18n_order_by!]

    """filter the rows returned"""
    where: linkI18n_bool_exp
  ): [linkI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [linkI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [linkI18n_order_by!]

    """filter the rows returned"""
    where: linkI18n_bool_exp
  ): linkI18n_aggregate!
  url: String!
}

"""
aggregated selection of "link"
"""
type link_aggregate {
  aggregate: link_aggregate_fields
  nodes: [link!]!
}

"""
aggregate fields of "link"
"""
type link_aggregate_fields {
  count(columns: [link_select_column!], distinct: Boolean): Int
  max: link_max_fields
  min: link_min_fields
}

"""
order by aggregate values of table "link"
"""
input link_aggregate_order_by {
  count: order_by
  max: link_max_order_by
  min: link_min_order_by
}

"""
input type for inserting array relation for remote table "link"
"""
input link_arr_rel_insert_input {
  data: [link_insert_input!]!
  on_conflict: link_on_conflict
}

"""
Boolean expression to filter rows from the table "link". All fields are combined with a logical 'AND'.
"""
input link_bool_exp {
  _and: [link_bool_exp]
  _not: link_bool_exp
  _or: [link_bool_exp]
  artist: artist_bool_exp
  artistId: uuid_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  translations: linkI18n_bool_exp
  url: text_comparison_exp
}

"""
unique or primary key constraints on table "link"
"""
enum link_constraint {
  """unique or primary key constraint"""
  PK_26206fb7186da72fbb9eaa3fac9
}

"""
input type for inserting data into table "link"
"""
input link_insert_input {
  artist: artist_obj_rel_insert_input
  artistId: uuid
  deletedAt: timestamptz
  id: uuid
  translations: linkI18n_arr_rel_insert_input
  url: String
}

"""aggregate max on columns"""
type link_max_fields {
  deletedAt: timestamptz
  url: String
}

"""
order by max() on columns of table "link"
"""
input link_max_order_by {
  deletedAt: order_by
  url: order_by
}

"""aggregate min on columns"""
type link_min_fields {
  deletedAt: timestamptz
  url: String
}

"""
order by min() on columns of table "link"
"""
input link_min_order_by {
  deletedAt: order_by
  url: order_by
}

"""
response of any mutation on the table "link"
"""
type link_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [link!]!
}

"""
input type for inserting object relation for remote table "link"
"""
input link_obj_rel_insert_input {
  data: link_insert_input!
  on_conflict: link_on_conflict
}

"""
on conflict condition type for table "link"
"""
input link_on_conflict {
  constraint: link_constraint!
  update_columns: [link_update_column!]!
}

"""
ordering options when selecting data from "link"
"""
input link_order_by {
  artist: artist_order_by
  artistId: order_by
  deletedAt: order_by
  id: order_by
  translations_aggregate: linkI18n_aggregate_order_by
  url: order_by
}

"""
select columns of table "link"
"""
enum link_select_column {
  """column name"""
  artistId

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  url
}

"""
input type for updating data in table "link"
"""
input link_set_input {
  artistId: uuid
  deletedAt: timestamptz
  id: uuid
  url: String
}

"""
update columns of table "link"
"""
enum link_update_column {
  """column name"""
  artistId

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  url
}

"""
columns and relationships of "linkI18n"
"""
type linkI18n {
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  link: locale!
  linkId: uuid!

  """An object relationship"""
  locale: link!
  localeId: uuid!
  title: String
}

"""
aggregated selection of "linkI18n"
"""
type linkI18n_aggregate {
  aggregate: linkI18n_aggregate_fields
  nodes: [linkI18n!]!
}

"""
aggregate fields of "linkI18n"
"""
type linkI18n_aggregate_fields {
  count(columns: [linkI18n_select_column!], distinct: Boolean): Int
  max: linkI18n_max_fields
  min: linkI18n_min_fields
}

"""
order by aggregate values of table "linkI18n"
"""
input linkI18n_aggregate_order_by {
  count: order_by
  max: linkI18n_max_order_by
  min: linkI18n_min_order_by
}

"""
input type for inserting array relation for remote table "linkI18n"
"""
input linkI18n_arr_rel_insert_input {
  data: [linkI18n_insert_input!]!
  on_conflict: linkI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "linkI18n". All fields are combined with a logical 'AND'.
"""
input linkI18n_bool_exp {
  _and: [linkI18n_bool_exp]
  _not: linkI18n_bool_exp
  _or: [linkI18n_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  link: locale_bool_exp
  linkId: uuid_comparison_exp
  locale: link_bool_exp
  localeId: uuid_comparison_exp
  title: varchar_comparison_exp
}

"""
unique or primary key constraints on table "linkI18n"
"""
enum linkI18n_constraint {
  """unique or primary key constraint"""
  PK_d01ddd67a5c6aa51df5af8e1702
}

"""
input type for inserting data into table "linkI18n"
"""
input linkI18n_insert_input {
  deletedAt: timestamptz
  id: uuid
  link: locale_obj_rel_insert_input
  linkId: uuid
  locale: link_obj_rel_insert_input
  localeId: uuid
  title: String
}

"""aggregate max on columns"""
type linkI18n_max_fields {
  deletedAt: timestamptz
  title: String
}

"""
order by max() on columns of table "linkI18n"
"""
input linkI18n_max_order_by {
  deletedAt: order_by
  title: order_by
}

"""aggregate min on columns"""
type linkI18n_min_fields {
  deletedAt: timestamptz
  title: String
}

"""
order by min() on columns of table "linkI18n"
"""
input linkI18n_min_order_by {
  deletedAt: order_by
  title: order_by
}

"""
response of any mutation on the table "linkI18n"
"""
type linkI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [linkI18n!]!
}

"""
input type for inserting object relation for remote table "linkI18n"
"""
input linkI18n_obj_rel_insert_input {
  data: linkI18n_insert_input!
  on_conflict: linkI18n_on_conflict
}

"""
on conflict condition type for table "linkI18n"
"""
input linkI18n_on_conflict {
  constraint: linkI18n_constraint!
  update_columns: [linkI18n_update_column!]!
}

"""
ordering options when selecting data from "linkI18n"
"""
input linkI18n_order_by {
  deletedAt: order_by
  id: order_by
  link: locale_order_by
  linkId: order_by
  locale: link_order_by
  localeId: order_by
  title: order_by
}

"""
select columns of table "linkI18n"
"""
enum linkI18n_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  linkId

  """column name"""
  localeId

  """column name"""
  title
}

"""
input type for updating data in table "linkI18n"
"""
input linkI18n_set_input {
  deletedAt: timestamptz
  id: uuid
  linkId: uuid
  localeId: uuid
  title: String
}

"""
update columns of table "linkI18n"
"""
enum linkI18n_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  linkId

  """column name"""
  localeId

  """column name"""
  title
}

"""
columns and relationships of "locale"
"""
type locale {
  """An array relationship"""
  artistTranslations(
    """distinct select on columns"""
    distinct_on: [artistI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistI18n_order_by!]

    """filter the rows returned"""
    where: artistI18n_bool_exp
  ): [artistI18n!]!

  """An aggregated array relationship"""
  artistTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [artistI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistI18n_order_by!]

    """filter the rows returned"""
    where: artistI18n_bool_exp
  ): artistI18n_aggregate!

  """An array relationship"""
  basisTranslations(
    """distinct select on columns"""
    distinct_on: [basisI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basisI18n_order_by!]

    """filter the rows returned"""
    where: basisI18n_bool_exp
  ): [basisI18n!]!

  """An aggregated array relationship"""
  basisTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [basisI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basisI18n_order_by!]

    """filter the rows returned"""
    where: basisI18n_bool_exp
  ): basisI18n_aggregate!

  """An array relationship"""
  categoryTranslations(
    """distinct select on columns"""
    distinct_on: [categoryI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categoryI18n_order_by!]

    """filter the rows returned"""
    where: categoryI18n_bool_exp
  ): [categoryI18n!]!

  """An aggregated array relationship"""
  categoryTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [categoryI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categoryI18n_order_by!]

    """filter the rows returned"""
    where: categoryI18n_bool_exp
  ): categoryI18n_aggregate!
  currencyCode: String!

  """An array relationship"""
  customFieldTranslations(
    """distinct select on columns"""
    distinct_on: [customFieldI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldI18n_order_by!]

    """filter the rows returned"""
    where: customFieldI18n_bool_exp
  ): [customFieldI18n!]!

  """An aggregated array relationship"""
  customFieldTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [customFieldI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldI18n_order_by!]

    """filter the rows returned"""
    where: customFieldI18n_bool_exp
  ): customFieldI18n_aggregate!
  deletedAt: timestamptz

  """An array relationship"""
  exhibitionTranslations(
    """distinct select on columns"""
    distinct_on: [exhibitionI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionI18n_order_by!]

    """filter the rows returned"""
    where: exhibitionI18n_bool_exp
  ): [exhibitionI18n!]!

  """An aggregated array relationship"""
  exhibitionTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionI18n_order_by!]

    """filter the rows returned"""
    where: exhibitionI18n_bool_exp
  ): exhibitionI18n_aggregate!

  """An array relationship"""
  fileTranslations(
    """distinct select on columns"""
    distinct_on: [fileI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fileI18n_order_by!]

    """filter the rows returned"""
    where: fileI18n_bool_exp
  ): [fileI18n!]!

  """An aggregated array relationship"""
  fileTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [fileI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fileI18n_order_by!]

    """filter the rows returned"""
    where: fileI18n_bool_exp
  ): fileI18n_aggregate!
  icon: String!
  id: uuid!
  isDefault: Boolean!
  isEnabled: Boolean!

  """An array relationship"""
  linkTranslations(
    """distinct select on columns"""
    distinct_on: [linkI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [linkI18n_order_by!]

    """filter the rows returned"""
    where: linkI18n_bool_exp
  ): [linkI18n!]!

  """An aggregated array relationship"""
  linkTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [linkI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [linkI18n_order_by!]

    """filter the rows returned"""
    where: linkI18n_bool_exp
  ): linkI18n_aggregate!
  name: String!

  """An array relationship"""
  navigationTranslations(
    """distinct select on columns"""
    distinct_on: [navigationI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigationI18n_order_by!]

    """filter the rows returned"""
    where: navigationI18n_bool_exp
  ): [navigationI18n!]!

  """An aggregated array relationship"""
  navigationTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [navigationI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigationI18n_order_by!]

    """filter the rows returned"""
    where: navigationI18n_bool_exp
  ): navigationI18n_aggregate!

  """An array relationship"""
  newsTranslations(
    """distinct select on columns"""
    distinct_on: [newsI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsI18n_order_by!]

    """filter the rows returned"""
    where: newsI18n_bool_exp
  ): [newsI18n!]!

  """An aggregated array relationship"""
  newsTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [newsI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsI18n_order_by!]

    """filter the rows returned"""
    where: newsI18n_bool_exp
  ): newsI18n_aggregate!

  """An array relationship"""
  pageTranslations(
    """distinct select on columns"""
    distinct_on: [pageI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pageI18n_order_by!]

    """filter the rows returned"""
    where: pageI18n_bool_exp
  ): [pageI18n!]!

  """An aggregated array relationship"""
  pageTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [pageI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pageI18n_order_by!]

    """filter the rows returned"""
    where: pageI18n_bool_exp
  ): pageI18n_aggregate!

  """An array relationship"""
  provenanceTranslations(
    """distinct select on columns"""
    distinct_on: [provenanceI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenanceI18n_order_by!]

    """filter the rows returned"""
    where: provenanceI18n_bool_exp
  ): [provenanceI18n!]!

  """An aggregated array relationship"""
  provenanceTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [provenanceI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenanceI18n_order_by!]

    """filter the rows returned"""
    where: provenanceI18n_bool_exp
  ): provenanceI18n_aggregate!

  """An array relationship"""
  schoolTranslations(
    """distinct select on columns"""
    distinct_on: [schoolI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolI18n_order_by!]

    """filter the rows returned"""
    where: schoolI18n_bool_exp
  ): [schoolI18n!]!

  """An aggregated array relationship"""
  schoolTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [schoolI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolI18n_order_by!]

    """filter the rows returned"""
    where: schoolI18n_bool_exp
  ): schoolI18n_aggregate!

  """An array relationship"""
  siteTranslations(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): [translation!]!

  """An aggregated array relationship"""
  siteTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): translation_aggregate!

  """An array relationship"""
  sliderTranslations(
    """distinct select on columns"""
    distinct_on: [sliderI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sliderI18n_order_by!]

    """filter the rows returned"""
    where: sliderI18n_bool_exp
  ): [sliderI18n!]!

  """An aggregated array relationship"""
  sliderTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [sliderI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sliderI18n_order_by!]

    """filter the rows returned"""
    where: sliderI18n_bool_exp
  ): sliderI18n_aggregate!

  """An array relationship"""
  tagTranslations(
    """distinct select on columns"""
    distinct_on: [tagI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagI18n_order_by!]

    """filter the rows returned"""
    where: tagI18n_bool_exp
  ): [tagI18n!]!

  """An aggregated array relationship"""
  tagTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [tagI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagI18n_order_by!]

    """filter the rows returned"""
    where: tagI18n_bool_exp
  ): tagI18n_aggregate!

  """An array relationship"""
  techniqueTranslations(
    """distinct select on columns"""
    distinct_on: [techniqueI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [techniqueI18n_order_by!]

    """filter the rows returned"""
    where: techniqueI18n_bool_exp
  ): [techniqueI18n!]!

  """An aggregated array relationship"""
  techniqueTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [techniqueI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [techniqueI18n_order_by!]

    """filter the rows returned"""
    where: techniqueI18n_bool_exp
  ): techniqueI18n_aggregate!

  """An array relationship"""
  workTranslations(
    """distinct select on columns"""
    distinct_on: [workI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workI18n_order_by!]

    """filter the rows returned"""
    where: workI18n_bool_exp
  ): [workI18n!]!

  """An aggregated array relationship"""
  workTranslations_aggregate(
    """distinct select on columns"""
    distinct_on: [workI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workI18n_order_by!]

    """filter the rows returned"""
    where: workI18n_bool_exp
  ): workI18n_aggregate!
}

"""
aggregated selection of "locale"
"""
type locale_aggregate {
  aggregate: locale_aggregate_fields
  nodes: [locale!]!
}

"""
aggregate fields of "locale"
"""
type locale_aggregate_fields {
  count(columns: [locale_select_column!], distinct: Boolean): Int
  max: locale_max_fields
  min: locale_min_fields
}

"""
order by aggregate values of table "locale"
"""
input locale_aggregate_order_by {
  count: order_by
  max: locale_max_order_by
  min: locale_min_order_by
}

"""
input type for inserting array relation for remote table "locale"
"""
input locale_arr_rel_insert_input {
  data: [locale_insert_input!]!
  on_conflict: locale_on_conflict
}

"""
Boolean expression to filter rows from the table "locale". All fields are combined with a logical 'AND'.
"""
input locale_bool_exp {
  _and: [locale_bool_exp]
  _not: locale_bool_exp
  _or: [locale_bool_exp]
  artistTranslations: artistI18n_bool_exp
  basisTranslations: basisI18n_bool_exp
  categoryTranslations: categoryI18n_bool_exp
  currencyCode: varchar_comparison_exp
  customFieldTranslations: customFieldI18n_bool_exp
  deletedAt: timestamptz_comparison_exp
  exhibitionTranslations: exhibitionI18n_bool_exp
  fileTranslations: fileI18n_bool_exp
  icon: varchar_comparison_exp
  id: uuid_comparison_exp
  isDefault: boolean_comparison_exp
  isEnabled: boolean_comparison_exp
  linkTranslations: linkI18n_bool_exp
  name: varchar_comparison_exp
  navigationTranslations: navigationI18n_bool_exp
  newsTranslations: newsI18n_bool_exp
  pageTranslations: pageI18n_bool_exp
  provenanceTranslations: provenanceI18n_bool_exp
  schoolTranslations: schoolI18n_bool_exp
  siteTranslations: translation_bool_exp
  sliderTranslations: sliderI18n_bool_exp
  tagTranslations: tagI18n_bool_exp
  techniqueTranslations: techniqueI18n_bool_exp
  workTranslations: workI18n_bool_exp
}

"""
unique or primary key constraints on table "locale"
"""
enum locale_constraint {
  """unique or primary key constraint"""
  PK_4b7a3ebe8ec48f1bb2c4b80e349
}

"""
input type for inserting data into table "locale"
"""
input locale_insert_input {
  artistTranslations: artistI18n_arr_rel_insert_input
  basisTranslations: basisI18n_arr_rel_insert_input
  categoryTranslations: categoryI18n_arr_rel_insert_input
  currencyCode: String
  customFieldTranslations: customFieldI18n_arr_rel_insert_input
  deletedAt: timestamptz
  exhibitionTranslations: exhibitionI18n_arr_rel_insert_input
  fileTranslations: fileI18n_arr_rel_insert_input
  icon: String
  id: uuid
  isDefault: Boolean
  isEnabled: Boolean
  linkTranslations: linkI18n_arr_rel_insert_input
  name: String
  navigationTranslations: navigationI18n_arr_rel_insert_input
  newsTranslations: newsI18n_arr_rel_insert_input
  pageTranslations: pageI18n_arr_rel_insert_input
  provenanceTranslations: provenanceI18n_arr_rel_insert_input
  schoolTranslations: schoolI18n_arr_rel_insert_input
  siteTranslations: translation_arr_rel_insert_input
  sliderTranslations: sliderI18n_arr_rel_insert_input
  tagTranslations: tagI18n_arr_rel_insert_input
  techniqueTranslations: techniqueI18n_arr_rel_insert_input
  workTranslations: workI18n_arr_rel_insert_input
}

"""aggregate max on columns"""
type locale_max_fields {
  currencyCode: String
  deletedAt: timestamptz
  icon: String
  name: String
}

"""
order by max() on columns of table "locale"
"""
input locale_max_order_by {
  currencyCode: order_by
  deletedAt: order_by
  icon: order_by
  name: order_by
}

"""aggregate min on columns"""
type locale_min_fields {
  currencyCode: String
  deletedAt: timestamptz
  icon: String
  name: String
}

"""
order by min() on columns of table "locale"
"""
input locale_min_order_by {
  currencyCode: order_by
  deletedAt: order_by
  icon: order_by
  name: order_by
}

"""
response of any mutation on the table "locale"
"""
type locale_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [locale!]!
}

"""
input type for inserting object relation for remote table "locale"
"""
input locale_obj_rel_insert_input {
  data: locale_insert_input!
  on_conflict: locale_on_conflict
}

"""
on conflict condition type for table "locale"
"""
input locale_on_conflict {
  constraint: locale_constraint!
  update_columns: [locale_update_column!]!
}

"""
ordering options when selecting data from "locale"
"""
input locale_order_by {
  artistTranslations_aggregate: artistI18n_aggregate_order_by
  basisTranslations_aggregate: basisI18n_aggregate_order_by
  categoryTranslations_aggregate: categoryI18n_aggregate_order_by
  currencyCode: order_by
  customFieldTranslations_aggregate: customFieldI18n_aggregate_order_by
  deletedAt: order_by
  exhibitionTranslations_aggregate: exhibitionI18n_aggregate_order_by
  fileTranslations_aggregate: fileI18n_aggregate_order_by
  icon: order_by
  id: order_by
  isDefault: order_by
  isEnabled: order_by
  linkTranslations_aggregate: linkI18n_aggregate_order_by
  name: order_by
  navigationTranslations_aggregate: navigationI18n_aggregate_order_by
  newsTranslations_aggregate: newsI18n_aggregate_order_by
  pageTranslations_aggregate: pageI18n_aggregate_order_by
  provenanceTranslations_aggregate: provenanceI18n_aggregate_order_by
  schoolTranslations_aggregate: schoolI18n_aggregate_order_by
  siteTranslations_aggregate: translation_aggregate_order_by
  sliderTranslations_aggregate: sliderI18n_aggregate_order_by
  tagTranslations_aggregate: tagI18n_aggregate_order_by
  techniqueTranslations_aggregate: techniqueI18n_aggregate_order_by
  workTranslations_aggregate: workI18n_aggregate_order_by
}

"""
select columns of table "locale"
"""
enum locale_select_column {
  """column name"""
  currencyCode

  """column name"""
  deletedAt

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  isDefault

  """column name"""
  isEnabled

  """column name"""
  name
}

"""
input type for updating data in table "locale"
"""
input locale_set_input {
  currencyCode: String
  deletedAt: timestamptz
  icon: String
  id: uuid
  isDefault: Boolean
  isEnabled: Boolean
  name: String
}

"""
update columns of table "locale"
"""
enum locale_update_column {
  """column name"""
  currencyCode

  """column name"""
  deletedAt

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  isDefault

  """column name"""
  isEnabled

  """column name"""
  name
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "artist"
  """
  delete_artist(
    """filter the rows which have to be deleted"""
    where: artist_bool_exp!
  ): artist_mutation_response

  """
  delete data from the table: "artistCategory"
  """
  delete_artistCategory(
    """filter the rows which have to be deleted"""
    where: artistCategory_bool_exp!
  ): artistCategory_mutation_response

  """
  delete data from the table: "artistI18n"
  """
  delete_artistI18n(
    """filter the rows which have to be deleted"""
    where: artistI18n_bool_exp!
  ): artistI18n_mutation_response

  """
  delete data from the table: "basis"
  """
  delete_basis(
    """filter the rows which have to be deleted"""
    where: basis_bool_exp!
  ): basis_mutation_response

  """
  delete data from the table: "basisI18n"
  """
  delete_basisI18n(
    """filter the rows which have to be deleted"""
    where: basisI18n_bool_exp!
  ): basisI18n_mutation_response

  """
  delete data from the table: "cart"
  """
  delete_cart(
    """filter the rows which have to be deleted"""
    where: cart_bool_exp!
  ): cart_mutation_response

  """
  delete data from the table: "category"
  """
  delete_category(
    """filter the rows which have to be deleted"""
    where: category_bool_exp!
  ): category_mutation_response

  """
  delete data from the table: "categoryI18n"
  """
  delete_categoryI18n(
    """filter the rows which have to be deleted"""
    where: categoryI18n_bool_exp!
  ): categoryI18n_mutation_response

  """
  delete data from the table: "customField"
  """
  delete_customField(
    """filter the rows which have to be deleted"""
    where: customField_bool_exp!
  ): customField_mutation_response

  """
  delete data from the table: "customFieldI18n"
  """
  delete_customFieldI18n(
    """filter the rows which have to be deleted"""
    where: customFieldI18n_bool_exp!
  ): customFieldI18n_mutation_response

  """
  delete data from the table: "customFieldWork"
  """
  delete_customFieldWork(
    """filter the rows which have to be deleted"""
    where: customFieldWork_bool_exp!
  ): customFieldWork_mutation_response

  """
  delete data from the table: "exhibition"
  """
  delete_exhibition(
    """filter the rows which have to be deleted"""
    where: exhibition_bool_exp!
  ): exhibition_mutation_response

  """
  delete data from the table: "exhibitionCategory"
  """
  delete_exhibitionCategory(
    """filter the rows which have to be deleted"""
    where: exhibitionCategory_bool_exp!
  ): exhibitionCategory_mutation_response

  """
  delete data from the table: "exhibitionI18n"
  """
  delete_exhibitionI18n(
    """filter the rows which have to be deleted"""
    where: exhibitionI18n_bool_exp!
  ): exhibitionI18n_mutation_response

  """
  delete data from the table: "exhibitionWork"
  """
  delete_exhibitionWork(
    """filter the rows which have to be deleted"""
    where: exhibitionWork_bool_exp!
  ): exhibitionWork_mutation_response

  """
  delete data from the table: "file"
  """
  delete_file(
    """filter the rows which have to be deleted"""
    where: file_bool_exp!
  ): file_mutation_response

  """
  delete data from the table: "fileI18n"
  """
  delete_fileI18n(
    """filter the rows which have to be deleted"""
    where: fileI18n_bool_exp!
  ): fileI18n_mutation_response

  """
  delete data from the table: "link"
  """
  delete_link(
    """filter the rows which have to be deleted"""
    where: link_bool_exp!
  ): link_mutation_response

  """
  delete data from the table: "linkI18n"
  """
  delete_linkI18n(
    """filter the rows which have to be deleted"""
    where: linkI18n_bool_exp!
  ): linkI18n_mutation_response

  """
  delete data from the table: "locale"
  """
  delete_locale(
    """filter the rows which have to be deleted"""
    where: locale_bool_exp!
  ): locale_mutation_response

  """
  delete data from the table: "navigation"
  """
  delete_navigation(
    """filter the rows which have to be deleted"""
    where: navigation_bool_exp!
  ): navigation_mutation_response

  """
  delete data from the table: "navigationI18n"
  """
  delete_navigationI18n(
    """filter the rows which have to be deleted"""
    where: navigationI18n_bool_exp!
  ): navigationI18n_mutation_response

  """
  delete data from the table: "news"
  """
  delete_news(
    """filter the rows which have to be deleted"""
    where: news_bool_exp!
  ): news_mutation_response

  """
  delete data from the table: "newsCategory"
  """
  delete_newsCategory(
    """filter the rows which have to be deleted"""
    where: newsCategory_bool_exp!
  ): newsCategory_mutation_response

  """
  delete data from the table: "newsI18n"
  """
  delete_newsI18n(
    """filter the rows which have to be deleted"""
    where: newsI18n_bool_exp!
  ): newsI18n_mutation_response

  """
  delete data from the table: "order"
  """
  delete_order(
    """filter the rows which have to be deleted"""
    where: order_bool_exp!
  ): order_mutation_response

  """
  delete data from the table: "orderProduct"
  """
  delete_orderProduct(
    """filter the rows which have to be deleted"""
    where: orderProduct_bool_exp!
  ): orderProduct_mutation_response

  """
  delete data from the table: "page"
  """
  delete_page(
    """filter the rows which have to be deleted"""
    where: page_bool_exp!
  ): page_mutation_response

  """
  delete data from the table: "pageI18n"
  """
  delete_pageI18n(
    """filter the rows which have to be deleted"""
    where: pageI18n_bool_exp!
  ): pageI18n_mutation_response

  """
  delete data from the table: "payment"
  """
  delete_payment(
    """filter the rows which have to be deleted"""
    where: payment_bool_exp!
  ): payment_mutation_response

  """
  delete data from the table: "provenance"
  """
  delete_provenance(
    """filter the rows which have to be deleted"""
    where: provenance_bool_exp!
  ): provenance_mutation_response

  """
  delete data from the table: "provenanceI18n"
  """
  delete_provenanceI18n(
    """filter the rows which have to be deleted"""
    where: provenanceI18n_bool_exp!
  ): provenanceI18n_mutation_response

  """
  delete data from the table: "school"
  """
  delete_school(
    """filter the rows which have to be deleted"""
    where: school_bool_exp!
  ): school_mutation_response

  """
  delete data from the table: "schoolI18n"
  """
  delete_schoolI18n(
    """filter the rows which have to be deleted"""
    where: schoolI18n_bool_exp!
  ): schoolI18n_mutation_response

  """
  delete data from the table: "slider"
  """
  delete_slider(
    """filter the rows which have to be deleted"""
    where: slider_bool_exp!
  ): slider_mutation_response

  """
  delete data from the table: "sliderI18n"
  """
  delete_sliderI18n(
    """filter the rows which have to be deleted"""
    where: sliderI18n_bool_exp!
  ): sliderI18n_mutation_response

  """
  delete data from the table: "tag"
  """
  delete_tag(
    """filter the rows which have to be deleted"""
    where: tag_bool_exp!
  ): tag_mutation_response

  """
  delete data from the table: "tagI18n"
  """
  delete_tagI18n(
    """filter the rows which have to be deleted"""
    where: tagI18n_bool_exp!
  ): tagI18n_mutation_response

  """
  delete data from the table: "technique"
  """
  delete_technique(
    """filter the rows which have to be deleted"""
    where: technique_bool_exp!
  ): technique_mutation_response

  """
  delete data from the table: "techniqueI18n"
  """
  delete_techniqueI18n(
    """filter the rows which have to be deleted"""
    where: techniqueI18n_bool_exp!
  ): techniqueI18n_mutation_response

  """
  delete data from the table: "translation"
  """
  delete_translation(
    """filter the rows which have to be deleted"""
    where: translation_bool_exp!
  ): translation_mutation_response

  """
  delete data from the table: "user"
  """
  delete_user(
    """filter the rows which have to be deleted"""
    where: user_bool_exp!
  ): user_mutation_response

  """
  delete data from the table: "work"
  """
  delete_work(
    """filter the rows which have to be deleted"""
    where: work_bool_exp!
  ): work_mutation_response

  """
  delete data from the table: "workCategory"
  """
  delete_workCategory(
    """filter the rows which have to be deleted"""
    where: workCategory_bool_exp!
  ): workCategory_mutation_response

  """
  delete data from the table: "workI18n"
  """
  delete_workI18n(
    """filter the rows which have to be deleted"""
    where: workI18n_bool_exp!
  ): workI18n_mutation_response

  """
  insert data into the table: "artist"
  """
  insert_artist(
    """the rows to be inserted"""
    objects: [artist_insert_input!]!

    """on conflict condition"""
    on_conflict: artist_on_conflict
  ): artist_mutation_response

  """
  insert data into the table: "artistCategory"
  """
  insert_artistCategory(
    """the rows to be inserted"""
    objects: [artistCategory_insert_input!]!

    """on conflict condition"""
    on_conflict: artistCategory_on_conflict
  ): artistCategory_mutation_response

  """
  insert data into the table: "artistI18n"
  """
  insert_artistI18n(
    """the rows to be inserted"""
    objects: [artistI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: artistI18n_on_conflict
  ): artistI18n_mutation_response

  """
  insert data into the table: "basis"
  """
  insert_basis(
    """the rows to be inserted"""
    objects: [basis_insert_input!]!

    """on conflict condition"""
    on_conflict: basis_on_conflict
  ): basis_mutation_response

  """
  insert data into the table: "basisI18n"
  """
  insert_basisI18n(
    """the rows to be inserted"""
    objects: [basisI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: basisI18n_on_conflict
  ): basisI18n_mutation_response

  """
  insert data into the table: "cart"
  """
  insert_cart(
    """the rows to be inserted"""
    objects: [cart_insert_input!]!

    """on conflict condition"""
    on_conflict: cart_on_conflict
  ): cart_mutation_response

  """
  insert data into the table: "category"
  """
  insert_category(
    """the rows to be inserted"""
    objects: [category_insert_input!]!

    """on conflict condition"""
    on_conflict: category_on_conflict
  ): category_mutation_response

  """
  insert data into the table: "categoryI18n"
  """
  insert_categoryI18n(
    """the rows to be inserted"""
    objects: [categoryI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: categoryI18n_on_conflict
  ): categoryI18n_mutation_response

  """
  insert data into the table: "customField"
  """
  insert_customField(
    """the rows to be inserted"""
    objects: [customField_insert_input!]!

    """on conflict condition"""
    on_conflict: customField_on_conflict
  ): customField_mutation_response

  """
  insert data into the table: "customFieldI18n"
  """
  insert_customFieldI18n(
    """the rows to be inserted"""
    objects: [customFieldI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: customFieldI18n_on_conflict
  ): customFieldI18n_mutation_response

  """
  insert data into the table: "customFieldWork"
  """
  insert_customFieldWork(
    """the rows to be inserted"""
    objects: [customFieldWork_insert_input!]!

    """on conflict condition"""
    on_conflict: customFieldWork_on_conflict
  ): customFieldWork_mutation_response

  """
  insert data into the table: "exhibition"
  """
  insert_exhibition(
    """the rows to be inserted"""
    objects: [exhibition_insert_input!]!

    """on conflict condition"""
    on_conflict: exhibition_on_conflict
  ): exhibition_mutation_response

  """
  insert data into the table: "exhibitionCategory"
  """
  insert_exhibitionCategory(
    """the rows to be inserted"""
    objects: [exhibitionCategory_insert_input!]!

    """on conflict condition"""
    on_conflict: exhibitionCategory_on_conflict
  ): exhibitionCategory_mutation_response

  """
  insert data into the table: "exhibitionI18n"
  """
  insert_exhibitionI18n(
    """the rows to be inserted"""
    objects: [exhibitionI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: exhibitionI18n_on_conflict
  ): exhibitionI18n_mutation_response

  """
  insert data into the table: "exhibitionWork"
  """
  insert_exhibitionWork(
    """the rows to be inserted"""
    objects: [exhibitionWork_insert_input!]!

    """on conflict condition"""
    on_conflict: exhibitionWork_on_conflict
  ): exhibitionWork_mutation_response

  """
  insert data into the table: "file"
  """
  insert_file(
    """the rows to be inserted"""
    objects: [file_insert_input!]!

    """on conflict condition"""
    on_conflict: file_on_conflict
  ): file_mutation_response

  """
  insert data into the table: "fileI18n"
  """
  insert_fileI18n(
    """the rows to be inserted"""
    objects: [fileI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: fileI18n_on_conflict
  ): fileI18n_mutation_response

  """
  insert data into the table: "link"
  """
  insert_link(
    """the rows to be inserted"""
    objects: [link_insert_input!]!

    """on conflict condition"""
    on_conflict: link_on_conflict
  ): link_mutation_response

  """
  insert data into the table: "linkI18n"
  """
  insert_linkI18n(
    """the rows to be inserted"""
    objects: [linkI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: linkI18n_on_conflict
  ): linkI18n_mutation_response

  """
  insert data into the table: "locale"
  """
  insert_locale(
    """the rows to be inserted"""
    objects: [locale_insert_input!]!

    """on conflict condition"""
    on_conflict: locale_on_conflict
  ): locale_mutation_response

  """
  insert data into the table: "navigation"
  """
  insert_navigation(
    """the rows to be inserted"""
    objects: [navigation_insert_input!]!

    """on conflict condition"""
    on_conflict: navigation_on_conflict
  ): navigation_mutation_response

  """
  insert data into the table: "navigationI18n"
  """
  insert_navigationI18n(
    """the rows to be inserted"""
    objects: [navigationI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: navigationI18n_on_conflict
  ): navigationI18n_mutation_response

  """
  insert data into the table: "news"
  """
  insert_news(
    """the rows to be inserted"""
    objects: [news_insert_input!]!

    """on conflict condition"""
    on_conflict: news_on_conflict
  ): news_mutation_response

  """
  insert data into the table: "newsCategory"
  """
  insert_newsCategory(
    """the rows to be inserted"""
    objects: [newsCategory_insert_input!]!

    """on conflict condition"""
    on_conflict: newsCategory_on_conflict
  ): newsCategory_mutation_response

  """
  insert data into the table: "newsI18n"
  """
  insert_newsI18n(
    """the rows to be inserted"""
    objects: [newsI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: newsI18n_on_conflict
  ): newsI18n_mutation_response

  """
  insert data into the table: "order"
  """
  insert_order(
    """the rows to be inserted"""
    objects: [order_insert_input!]!

    """on conflict condition"""
    on_conflict: order_on_conflict
  ): order_mutation_response

  """
  insert data into the table: "orderProduct"
  """
  insert_orderProduct(
    """the rows to be inserted"""
    objects: [orderProduct_insert_input!]!

    """on conflict condition"""
    on_conflict: orderProduct_on_conflict
  ): orderProduct_mutation_response

  """
  insert data into the table: "page"
  """
  insert_page(
    """the rows to be inserted"""
    objects: [page_insert_input!]!

    """on conflict condition"""
    on_conflict: page_on_conflict
  ): page_mutation_response

  """
  insert data into the table: "pageI18n"
  """
  insert_pageI18n(
    """the rows to be inserted"""
    objects: [pageI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: pageI18n_on_conflict
  ): pageI18n_mutation_response

  """
  insert data into the table: "payment"
  """
  insert_payment(
    """the rows to be inserted"""
    objects: [payment_insert_input!]!

    """on conflict condition"""
    on_conflict: payment_on_conflict
  ): payment_mutation_response

  """
  insert data into the table: "provenance"
  """
  insert_provenance(
    """the rows to be inserted"""
    objects: [provenance_insert_input!]!

    """on conflict condition"""
    on_conflict: provenance_on_conflict
  ): provenance_mutation_response

  """
  insert data into the table: "provenanceI18n"
  """
  insert_provenanceI18n(
    """the rows to be inserted"""
    objects: [provenanceI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: provenanceI18n_on_conflict
  ): provenanceI18n_mutation_response

  """
  insert data into the table: "school"
  """
  insert_school(
    """the rows to be inserted"""
    objects: [school_insert_input!]!

    """on conflict condition"""
    on_conflict: school_on_conflict
  ): school_mutation_response

  """
  insert data into the table: "schoolI18n"
  """
  insert_schoolI18n(
    """the rows to be inserted"""
    objects: [schoolI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: schoolI18n_on_conflict
  ): schoolI18n_mutation_response

  """
  insert data into the table: "slider"
  """
  insert_slider(
    """the rows to be inserted"""
    objects: [slider_insert_input!]!

    """on conflict condition"""
    on_conflict: slider_on_conflict
  ): slider_mutation_response

  """
  insert data into the table: "sliderI18n"
  """
  insert_sliderI18n(
    """the rows to be inserted"""
    objects: [sliderI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: sliderI18n_on_conflict
  ): sliderI18n_mutation_response

  """
  insert data into the table: "tag"
  """
  insert_tag(
    """the rows to be inserted"""
    objects: [tag_insert_input!]!

    """on conflict condition"""
    on_conflict: tag_on_conflict
  ): tag_mutation_response

  """
  insert data into the table: "tagI18n"
  """
  insert_tagI18n(
    """the rows to be inserted"""
    objects: [tagI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: tagI18n_on_conflict
  ): tagI18n_mutation_response

  """
  insert data into the table: "technique"
  """
  insert_technique(
    """the rows to be inserted"""
    objects: [technique_insert_input!]!

    """on conflict condition"""
    on_conflict: technique_on_conflict
  ): technique_mutation_response

  """
  insert data into the table: "techniqueI18n"
  """
  insert_techniqueI18n(
    """the rows to be inserted"""
    objects: [techniqueI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: techniqueI18n_on_conflict
  ): techniqueI18n_mutation_response

  """
  insert data into the table: "translation"
  """
  insert_translation(
    """the rows to be inserted"""
    objects: [translation_insert_input!]!

    """on conflict condition"""
    on_conflict: translation_on_conflict
  ): translation_mutation_response

  """
  insert data into the table: "user"
  """
  insert_user(
    """the rows to be inserted"""
    objects: [user_insert_input!]!

    """on conflict condition"""
    on_conflict: user_on_conflict
  ): user_mutation_response

  """
  insert data into the table: "work"
  """
  insert_work(
    """the rows to be inserted"""
    objects: [work_insert_input!]!

    """on conflict condition"""
    on_conflict: work_on_conflict
  ): work_mutation_response

  """
  insert data into the table: "workCategory"
  """
  insert_workCategory(
    """the rows to be inserted"""
    objects: [workCategory_insert_input!]!

    """on conflict condition"""
    on_conflict: workCategory_on_conflict
  ): workCategory_mutation_response

  """
  insert data into the table: "workI18n"
  """
  insert_workI18n(
    """the rows to be inserted"""
    objects: [workI18n_insert_input!]!

    """on conflict condition"""
    on_conflict: workI18n_on_conflict
  ): workI18n_mutation_response

  """
  update data of the table: "artist"
  """
  update_artist(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: artist_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: artist_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from
    the end). throws an error if top level container is not an array
    """
    _delete_elem: artist_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: artist_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: artist_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: artist_set_input

    """filter the rows which have to be updated"""
    where: artist_bool_exp!
  ): artist_mutation_response

  """
  update data of the table: "artistCategory"
  """
  update_artistCategory(
    """sets the columns of the filtered rows to the given values"""
    _set: artistCategory_set_input

    """filter the rows which have to be updated"""
    where: artistCategory_bool_exp!
  ): artistCategory_mutation_response

  """
  update data of the table: "artistI18n"
  """
  update_artistI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: artistI18n_set_input

    """filter the rows which have to be updated"""
    where: artistI18n_bool_exp!
  ): artistI18n_mutation_response

  """
  update data of the table: "basis"
  """
  update_basis(
    """sets the columns of the filtered rows to the given values"""
    _set: basis_set_input

    """filter the rows which have to be updated"""
    where: basis_bool_exp!
  ): basis_mutation_response

  """
  update data of the table: "basisI18n"
  """
  update_basisI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: basisI18n_set_input

    """filter the rows which have to be updated"""
    where: basisI18n_bool_exp!
  ): basisI18n_mutation_response

  """
  update data of the table: "cart"
  """
  update_cart(
    """increments the integer columns with given value of the filtered values"""
    _inc: cart_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cart_set_input

    """filter the rows which have to be updated"""
    where: cart_bool_exp!
  ): cart_mutation_response

  """
  update data of the table: "category"
  """
  update_category(
    """sets the columns of the filtered rows to the given values"""
    _set: category_set_input

    """filter the rows which have to be updated"""
    where: category_bool_exp!
  ): category_mutation_response

  """
  update data of the table: "categoryI18n"
  """
  update_categoryI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: categoryI18n_set_input

    """filter the rows which have to be updated"""
    where: categoryI18n_bool_exp!
  ): categoryI18n_mutation_response

  """
  update data of the table: "customField"
  """
  update_customField(
    """sets the columns of the filtered rows to the given values"""
    _set: customField_set_input

    """filter the rows which have to be updated"""
    where: customField_bool_exp!
  ): customField_mutation_response

  """
  update data of the table: "customFieldI18n"
  """
  update_customFieldI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: customFieldI18n_set_input

    """filter the rows which have to be updated"""
    where: customFieldI18n_bool_exp!
  ): customFieldI18n_mutation_response

  """
  update data of the table: "customFieldWork"
  """
  update_customFieldWork(
    """sets the columns of the filtered rows to the given values"""
    _set: customFieldWork_set_input

    """filter the rows which have to be updated"""
    where: customFieldWork_bool_exp!
  ): customFieldWork_mutation_response

  """
  update data of the table: "exhibition"
  """
  update_exhibition(
    """increments the integer columns with given value of the filtered values"""
    _inc: exhibition_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: exhibition_set_input

    """filter the rows which have to be updated"""
    where: exhibition_bool_exp!
  ): exhibition_mutation_response

  """
  update data of the table: "exhibitionCategory"
  """
  update_exhibitionCategory(
    """sets the columns of the filtered rows to the given values"""
    _set: exhibitionCategory_set_input

    """filter the rows which have to be updated"""
    where: exhibitionCategory_bool_exp!
  ): exhibitionCategory_mutation_response

  """
  update data of the table: "exhibitionI18n"
  """
  update_exhibitionI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: exhibitionI18n_set_input

    """filter the rows which have to be updated"""
    where: exhibitionI18n_bool_exp!
  ): exhibitionI18n_mutation_response

  """
  update data of the table: "exhibitionWork"
  """
  update_exhibitionWork(
    """sets the columns of the filtered rows to the given values"""
    _set: exhibitionWork_set_input

    """filter the rows which have to be updated"""
    where: exhibitionWork_bool_exp!
  ): exhibitionWork_mutation_response

  """
  update data of the table: "file"
  """
  update_file(
    """increments the integer columns with given value of the filtered values"""
    _inc: file_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: file_set_input

    """filter the rows which have to be updated"""
    where: file_bool_exp!
  ): file_mutation_response

  """
  update data of the table: "fileI18n"
  """
  update_fileI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: fileI18n_set_input

    """filter the rows which have to be updated"""
    where: fileI18n_bool_exp!
  ): fileI18n_mutation_response

  """
  update data of the table: "link"
  """
  update_link(
    """sets the columns of the filtered rows to the given values"""
    _set: link_set_input

    """filter the rows which have to be updated"""
    where: link_bool_exp!
  ): link_mutation_response

  """
  update data of the table: "linkI18n"
  """
  update_linkI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: linkI18n_set_input

    """filter the rows which have to be updated"""
    where: linkI18n_bool_exp!
  ): linkI18n_mutation_response

  """
  update data of the table: "locale"
  """
  update_locale(
    """sets the columns of the filtered rows to the given values"""
    _set: locale_set_input

    """filter the rows which have to be updated"""
    where: locale_bool_exp!
  ): locale_mutation_response

  """
  update data of the table: "navigation"
  """
  update_navigation(
    """increments the integer columns with given value of the filtered values"""
    _inc: navigation_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: navigation_set_input

    """filter the rows which have to be updated"""
    where: navigation_bool_exp!
  ): navigation_mutation_response

  """
  update data of the table: "navigationI18n"
  """
  update_navigationI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: navigationI18n_set_input

    """filter the rows which have to be updated"""
    where: navigationI18n_bool_exp!
  ): navigationI18n_mutation_response

  """
  update data of the table: "news"
  """
  update_news(
    """sets the columns of the filtered rows to the given values"""
    _set: news_set_input

    """filter the rows which have to be updated"""
    where: news_bool_exp!
  ): news_mutation_response

  """
  update data of the table: "newsCategory"
  """
  update_newsCategory(
    """sets the columns of the filtered rows to the given values"""
    _set: newsCategory_set_input

    """filter the rows which have to be updated"""
    where: newsCategory_bool_exp!
  ): newsCategory_mutation_response

  """
  update data of the table: "newsI18n"
  """
  update_newsI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: newsI18n_set_input

    """filter the rows which have to be updated"""
    where: newsI18n_bool_exp!
  ): newsI18n_mutation_response

  """
  update data of the table: "order"
  """
  update_order(
    """sets the columns of the filtered rows to the given values"""
    _set: order_set_input

    """filter the rows which have to be updated"""
    where: order_bool_exp!
  ): order_mutation_response

  """
  update data of the table: "orderProduct"
  """
  update_orderProduct(
    """sets the columns of the filtered rows to the given values"""
    _set: orderProduct_set_input

    """filter the rows which have to be updated"""
    where: orderProduct_bool_exp!
  ): orderProduct_mutation_response

  """
  update data of the table: "page"
  """
  update_page(
    """sets the columns of the filtered rows to the given values"""
    _set: page_set_input

    """filter the rows which have to be updated"""
    where: page_bool_exp!
  ): page_mutation_response

  """
  update data of the table: "pageI18n"
  """
  update_pageI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: pageI18n_set_input

    """filter the rows which have to be updated"""
    where: pageI18n_bool_exp!
  ): pageI18n_mutation_response

  """
  update data of the table: "payment"
  """
  update_payment(
    """sets the columns of the filtered rows to the given values"""
    _set: payment_set_input

    """filter the rows which have to be updated"""
    where: payment_bool_exp!
  ): payment_mutation_response

  """
  update data of the table: "provenance"
  """
  update_provenance(
    """sets the columns of the filtered rows to the given values"""
    _set: provenance_set_input

    """filter the rows which have to be updated"""
    where: provenance_bool_exp!
  ): provenance_mutation_response

  """
  update data of the table: "provenanceI18n"
  """
  update_provenanceI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: provenanceI18n_set_input

    """filter the rows which have to be updated"""
    where: provenanceI18n_bool_exp!
  ): provenanceI18n_mutation_response

  """
  update data of the table: "school"
  """
  update_school(
    """sets the columns of the filtered rows to the given values"""
    _set: school_set_input

    """filter the rows which have to be updated"""
    where: school_bool_exp!
  ): school_mutation_response

  """
  update data of the table: "schoolI18n"
  """
  update_schoolI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: schoolI18n_set_input

    """filter the rows which have to be updated"""
    where: schoolI18n_bool_exp!
  ): schoolI18n_mutation_response

  """
  update data of the table: "slider"
  """
  update_slider(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: slider_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: slider_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from
    the end). throws an error if top level container is not an array
    """
    _delete_elem: slider_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: slider_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: slider_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: slider_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: slider_set_input

    """filter the rows which have to be updated"""
    where: slider_bool_exp!
  ): slider_mutation_response

  """
  update data of the table: "sliderI18n"
  """
  update_sliderI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: sliderI18n_set_input

    """filter the rows which have to be updated"""
    where: sliderI18n_bool_exp!
  ): sliderI18n_mutation_response

  """
  update data of the table: "tag"
  """
  update_tag(
    """sets the columns of the filtered rows to the given values"""
    _set: tag_set_input

    """filter the rows which have to be updated"""
    where: tag_bool_exp!
  ): tag_mutation_response

  """
  update data of the table: "tagI18n"
  """
  update_tagI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: tagI18n_set_input

    """filter the rows which have to be updated"""
    where: tagI18n_bool_exp!
  ): tagI18n_mutation_response

  """
  update data of the table: "technique"
  """
  update_technique(
    """sets the columns of the filtered rows to the given values"""
    _set: technique_set_input

    """filter the rows which have to be updated"""
    where: technique_bool_exp!
  ): technique_mutation_response

  """
  update data of the table: "techniqueI18n"
  """
  update_techniqueI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: techniqueI18n_set_input

    """filter the rows which have to be updated"""
    where: techniqueI18n_bool_exp!
  ): techniqueI18n_mutation_response

  """
  update data of the table: "translation"
  """
  update_translation(
    """sets the columns of the filtered rows to the given values"""
    _set: translation_set_input

    """filter the rows which have to be updated"""
    where: translation_bool_exp!
  ): translation_mutation_response

  """
  update data of the table: "user"
  """
  update_user(
    """sets the columns of the filtered rows to the given values"""
    _set: user_set_input

    """filter the rows which have to be updated"""
    where: user_bool_exp!
  ): user_mutation_response

  """
  update data of the table: "work"
  """
  update_work(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: work_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: work_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from
    the end). throws an error if top level container is not an array
    """
    _delete_elem: work_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: work_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: work_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: work_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: work_set_input

    """filter the rows which have to be updated"""
    where: work_bool_exp!
  ): work_mutation_response

  """
  update data of the table: "workCategory"
  """
  update_workCategory(
    """sets the columns of the filtered rows to the given values"""
    _set: workCategory_set_input

    """filter the rows which have to be updated"""
    where: workCategory_bool_exp!
  ): workCategory_mutation_response

  """
  update data of the table: "workI18n"
  """
  update_workI18n(
    """sets the columns of the filtered rows to the given values"""
    _set: workI18n_set_input

    """filter the rows which have to be updated"""
    where: workI18n_bool_exp!
  ): workI18n_mutation_response
}

"""
columns and relationships of "navigation"
"""
type navigation {
  createdAt: timestamptz!
  deletedAt: timestamptz

  """An array relationship"""
  descendants(
    """distinct select on columns"""
    distinct_on: [navigation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigation_order_by!]

    """filter the rows returned"""
    where: navigation_bool_exp
  ): [navigation!]!

  """An aggregated array relationship"""
  descendants_aggregate(
    """distinct select on columns"""
    distinct_on: [navigation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigation_order_by!]

    """filter the rows returned"""
    where: navigation_bool_exp
  ): navigation_aggregate!
  float: navigation_float_enum
  id: uuid!
  isEnabled: Boolean!

  """An object relationship"""
  parent: navigation
  parentId: uuid
  position: smallint!
  showInFooter: Boolean!
  showInHeader: Boolean!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [navigationI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigationI18n_order_by!]

    """filter the rows returned"""
    where: navigationI18n_bool_exp
  ): [navigationI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [navigationI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigationI18n_order_by!]

    """filter the rows returned"""
    where: navigationI18n_bool_exp
  ): navigationI18n_aggregate!
  updatedAt: timestamptz!
}

"""
aggregated selection of "navigation"
"""
type navigation_aggregate {
  aggregate: navigation_aggregate_fields
  nodes: [navigation!]!
}

"""
aggregate fields of "navigation"
"""
type navigation_aggregate_fields {
  avg: navigation_avg_fields
  count(columns: [navigation_select_column!], distinct: Boolean): Int
  max: navigation_max_fields
  min: navigation_min_fields
  stddev: navigation_stddev_fields
  stddev_pop: navigation_stddev_pop_fields
  stddev_samp: navigation_stddev_samp_fields
  sum: navigation_sum_fields
  var_pop: navigation_var_pop_fields
  var_samp: navigation_var_samp_fields
  variance: navigation_variance_fields
}

"""
order by aggregate values of table "navigation"
"""
input navigation_aggregate_order_by {
  avg: navigation_avg_order_by
  count: order_by
  max: navigation_max_order_by
  min: navigation_min_order_by
  stddev: navigation_stddev_order_by
  stddev_pop: navigation_stddev_pop_order_by
  stddev_samp: navigation_stddev_samp_order_by
  sum: navigation_sum_order_by
  var_pop: navigation_var_pop_order_by
  var_samp: navigation_var_samp_order_by
  variance: navigation_variance_order_by
}

"""
input type for inserting array relation for remote table "navigation"
"""
input navigation_arr_rel_insert_input {
  data: [navigation_insert_input!]!
  on_conflict: navigation_on_conflict
}

"""aggregate avg on columns"""
type navigation_avg_fields {
  position: Float
}

"""
order by avg() on columns of table "navigation"
"""
input navigation_avg_order_by {
  position: order_by
}

"""
Boolean expression to filter rows from the table "navigation". All fields are combined with a logical 'AND'.
"""
input navigation_bool_exp {
  _and: [navigation_bool_exp]
  _not: navigation_bool_exp
  _or: [navigation_bool_exp]
  createdAt: timestamptz_comparison_exp
  deletedAt: timestamptz_comparison_exp
  descendants: navigation_bool_exp
  float: navigation_float_enum_comparison_exp
  id: uuid_comparison_exp
  isEnabled: boolean_comparison_exp
  parent: navigation_bool_exp
  parentId: uuid_comparison_exp
  position: smallint_comparison_exp
  showInFooter: boolean_comparison_exp
  showInHeader: boolean_comparison_exp
  translations: navigationI18n_bool_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "navigation"
"""
enum navigation_constraint {
  """unique or primary key constraint"""
  PK_a7c90881db5205ad8d6b86ffef7
}

scalar navigation_float_enum

"""
expression to compare columns of type navigation_float_enum. All fields are combined with logical 'AND'.
"""
input navigation_float_enum_comparison_exp {
  _eq: navigation_float_enum
  _gt: navigation_float_enum
  _gte: navigation_float_enum
  _in: [navigation_float_enum]
  _is_null: Boolean
  _lt: navigation_float_enum
  _lte: navigation_float_enum
  _neq: navigation_float_enum
  _nin: [navigation_float_enum]
}

"""
input type for incrementing integer columne in table "navigation"
"""
input navigation_inc_input {
  position: smallint
}

"""
input type for inserting data into table "navigation"
"""
input navigation_insert_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  descendants: navigation_arr_rel_insert_input
  float: navigation_float_enum
  id: uuid
  isEnabled: Boolean
  parent: navigation_obj_rel_insert_input
  parentId: uuid
  position: smallint
  showInFooter: Boolean
  showInHeader: Boolean
  translations: navigationI18n_arr_rel_insert_input
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type navigation_max_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  position: smallint
  updatedAt: timestamptz
}

"""
order by max() on columns of table "navigation"
"""
input navigation_max_order_by {
  createdAt: order_by
  deletedAt: order_by
  position: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type navigation_min_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  position: smallint
  updatedAt: timestamptz
}

"""
order by min() on columns of table "navigation"
"""
input navigation_min_order_by {
  createdAt: order_by
  deletedAt: order_by
  position: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "navigation"
"""
type navigation_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [navigation!]!
}

"""
input type for inserting object relation for remote table "navigation"
"""
input navigation_obj_rel_insert_input {
  data: navigation_insert_input!
  on_conflict: navigation_on_conflict
}

"""
on conflict condition type for table "navigation"
"""
input navigation_on_conflict {
  constraint: navigation_constraint!
  update_columns: [navigation_update_column!]!
}

"""
ordering options when selecting data from "navigation"
"""
input navigation_order_by {
  createdAt: order_by
  deletedAt: order_by
  descendants_aggregate: navigation_aggregate_order_by
  float: order_by
  id: order_by
  isEnabled: order_by
  parent: navigation_order_by
  parentId: order_by
  position: order_by
  showInFooter: order_by
  showInHeader: order_by
  translations_aggregate: navigationI18n_aggregate_order_by
  updatedAt: order_by
}

"""
select columns of table "navigation"
"""
enum navigation_select_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  float

  """column name"""
  id

  """column name"""
  isEnabled

  """column name"""
  parentId

  """column name"""
  position

  """column name"""
  showInFooter

  """column name"""
  showInHeader

  """column name"""
  updatedAt
}

"""
input type for updating data in table "navigation"
"""
input navigation_set_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  float: navigation_float_enum
  id: uuid
  isEnabled: Boolean
  parentId: uuid
  position: smallint
  showInFooter: Boolean
  showInHeader: Boolean
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type navigation_stddev_fields {
  position: Float
}

"""
order by stddev() on columns of table "navigation"
"""
input navigation_stddev_order_by {
  position: order_by
}

"""aggregate stddev_pop on columns"""
type navigation_stddev_pop_fields {
  position: Float
}

"""
order by stddev_pop() on columns of table "navigation"
"""
input navigation_stddev_pop_order_by {
  position: order_by
}

"""aggregate stddev_samp on columns"""
type navigation_stddev_samp_fields {
  position: Float
}

"""
order by stddev_samp() on columns of table "navigation"
"""
input navigation_stddev_samp_order_by {
  position: order_by
}

"""aggregate sum on columns"""
type navigation_sum_fields {
  position: smallint
}

"""
order by sum() on columns of table "navigation"
"""
input navigation_sum_order_by {
  position: order_by
}

"""
update columns of table "navigation"
"""
enum navigation_update_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  float

  """column name"""
  id

  """column name"""
  isEnabled

  """column name"""
  parentId

  """column name"""
  position

  """column name"""
  showInFooter

  """column name"""
  showInHeader

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type navigation_var_pop_fields {
  position: Float
}

"""
order by var_pop() on columns of table "navigation"
"""
input navigation_var_pop_order_by {
  position: order_by
}

"""aggregate var_samp on columns"""
type navigation_var_samp_fields {
  position: Float
}

"""
order by var_samp() on columns of table "navigation"
"""
input navigation_var_samp_order_by {
  position: order_by
}

"""aggregate variance on columns"""
type navigation_variance_fields {
  position: Float
}

"""
order by variance() on columns of table "navigation"
"""
input navigation_variance_order_by {
  position: order_by
}

"""
columns and relationships of "navigationI18n"
"""
type navigationI18n {
  deletedAt: timestamptz
  id: uuid!
  link: String

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  name: String!

  """An object relationship"""
  navigation: navigation!
  navigationId: uuid!
}

"""
aggregated selection of "navigationI18n"
"""
type navigationI18n_aggregate {
  aggregate: navigationI18n_aggregate_fields
  nodes: [navigationI18n!]!
}

"""
aggregate fields of "navigationI18n"
"""
type navigationI18n_aggregate_fields {
  count(columns: [navigationI18n_select_column!], distinct: Boolean): Int
  max: navigationI18n_max_fields
  min: navigationI18n_min_fields
}

"""
order by aggregate values of table "navigationI18n"
"""
input navigationI18n_aggregate_order_by {
  count: order_by
  max: navigationI18n_max_order_by
  min: navigationI18n_min_order_by
}

"""
input type for inserting array relation for remote table "navigationI18n"
"""
input navigationI18n_arr_rel_insert_input {
  data: [navigationI18n_insert_input!]!
  on_conflict: navigationI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "navigationI18n". All fields are combined with a logical 'AND'.
"""
input navigationI18n_bool_exp {
  _and: [navigationI18n_bool_exp]
  _not: navigationI18n_bool_exp
  _or: [navigationI18n_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  link: text_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  name: varchar_comparison_exp
  navigation: navigation_bool_exp
  navigationId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "navigationI18n"
"""
enum navigationI18n_constraint {
  """unique or primary key constraint"""
  PK_a8d41a5ad2f8505e77b4426f62b
}

"""
input type for inserting data into table "navigationI18n"
"""
input navigationI18n_insert_input {
  deletedAt: timestamptz
  id: uuid
  link: String
  locale: locale_obj_rel_insert_input
  localeId: uuid
  name: String
  navigation: navigation_obj_rel_insert_input
  navigationId: uuid
}

"""aggregate max on columns"""
type navigationI18n_max_fields {
  deletedAt: timestamptz
  link: String
  name: String
}

"""
order by max() on columns of table "navigationI18n"
"""
input navigationI18n_max_order_by {
  deletedAt: order_by
  link: order_by
  name: order_by
}

"""aggregate min on columns"""
type navigationI18n_min_fields {
  deletedAt: timestamptz
  link: String
  name: String
}

"""
order by min() on columns of table "navigationI18n"
"""
input navigationI18n_min_order_by {
  deletedAt: order_by
  link: order_by
  name: order_by
}

"""
response of any mutation on the table "navigationI18n"
"""
type navigationI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [navigationI18n!]!
}

"""
input type for inserting object relation for remote table "navigationI18n"
"""
input navigationI18n_obj_rel_insert_input {
  data: navigationI18n_insert_input!
  on_conflict: navigationI18n_on_conflict
}

"""
on conflict condition type for table "navigationI18n"
"""
input navigationI18n_on_conflict {
  constraint: navigationI18n_constraint!
  update_columns: [navigationI18n_update_column!]!
}

"""
ordering options when selecting data from "navigationI18n"
"""
input navigationI18n_order_by {
  deletedAt: order_by
  id: order_by
  link: order_by
  locale: locale_order_by
  localeId: order_by
  name: order_by
  navigation: navigation_order_by
  navigationId: order_by
}

"""
select columns of table "navigationI18n"
"""
enum navigationI18n_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  link

  """column name"""
  localeId

  """column name"""
  name

  """column name"""
  navigationId
}

"""
input type for updating data in table "navigationI18n"
"""
input navigationI18n_set_input {
  deletedAt: timestamptz
  id: uuid
  link: String
  localeId: uuid
  name: String
  navigationId: uuid
}

"""
update columns of table "navigationI18n"
"""
enum navigationI18n_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  link

  """column name"""
  localeId

  """column name"""
  name

  """column name"""
  navigationId
}

"""
columns and relationships of "news"
"""
type news {
  createdAt: timestamptz!
  deletedAt: timestamptz
  id: uuid!

  """An array relationship"""
  newsCategories(
    """distinct select on columns"""
    distinct_on: [newsCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsCategory_order_by!]

    """filter the rows returned"""
    where: newsCategory_bool_exp
  ): [newsCategory!]!

  """An aggregated array relationship"""
  newsCategories_aggregate(
    """distinct select on columns"""
    distinct_on: [newsCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsCategory_order_by!]

    """filter the rows returned"""
    where: newsCategory_bool_exp
  ): newsCategory_aggregate!
  publicationDate: timestamptz!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [newsI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsI18n_order_by!]

    """filter the rows returned"""
    where: newsI18n_bool_exp
  ): [newsI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [newsI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsI18n_order_by!]

    """filter the rows returned"""
    where: newsI18n_bool_exp
  ): newsI18n_aggregate!
  updatedAt: timestamptz!
}

"""
aggregated selection of "news"
"""
type news_aggregate {
  aggregate: news_aggregate_fields
  nodes: [news!]!
}

"""
aggregate fields of "news"
"""
type news_aggregate_fields {
  count(columns: [news_select_column!], distinct: Boolean): Int
  max: news_max_fields
  min: news_min_fields
}

"""
order by aggregate values of table "news"
"""
input news_aggregate_order_by {
  count: order_by
  max: news_max_order_by
  min: news_min_order_by
}

"""
input type for inserting array relation for remote table "news"
"""
input news_arr_rel_insert_input {
  data: [news_insert_input!]!
  on_conflict: news_on_conflict
}

"""
Boolean expression to filter rows from the table "news". All fields are combined with a logical 'AND'.
"""
input news_bool_exp {
  _and: [news_bool_exp]
  _not: news_bool_exp
  _or: [news_bool_exp]
  createdAt: timestamptz_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  newsCategories: newsCategory_bool_exp
  publicationDate: timestamptz_comparison_exp
  translations: newsI18n_bool_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "news"
"""
enum news_constraint {
  """unique or primary key constraint"""
  PK_39a43dfcb6007180f04aff2357e
}

"""
input type for inserting data into table "news"
"""
input news_insert_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  id: uuid
  newsCategories: newsCategory_arr_rel_insert_input
  publicationDate: timestamptz
  translations: newsI18n_arr_rel_insert_input
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type news_max_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  publicationDate: timestamptz
  updatedAt: timestamptz
}

"""
order by max() on columns of table "news"
"""
input news_max_order_by {
  createdAt: order_by
  deletedAt: order_by
  publicationDate: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type news_min_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  publicationDate: timestamptz
  updatedAt: timestamptz
}

"""
order by min() on columns of table "news"
"""
input news_min_order_by {
  createdAt: order_by
  deletedAt: order_by
  publicationDate: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "news"
"""
type news_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [news!]!
}

"""
input type for inserting object relation for remote table "news"
"""
input news_obj_rel_insert_input {
  data: news_insert_input!
  on_conflict: news_on_conflict
}

"""
on conflict condition type for table "news"
"""
input news_on_conflict {
  constraint: news_constraint!
  update_columns: [news_update_column!]!
}

"""
ordering options when selecting data from "news"
"""
input news_order_by {
  createdAt: order_by
  deletedAt: order_by
  id: order_by
  newsCategories_aggregate: newsCategory_aggregate_order_by
  publicationDate: order_by
  translations_aggregate: newsI18n_aggregate_order_by
  updatedAt: order_by
}

"""
select columns of table "news"
"""
enum news_select_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  publicationDate

  """column name"""
  updatedAt
}

"""
input type for updating data in table "news"
"""
input news_set_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  id: uuid
  publicationDate: timestamptz
  updatedAt: timestamptz
}

"""
update columns of table "news"
"""
enum news_update_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  publicationDate

  """column name"""
  updatedAt
}

"""
columns and relationships of "newsCategory"
"""
type newsCategory {
  """An object relationship"""
  category: category!
  categoryId: uuid!

  """An object relationship"""
  news: news!
  newsId: uuid!
}

"""
aggregated selection of "newsCategory"
"""
type newsCategory_aggregate {
  aggregate: newsCategory_aggregate_fields
  nodes: [newsCategory!]!
}

"""
aggregate fields of "newsCategory"
"""
type newsCategory_aggregate_fields {
  count(columns: [newsCategory_select_column!], distinct: Boolean): Int
}

"""
order by aggregate values of table "newsCategory"
"""
input newsCategory_aggregate_order_by {
  count: order_by
}

"""
input type for inserting array relation for remote table "newsCategory"
"""
input newsCategory_arr_rel_insert_input {
  data: [newsCategory_insert_input!]!
  on_conflict: newsCategory_on_conflict
}

"""
Boolean expression to filter rows from the table "newsCategory". All fields are combined with a logical 'AND'.
"""
input newsCategory_bool_exp {
  _and: [newsCategory_bool_exp]
  _not: newsCategory_bool_exp
  _or: [newsCategory_bool_exp]
  category: category_bool_exp
  categoryId: uuid_comparison_exp
  news: news_bool_exp
  newsId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "newsCategory"
"""
enum newsCategory_constraint {
  """unique or primary key constraint"""
  PK_3caebe965767975a67fca4d5e4b
}

"""
input type for inserting data into table "newsCategory"
"""
input newsCategory_insert_input {
  category: category_obj_rel_insert_input
  categoryId: uuid
  news: news_obj_rel_insert_input
  newsId: uuid
}

"""
response of any mutation on the table "newsCategory"
"""
type newsCategory_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [newsCategory!]!
}

"""
input type for inserting object relation for remote table "newsCategory"
"""
input newsCategory_obj_rel_insert_input {
  data: newsCategory_insert_input!
  on_conflict: newsCategory_on_conflict
}

"""
on conflict condition type for table "newsCategory"
"""
input newsCategory_on_conflict {
  constraint: newsCategory_constraint!
  update_columns: [newsCategory_update_column!]!
}

"""
ordering options when selecting data from "newsCategory"
"""
input newsCategory_order_by {
  category: category_order_by
  categoryId: order_by
  news: news_order_by
  newsId: order_by
}

"""
select columns of table "newsCategory"
"""
enum newsCategory_select_column {
  """column name"""
  categoryId

  """column name"""
  newsId
}

"""
input type for updating data in table "newsCategory"
"""
input newsCategory_set_input {
  categoryId: uuid
  newsId: uuid
}

"""
update columns of table "newsCategory"
"""
enum newsCategory_update_column {
  """column name"""
  categoryId

  """column name"""
  newsId
}

"""
columns and relationships of "newsI18n"
"""
type newsI18n {
  body: String!
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  metaDescription: String!
  metaTitle: String!

  """An object relationship"""
  news: news!
  newsId: uuid!
  slug: String!
  title: String!
}

"""
aggregated selection of "newsI18n"
"""
type newsI18n_aggregate {
  aggregate: newsI18n_aggregate_fields
  nodes: [newsI18n!]!
}

"""
aggregate fields of "newsI18n"
"""
type newsI18n_aggregate_fields {
  count(columns: [newsI18n_select_column!], distinct: Boolean): Int
  max: newsI18n_max_fields
  min: newsI18n_min_fields
}

"""
order by aggregate values of table "newsI18n"
"""
input newsI18n_aggregate_order_by {
  count: order_by
  max: newsI18n_max_order_by
  min: newsI18n_min_order_by
}

"""
input type for inserting array relation for remote table "newsI18n"
"""
input newsI18n_arr_rel_insert_input {
  data: [newsI18n_insert_input!]!
  on_conflict: newsI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "newsI18n". All fields are combined with a logical 'AND'.
"""
input newsI18n_bool_exp {
  _and: [newsI18n_bool_exp]
  _not: newsI18n_bool_exp
  _or: [newsI18n_bool_exp]
  body: text_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  metaDescription: varchar_comparison_exp
  metaTitle: varchar_comparison_exp
  news: news_bool_exp
  newsId: uuid_comparison_exp
  slug: varchar_comparison_exp
  title: varchar_comparison_exp
}

"""
unique or primary key constraints on table "newsI18n"
"""
enum newsI18n_constraint {
  """unique or primary key constraint"""
  PK_1ec233b9656a71eb02a60009274

  """unique or primary key constraint"""
  UQ_9fb648ffe24ccf830aaa0ce96a9
}

"""
input type for inserting data into table "newsI18n"
"""
input newsI18n_insert_input {
  body: String
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  metaDescription: String
  metaTitle: String
  news: news_obj_rel_insert_input
  newsId: uuid
  slug: String
  title: String
}

"""aggregate max on columns"""
type newsI18n_max_fields {
  body: String
  deletedAt: timestamptz
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""
order by max() on columns of table "newsI18n"
"""
input newsI18n_max_order_by {
  body: order_by
  deletedAt: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
}

"""aggregate min on columns"""
type newsI18n_min_fields {
  body: String
  deletedAt: timestamptz
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""
order by min() on columns of table "newsI18n"
"""
input newsI18n_min_order_by {
  body: order_by
  deletedAt: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
}

"""
response of any mutation on the table "newsI18n"
"""
type newsI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [newsI18n!]!
}

"""
input type for inserting object relation for remote table "newsI18n"
"""
input newsI18n_obj_rel_insert_input {
  data: newsI18n_insert_input!
  on_conflict: newsI18n_on_conflict
}

"""
on conflict condition type for table "newsI18n"
"""
input newsI18n_on_conflict {
  constraint: newsI18n_constraint!
  update_columns: [newsI18n_update_column!]!
}

"""
ordering options when selecting data from "newsI18n"
"""
input newsI18n_order_by {
  body: order_by
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  metaDescription: order_by
  metaTitle: order_by
  news: news_order_by
  newsId: order_by
  slug: order_by
  title: order_by
}

"""
select columns of table "newsI18n"
"""
enum newsI18n_select_column {
  """column name"""
  body

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  newsId

  """column name"""
  slug

  """column name"""
  title
}

"""
input type for updating data in table "newsI18n"
"""
input newsI18n_set_input {
  body: String
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  metaDescription: String
  metaTitle: String
  newsId: uuid
  slug: String
  title: String
}

"""
update columns of table "newsI18n"
"""
enum newsI18n_update_column {
  """column name"""
  body

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  newsId

  """column name"""
  slug

  """column name"""
  title
}

scalar numeric

"""
expression to compare columns of type numeric. All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric]
}

"""
columns and relationships of "order"
"""
type order {
  address: String!
  city: String!
  cost: numeric!
  createdAt: timestamptz!
  deletedAt: timestamptz
  email: String!
  id: uuid!
  isPaid: Boolean!
  name: String!
  note: String

  """An array relationship"""
  orderProducts(
    """distinct select on columns"""
    distinct_on: [orderProduct_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [orderProduct_order_by!]

    """filter the rows returned"""
    where: orderProduct_bool_exp
  ): [orderProduct!]!

  """An aggregated array relationship"""
  orderProducts_aggregate(
    """distinct select on columns"""
    distinct_on: [orderProduct_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [orderProduct_order_by!]

    """filter the rows returned"""
    where: orderProduct_bool_exp
  ): orderProduct_aggregate!
  patronymic: String!
  paymentType: order_paymenttype_enum!

  """An array relationship"""
  payments(
    """distinct select on columns"""
    distinct_on: [payment_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payment_order_by!]

    """filter the rows returned"""
    where: payment_bool_exp
  ): [payment!]!

  """An aggregated array relationship"""
  payments_aggregate(
    """distinct select on columns"""
    distinct_on: [payment_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payment_order_by!]

    """filter the rows returned"""
    where: payment_bool_exp
  ): payment_aggregate!
  phone: String!
  surname: String!
  updatedAt: timestamptz!

  """An object relationship"""
  user: user
  userId: uuid
}

"""
aggregated selection of "order"
"""
type order_aggregate {
  aggregate: order_aggregate_fields
  nodes: [order!]!
}

"""
aggregate fields of "order"
"""
type order_aggregate_fields {
  avg: order_avg_fields
  count(columns: [order_select_column!], distinct: Boolean): Int
  max: order_max_fields
  min: order_min_fields
  stddev: order_stddev_fields
  stddev_pop: order_stddev_pop_fields
  stddev_samp: order_stddev_samp_fields
  sum: order_sum_fields
  var_pop: order_var_pop_fields
  var_samp: order_var_samp_fields
  variance: order_variance_fields
}

"""
order by aggregate values of table "order"
"""
input order_aggregate_order_by {
  avg: order_avg_order_by
  count: order_by
  max: order_max_order_by
  min: order_min_order_by
  stddev: order_stddev_order_by
  stddev_pop: order_stddev_pop_order_by
  stddev_samp: order_stddev_samp_order_by
  sum: order_sum_order_by
  var_pop: order_var_pop_order_by
  var_samp: order_var_samp_order_by
  variance: order_variance_order_by
}

"""
input type for inserting array relation for remote table "order"
"""
input order_arr_rel_insert_input {
  data: [order_insert_input!]!
  on_conflict: order_on_conflict
}

"""aggregate avg on columns"""
type order_avg_fields {
  cost: Float
}

"""
order by avg() on columns of table "order"
"""
input order_avg_order_by {
  cost: order_by
}

"""
Boolean expression to filter rows from the table "order". All fields are combined with a logical 'AND'.
"""
input order_bool_exp {
  _and: [order_bool_exp]
  _not: order_bool_exp
  _or: [order_bool_exp]
  address: varchar_comparison_exp
  city: varchar_comparison_exp
  cost: numeric_comparison_exp
  createdAt: timestamptz_comparison_exp
  deletedAt: timestamptz_comparison_exp
  email: text_comparison_exp
  id: uuid_comparison_exp
  isPaid: boolean_comparison_exp
  name: varchar_comparison_exp
  note: varchar_comparison_exp
  orderProducts: orderProduct_bool_exp
  patronymic: varchar_comparison_exp
  paymentType: order_paymenttype_enum_comparison_exp
  payments: payment_bool_exp
  phone: varchar_comparison_exp
  surname: varchar_comparison_exp
  updatedAt: timestamptz_comparison_exp
  user: user_bool_exp
  userId: uuid_comparison_exp
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""
unique or primary key constraints on table "order"
"""
enum order_constraint {
  """unique or primary key constraint"""
  PK_1031171c13130102495201e3e20
}

"""
input type for inserting data into table "order"
"""
input order_insert_input {
  address: String
  city: String
  cost: numeric
  createdAt: timestamptz
  deletedAt: timestamptz
  email: String
  id: uuid
  isPaid: Boolean
  name: String
  note: String
  orderProducts: orderProduct_arr_rel_insert_input
  patronymic: String
  paymentType: order_paymenttype_enum
  payments: payment_arr_rel_insert_input
  phone: String
  surname: String
  updatedAt: timestamptz
  user: user_obj_rel_insert_input
  userId: uuid
}

"""aggregate max on columns"""
type order_max_fields {
  address: String
  city: String
  cost: numeric
  createdAt: timestamptz
  deletedAt: timestamptz
  email: String
  name: String
  note: String
  patronymic: String
  phone: String
  surname: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "order"
"""
input order_max_order_by {
  address: order_by
  city: order_by
  cost: order_by
  createdAt: order_by
  deletedAt: order_by
  email: order_by
  name: order_by
  note: order_by
  patronymic: order_by
  phone: order_by
  surname: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type order_min_fields {
  address: String
  city: String
  cost: numeric
  createdAt: timestamptz
  deletedAt: timestamptz
  email: String
  name: String
  note: String
  patronymic: String
  phone: String
  surname: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "order"
"""
input order_min_order_by {
  address: order_by
  city: order_by
  cost: order_by
  createdAt: order_by
  deletedAt: order_by
  email: order_by
  name: order_by
  note: order_by
  patronymic: order_by
  phone: order_by
  surname: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "order"
"""
type order_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [order!]!
}

"""
input type for inserting object relation for remote table "order"
"""
input order_obj_rel_insert_input {
  data: order_insert_input!
  on_conflict: order_on_conflict
}

"""
on conflict condition type for table "order"
"""
input order_on_conflict {
  constraint: order_constraint!
  update_columns: [order_update_column!]!
}

"""
ordering options when selecting data from "order"
"""
input order_order_by {
  address: order_by
  city: order_by
  cost: order_by
  createdAt: order_by
  deletedAt: order_by
  email: order_by
  id: order_by
  isPaid: order_by
  name: order_by
  note: order_by
  orderProducts_aggregate: orderProduct_aggregate_order_by
  patronymic: order_by
  paymentType: order_by
  payments_aggregate: payment_aggregate_order_by
  phone: order_by
  surname: order_by
  updatedAt: order_by
  user: user_order_by
  userId: order_by
}

scalar order_paymenttype_enum

"""
expression to compare columns of type order_paymenttype_enum. All fields are combined with logical 'AND'.
"""
input order_paymenttype_enum_comparison_exp {
  _eq: order_paymenttype_enum
  _gt: order_paymenttype_enum
  _gte: order_paymenttype_enum
  _in: [order_paymenttype_enum]
  _is_null: Boolean
  _lt: order_paymenttype_enum
  _lte: order_paymenttype_enum
  _neq: order_paymenttype_enum
  _nin: [order_paymenttype_enum]
}

"""
select columns of table "order"
"""
enum order_select_column {
  """column name"""
  address

  """column name"""
  city

  """column name"""
  cost

  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  email

  """column name"""
  id

  """column name"""
  isPaid

  """column name"""
  name

  """column name"""
  note

  """column name"""
  patronymic

  """column name"""
  paymentType

  """column name"""
  phone

  """column name"""
  surname

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""
input type for updating data in table "order"
"""
input order_set_input {
  address: String
  city: String
  cost: numeric
  createdAt: timestamptz
  deletedAt: timestamptz
  email: String
  id: uuid
  isPaid: Boolean
  name: String
  note: String
  patronymic: String
  paymentType: order_paymenttype_enum
  phone: String
  surname: String
  updatedAt: timestamptz
  userId: uuid
}

"""aggregate stddev on columns"""
type order_stddev_fields {
  cost: Float
}

"""
order by stddev() on columns of table "order"
"""
input order_stddev_order_by {
  cost: order_by
}

"""aggregate stddev_pop on columns"""
type order_stddev_pop_fields {
  cost: Float
}

"""
order by stddev_pop() on columns of table "order"
"""
input order_stddev_pop_order_by {
  cost: order_by
}

"""aggregate stddev_samp on columns"""
type order_stddev_samp_fields {
  cost: Float
}

"""
order by stddev_samp() on columns of table "order"
"""
input order_stddev_samp_order_by {
  cost: order_by
}

"""aggregate sum on columns"""
type order_sum_fields {
  cost: numeric
}

"""
order by sum() on columns of table "order"
"""
input order_sum_order_by {
  cost: order_by
}

"""
update columns of table "order"
"""
enum order_update_column {
  """column name"""
  address

  """column name"""
  city

  """column name"""
  cost

  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  email

  """column name"""
  id

  """column name"""
  isPaid

  """column name"""
  name

  """column name"""
  note

  """column name"""
  patronymic

  """column name"""
  paymentType

  """column name"""
  phone

  """column name"""
  surname

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""aggregate var_pop on columns"""
type order_var_pop_fields {
  cost: Float
}

"""
order by var_pop() on columns of table "order"
"""
input order_var_pop_order_by {
  cost: order_by
}

"""aggregate var_samp on columns"""
type order_var_samp_fields {
  cost: Float
}

"""
order by var_samp() on columns of table "order"
"""
input order_var_samp_order_by {
  cost: order_by
}

"""aggregate variance on columns"""
type order_variance_fields {
  cost: Float
}

"""
order by variance() on columns of table "order"
"""
input order_variance_order_by {
  cost: order_by
}

"""
columns and relationships of "orderProduct"
"""
type orderProduct {
  cost: numeric!
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  order: order!
  orderId: uuid!

  """An object relationship"""
  work: work!
  workId: uuid!
}

"""
aggregated selection of "orderProduct"
"""
type orderProduct_aggregate {
  aggregate: orderProduct_aggregate_fields
  nodes: [orderProduct!]!
}

"""
aggregate fields of "orderProduct"
"""
type orderProduct_aggregate_fields {
  avg: orderProduct_avg_fields
  count(columns: [orderProduct_select_column!], distinct: Boolean): Int
  max: orderProduct_max_fields
  min: orderProduct_min_fields
  stddev: orderProduct_stddev_fields
  stddev_pop: orderProduct_stddev_pop_fields
  stddev_samp: orderProduct_stddev_samp_fields
  sum: orderProduct_sum_fields
  var_pop: orderProduct_var_pop_fields
  var_samp: orderProduct_var_samp_fields
  variance: orderProduct_variance_fields
}

"""
order by aggregate values of table "orderProduct"
"""
input orderProduct_aggregate_order_by {
  avg: orderProduct_avg_order_by
  count: order_by
  max: orderProduct_max_order_by
  min: orderProduct_min_order_by
  stddev: orderProduct_stddev_order_by
  stddev_pop: orderProduct_stddev_pop_order_by
  stddev_samp: orderProduct_stddev_samp_order_by
  sum: orderProduct_sum_order_by
  var_pop: orderProduct_var_pop_order_by
  var_samp: orderProduct_var_samp_order_by
  variance: orderProduct_variance_order_by
}

"""
input type for inserting array relation for remote table "orderProduct"
"""
input orderProduct_arr_rel_insert_input {
  data: [orderProduct_insert_input!]!
  on_conflict: orderProduct_on_conflict
}

"""aggregate avg on columns"""
type orderProduct_avg_fields {
  cost: Float
}

"""
order by avg() on columns of table "orderProduct"
"""
input orderProduct_avg_order_by {
  cost: order_by
}

"""
Boolean expression to filter rows from the table "orderProduct". All fields are combined with a logical 'AND'.
"""
input orderProduct_bool_exp {
  _and: [orderProduct_bool_exp]
  _not: orderProduct_bool_exp
  _or: [orderProduct_bool_exp]
  cost: numeric_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  order: order_bool_exp
  orderId: uuid_comparison_exp
  work: work_bool_exp
  workId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "orderProduct"
"""
enum orderProduct_constraint {
  """unique or primary key constraint"""
  PK_8c89300e91ad0ff68f67e7037a9
}

"""
input type for inserting data into table "orderProduct"
"""
input orderProduct_insert_input {
  cost: numeric
  deletedAt: timestamptz
  id: uuid
  order: order_obj_rel_insert_input
  orderId: uuid
  work: work_obj_rel_insert_input
  workId: uuid
}

"""aggregate max on columns"""
type orderProduct_max_fields {
  cost: numeric
  deletedAt: timestamptz
}

"""
order by max() on columns of table "orderProduct"
"""
input orderProduct_max_order_by {
  cost: order_by
  deletedAt: order_by
}

"""aggregate min on columns"""
type orderProduct_min_fields {
  cost: numeric
  deletedAt: timestamptz
}

"""
order by min() on columns of table "orderProduct"
"""
input orderProduct_min_order_by {
  cost: order_by
  deletedAt: order_by
}

"""
response of any mutation on the table "orderProduct"
"""
type orderProduct_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [orderProduct!]!
}

"""
input type for inserting object relation for remote table "orderProduct"
"""
input orderProduct_obj_rel_insert_input {
  data: orderProduct_insert_input!
  on_conflict: orderProduct_on_conflict
}

"""
on conflict condition type for table "orderProduct"
"""
input orderProduct_on_conflict {
  constraint: orderProduct_constraint!
  update_columns: [orderProduct_update_column!]!
}

"""
ordering options when selecting data from "orderProduct"
"""
input orderProduct_order_by {
  cost: order_by
  deletedAt: order_by
  id: order_by
  order: order_order_by
  orderId: order_by
  work: work_order_by
  workId: order_by
}

"""
select columns of table "orderProduct"
"""
enum orderProduct_select_column {
  """column name"""
  cost

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  orderId

  """column name"""
  workId
}

"""
input type for updating data in table "orderProduct"
"""
input orderProduct_set_input {
  cost: numeric
  deletedAt: timestamptz
  id: uuid
  orderId: uuid
  workId: uuid
}

"""aggregate stddev on columns"""
type orderProduct_stddev_fields {
  cost: Float
}

"""
order by stddev() on columns of table "orderProduct"
"""
input orderProduct_stddev_order_by {
  cost: order_by
}

"""aggregate stddev_pop on columns"""
type orderProduct_stddev_pop_fields {
  cost: Float
}

"""
order by stddev_pop() on columns of table "orderProduct"
"""
input orderProduct_stddev_pop_order_by {
  cost: order_by
}

"""aggregate stddev_samp on columns"""
type orderProduct_stddev_samp_fields {
  cost: Float
}

"""
order by stddev_samp() on columns of table "orderProduct"
"""
input orderProduct_stddev_samp_order_by {
  cost: order_by
}

"""aggregate sum on columns"""
type orderProduct_sum_fields {
  cost: numeric
}

"""
order by sum() on columns of table "orderProduct"
"""
input orderProduct_sum_order_by {
  cost: order_by
}

"""
update columns of table "orderProduct"
"""
enum orderProduct_update_column {
  """column name"""
  cost

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  orderId

  """column name"""
  workId
}

"""aggregate var_pop on columns"""
type orderProduct_var_pop_fields {
  cost: Float
}

"""
order by var_pop() on columns of table "orderProduct"
"""
input orderProduct_var_pop_order_by {
  cost: order_by
}

"""aggregate var_samp on columns"""
type orderProduct_var_samp_fields {
  cost: Float
}

"""
order by var_samp() on columns of table "orderProduct"
"""
input orderProduct_var_samp_order_by {
  cost: order_by
}

"""aggregate variance on columns"""
type orderProduct_variance_fields {
  cost: Float
}

"""
order by variance() on columns of table "orderProduct"
"""
input orderProduct_variance_order_by {
  cost: order_by
}

"""
columns and relationships of "page"
"""
type page {
  createdAt: timestamptz!
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  translation: pageI18n

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [pageI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pageI18n_order_by!]

    """filter the rows returned"""
    where: pageI18n_bool_exp
  ): [pageI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [pageI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pageI18n_order_by!]

    """filter the rows returned"""
    where: pageI18n_bool_exp
  ): pageI18n_aggregate!
  updatedAt: timestamptz!
}

"""
aggregated selection of "page"
"""
type page_aggregate {
  aggregate: page_aggregate_fields
  nodes: [page!]!
}

"""
aggregate fields of "page"
"""
type page_aggregate_fields {
  count(columns: [page_select_column!], distinct: Boolean): Int
  max: page_max_fields
  min: page_min_fields
}

"""
order by aggregate values of table "page"
"""
input page_aggregate_order_by {
  count: order_by
  max: page_max_order_by
  min: page_min_order_by
}

"""
input type for inserting array relation for remote table "page"
"""
input page_arr_rel_insert_input {
  data: [page_insert_input!]!
  on_conflict: page_on_conflict
}

"""
Boolean expression to filter rows from the table "page". All fields are combined with a logical 'AND'.
"""
input page_bool_exp {
  _and: [page_bool_exp]
  _not: page_bool_exp
  _or: [page_bool_exp]
  createdAt: timestamptz_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  translation: pageI18n_bool_exp
  translations: pageI18n_bool_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "page"
"""
enum page_constraint {
  """unique or primary key constraint"""
  PK_742f4117e065c5b6ad21b37ba1f
}

"""
input type for inserting data into table "page"
"""
input page_insert_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  id: uuid
  translation: pageI18n_obj_rel_insert_input
  translations: pageI18n_arr_rel_insert_input
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type page_max_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  updatedAt: timestamptz
}

"""
order by max() on columns of table "page"
"""
input page_max_order_by {
  createdAt: order_by
  deletedAt: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type page_min_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  updatedAt: timestamptz
}

"""
order by min() on columns of table "page"
"""
input page_min_order_by {
  createdAt: order_by
  deletedAt: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "page"
"""
type page_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [page!]!
}

"""
input type for inserting object relation for remote table "page"
"""
input page_obj_rel_insert_input {
  data: page_insert_input!
  on_conflict: page_on_conflict
}

"""
on conflict condition type for table "page"
"""
input page_on_conflict {
  constraint: page_constraint!
  update_columns: [page_update_column!]!
}

"""
ordering options when selecting data from "page"
"""
input page_order_by {
  createdAt: order_by
  deletedAt: order_by
  id: order_by
  translation: pageI18n_order_by
  translations_aggregate: pageI18n_aggregate_order_by
  updatedAt: order_by
}

"""
select columns of table "page"
"""
enum page_select_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "page"
"""
input page_set_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  id: uuid
  updatedAt: timestamptz
}

"""
update columns of table "page"
"""
enum page_update_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  updatedAt
}

"""
columns and relationships of "pageI18n"
"""
type pageI18n {
  body: String!
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  metaDescription: String!
  metaTitle: String!

  """An object relationship"""
  page: page!
  pageId: uuid!
  slug: String!
  title: String!
}

"""
aggregated selection of "pageI18n"
"""
type pageI18n_aggregate {
  aggregate: pageI18n_aggregate_fields
  nodes: [pageI18n!]!
}

"""
aggregate fields of "pageI18n"
"""
type pageI18n_aggregate_fields {
  count(columns: [pageI18n_select_column!], distinct: Boolean): Int
  max: pageI18n_max_fields
  min: pageI18n_min_fields
}

"""
order by aggregate values of table "pageI18n"
"""
input pageI18n_aggregate_order_by {
  count: order_by
  max: pageI18n_max_order_by
  min: pageI18n_min_order_by
}

"""
input type for inserting array relation for remote table "pageI18n"
"""
input pageI18n_arr_rel_insert_input {
  data: [pageI18n_insert_input!]!
  on_conflict: pageI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "pageI18n". All fields are combined with a logical 'AND'.
"""
input pageI18n_bool_exp {
  _and: [pageI18n_bool_exp]
  _not: pageI18n_bool_exp
  _or: [pageI18n_bool_exp]
  body: text_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  metaDescription: varchar_comparison_exp
  metaTitle: varchar_comparison_exp
  page: page_bool_exp
  pageId: uuid_comparison_exp
  slug: varchar_comparison_exp
  title: varchar_comparison_exp
}

"""
unique or primary key constraints on table "pageI18n"
"""
enum pageI18n_constraint {
  """unique or primary key constraint"""
  PK_46a51c4f213544566b06fc9f49a

  """unique or primary key constraint"""
  UQ_a23b2e7199b116af85053eb6dfa
}

"""
input type for inserting data into table "pageI18n"
"""
input pageI18n_insert_input {
  body: String
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  metaDescription: String
  metaTitle: String
  page: page_obj_rel_insert_input
  pageId: uuid
  slug: String
  title: String
}

"""aggregate max on columns"""
type pageI18n_max_fields {
  body: String
  deletedAt: timestamptz
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""
order by max() on columns of table "pageI18n"
"""
input pageI18n_max_order_by {
  body: order_by
  deletedAt: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
}

"""aggregate min on columns"""
type pageI18n_min_fields {
  body: String
  deletedAt: timestamptz
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""
order by min() on columns of table "pageI18n"
"""
input pageI18n_min_order_by {
  body: order_by
  deletedAt: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
}

"""
response of any mutation on the table "pageI18n"
"""
type pageI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [pageI18n!]!
}

"""
input type for inserting object relation for remote table "pageI18n"
"""
input pageI18n_obj_rel_insert_input {
  data: pageI18n_insert_input!
  on_conflict: pageI18n_on_conflict
}

"""
on conflict condition type for table "pageI18n"
"""
input pageI18n_on_conflict {
  constraint: pageI18n_constraint!
  update_columns: [pageI18n_update_column!]!
}

"""
ordering options when selecting data from "pageI18n"
"""
input pageI18n_order_by {
  body: order_by
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  metaDescription: order_by
  metaTitle: order_by
  page: page_order_by
  pageId: order_by
  slug: order_by
  title: order_by
}

"""
select columns of table "pageI18n"
"""
enum pageI18n_select_column {
  """column name"""
  body

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  pageId

  """column name"""
  slug

  """column name"""
  title
}

"""
input type for updating data in table "pageI18n"
"""
input pageI18n_set_input {
  body: String
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  metaDescription: String
  metaTitle: String
  pageId: uuid
  slug: String
  title: String
}

"""
update columns of table "pageI18n"
"""
enum pageI18n_update_column {
  """column name"""
  body

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  pageId

  """column name"""
  slug

  """column name"""
  title
}

"""
columns and relationships of "payment"
"""
type payment {
  createdAt: timestamptz!
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  order: order!
  orderId: uuid!
  paymentDate: timestamptz
  paymentId: String
  paytype: String
  service: payment_service_enum!
  status: payment_status_enum!
  transactionId: String
  updatedAt: timestamptz!
}

"""
aggregated selection of "payment"
"""
type payment_aggregate {
  aggregate: payment_aggregate_fields
  nodes: [payment!]!
}

"""
aggregate fields of "payment"
"""
type payment_aggregate_fields {
  count(columns: [payment_select_column!], distinct: Boolean): Int
  max: payment_max_fields
  min: payment_min_fields
}

"""
order by aggregate values of table "payment"
"""
input payment_aggregate_order_by {
  count: order_by
  max: payment_max_order_by
  min: payment_min_order_by
}

"""
input type for inserting array relation for remote table "payment"
"""
input payment_arr_rel_insert_input {
  data: [payment_insert_input!]!
  on_conflict: payment_on_conflict
}

"""
Boolean expression to filter rows from the table "payment". All fields are combined with a logical 'AND'.
"""
input payment_bool_exp {
  _and: [payment_bool_exp]
  _not: payment_bool_exp
  _or: [payment_bool_exp]
  createdAt: timestamptz_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  order: order_bool_exp
  orderId: uuid_comparison_exp
  paymentDate: timestamptz_comparison_exp
  paymentId: varchar_comparison_exp
  paytype: varchar_comparison_exp
  service: payment_service_enum_comparison_exp
  status: payment_status_enum_comparison_exp
  transactionId: varchar_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "payment"
"""
enum payment_constraint {
  """unique or primary key constraint"""
  PK_fcaec7df5adf9cac408c686b2ab
}

"""
input type for inserting data into table "payment"
"""
input payment_insert_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  id: uuid
  order: order_obj_rel_insert_input
  orderId: uuid
  paymentDate: timestamptz
  paymentId: String
  paytype: String
  service: payment_service_enum
  status: payment_status_enum
  transactionId: String
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type payment_max_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  paymentDate: timestamptz
  paymentId: String
  paytype: String
  transactionId: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "payment"
"""
input payment_max_order_by {
  createdAt: order_by
  deletedAt: order_by
  paymentDate: order_by
  paymentId: order_by
  paytype: order_by
  transactionId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type payment_min_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  paymentDate: timestamptz
  paymentId: String
  paytype: String
  transactionId: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "payment"
"""
input payment_min_order_by {
  createdAt: order_by
  deletedAt: order_by
  paymentDate: order_by
  paymentId: order_by
  paytype: order_by
  transactionId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "payment"
"""
type payment_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [payment!]!
}

"""
input type for inserting object relation for remote table "payment"
"""
input payment_obj_rel_insert_input {
  data: payment_insert_input!
  on_conflict: payment_on_conflict
}

"""
on conflict condition type for table "payment"
"""
input payment_on_conflict {
  constraint: payment_constraint!
  update_columns: [payment_update_column!]!
}

"""
ordering options when selecting data from "payment"
"""
input payment_order_by {
  createdAt: order_by
  deletedAt: order_by
  id: order_by
  order: order_order_by
  orderId: order_by
  paymentDate: order_by
  paymentId: order_by
  paytype: order_by
  service: order_by
  status: order_by
  transactionId: order_by
  updatedAt: order_by
}

"""
select columns of table "payment"
"""
enum payment_select_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  orderId

  """column name"""
  paymentDate

  """column name"""
  paymentId

  """column name"""
  paytype

  """column name"""
  service

  """column name"""
  status

  """column name"""
  transactionId

  """column name"""
  updatedAt
}

scalar payment_service_enum

"""
expression to compare columns of type payment_service_enum. All fields are combined with logical 'AND'.
"""
input payment_service_enum_comparison_exp {
  _eq: payment_service_enum
  _gt: payment_service_enum
  _gte: payment_service_enum
  _in: [payment_service_enum]
  _is_null: Boolean
  _lt: payment_service_enum
  _lte: payment_service_enum
  _neq: payment_service_enum
  _nin: [payment_service_enum]
}

"""
input type for updating data in table "payment"
"""
input payment_set_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  id: uuid
  orderId: uuid
  paymentDate: timestamptz
  paymentId: String
  paytype: String
  service: payment_service_enum
  status: payment_status_enum
  transactionId: String
  updatedAt: timestamptz
}

scalar payment_status_enum

"""
expression to compare columns of type payment_status_enum. All fields are combined with logical 'AND'.
"""
input payment_status_enum_comparison_exp {
  _eq: payment_status_enum
  _gt: payment_status_enum
  _gte: payment_status_enum
  _in: [payment_status_enum]
  _is_null: Boolean
  _lt: payment_status_enum
  _lte: payment_status_enum
  _neq: payment_status_enum
  _nin: [payment_status_enum]
}

"""
update columns of table "payment"
"""
enum payment_update_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  orderId

  """column name"""
  paymentDate

  """column name"""
  paymentId

  """column name"""
  paytype

  """column name"""
  service

  """column name"""
  status

  """column name"""
  transactionId

  """column name"""
  updatedAt
}

"""
columns and relationships of "provenance"
"""
type provenance {
  deletedAt: timestamptz
  id: uuid!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [provenanceI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenanceI18n_order_by!]

    """filter the rows returned"""
    where: provenanceI18n_bool_exp
  ): [provenanceI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [provenanceI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenanceI18n_order_by!]

    """filter the rows returned"""
    where: provenanceI18n_bool_exp
  ): provenanceI18n_aggregate!

  """An array relationship"""
  works(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): [work!]!

  """An aggregated array relationship"""
  works_aggregate(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): work_aggregate!
}

"""
aggregated selection of "provenance"
"""
type provenance_aggregate {
  aggregate: provenance_aggregate_fields
  nodes: [provenance!]!
}

"""
aggregate fields of "provenance"
"""
type provenance_aggregate_fields {
  count(columns: [provenance_select_column!], distinct: Boolean): Int
  max: provenance_max_fields
  min: provenance_min_fields
}

"""
order by aggregate values of table "provenance"
"""
input provenance_aggregate_order_by {
  count: order_by
  max: provenance_max_order_by
  min: provenance_min_order_by
}

"""
input type for inserting array relation for remote table "provenance"
"""
input provenance_arr_rel_insert_input {
  data: [provenance_insert_input!]!
  on_conflict: provenance_on_conflict
}

"""
Boolean expression to filter rows from the table "provenance". All fields are combined with a logical 'AND'.
"""
input provenance_bool_exp {
  _and: [provenance_bool_exp]
  _not: provenance_bool_exp
  _or: [provenance_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  translations: provenanceI18n_bool_exp
  works: work_bool_exp
}

"""
unique or primary key constraints on table "provenance"
"""
enum provenance_constraint {
  """unique or primary key constraint"""
  PK_8dd83ca431623c344a0cbdb5543
}

"""
input type for inserting data into table "provenance"
"""
input provenance_insert_input {
  deletedAt: timestamptz
  id: uuid
  translations: provenanceI18n_arr_rel_insert_input
  works: work_arr_rel_insert_input
}

"""aggregate max on columns"""
type provenance_max_fields {
  deletedAt: timestamptz
}

"""
order by max() on columns of table "provenance"
"""
input provenance_max_order_by {
  deletedAt: order_by
}

"""aggregate min on columns"""
type provenance_min_fields {
  deletedAt: timestamptz
}

"""
order by min() on columns of table "provenance"
"""
input provenance_min_order_by {
  deletedAt: order_by
}

"""
response of any mutation on the table "provenance"
"""
type provenance_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [provenance!]!
}

"""
input type for inserting object relation for remote table "provenance"
"""
input provenance_obj_rel_insert_input {
  data: provenance_insert_input!
  on_conflict: provenance_on_conflict
}

"""
on conflict condition type for table "provenance"
"""
input provenance_on_conflict {
  constraint: provenance_constraint!
  update_columns: [provenance_update_column!]!
}

"""
ordering options when selecting data from "provenance"
"""
input provenance_order_by {
  deletedAt: order_by
  id: order_by
  translations_aggregate: provenanceI18n_aggregate_order_by
  works_aggregate: work_aggregate_order_by
}

"""
select columns of table "provenance"
"""
enum provenance_select_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
input type for updating data in table "provenance"
"""
input provenance_set_input {
  deletedAt: timestamptz
  id: uuid
}

"""
update columns of table "provenance"
"""
enum provenance_update_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
columns and relationships of "provenanceI18n"
"""
type provenanceI18n {
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  name: String!

  """An object relationship"""
  provenance: provenance!
  provenanceId: uuid!
}

"""
aggregated selection of "provenanceI18n"
"""
type provenanceI18n_aggregate {
  aggregate: provenanceI18n_aggregate_fields
  nodes: [provenanceI18n!]!
}

"""
aggregate fields of "provenanceI18n"
"""
type provenanceI18n_aggregate_fields {
  count(columns: [provenanceI18n_select_column!], distinct: Boolean): Int
  max: provenanceI18n_max_fields
  min: provenanceI18n_min_fields
}

"""
order by aggregate values of table "provenanceI18n"
"""
input provenanceI18n_aggregate_order_by {
  count: order_by
  max: provenanceI18n_max_order_by
  min: provenanceI18n_min_order_by
}

"""
input type for inserting array relation for remote table "provenanceI18n"
"""
input provenanceI18n_arr_rel_insert_input {
  data: [provenanceI18n_insert_input!]!
  on_conflict: provenanceI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "provenanceI18n". All fields are combined with a logical 'AND'.
"""
input provenanceI18n_bool_exp {
  _and: [provenanceI18n_bool_exp]
  _not: provenanceI18n_bool_exp
  _or: [provenanceI18n_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  name: varchar_comparison_exp
  provenance: provenance_bool_exp
  provenanceId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "provenanceI18n"
"""
enum provenanceI18n_constraint {
  """unique or primary key constraint"""
  PK_d452a185f01f1cebea331d3cd28
}

"""
input type for inserting data into table "provenanceI18n"
"""
input provenanceI18n_insert_input {
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  name: String
  provenance: provenance_obj_rel_insert_input
  provenanceId: uuid
}

"""aggregate max on columns"""
type provenanceI18n_max_fields {
  deletedAt: timestamptz
  name: String
}

"""
order by max() on columns of table "provenanceI18n"
"""
input provenanceI18n_max_order_by {
  deletedAt: order_by
  name: order_by
}

"""aggregate min on columns"""
type provenanceI18n_min_fields {
  deletedAt: timestamptz
  name: String
}

"""
order by min() on columns of table "provenanceI18n"
"""
input provenanceI18n_min_order_by {
  deletedAt: order_by
  name: order_by
}

"""
response of any mutation on the table "provenanceI18n"
"""
type provenanceI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [provenanceI18n!]!
}

"""
input type for inserting object relation for remote table "provenanceI18n"
"""
input provenanceI18n_obj_rel_insert_input {
  data: provenanceI18n_insert_input!
  on_conflict: provenanceI18n_on_conflict
}

"""
on conflict condition type for table "provenanceI18n"
"""
input provenanceI18n_on_conflict {
  constraint: provenanceI18n_constraint!
  update_columns: [provenanceI18n_update_column!]!
}

"""
ordering options when selecting data from "provenanceI18n"
"""
input provenanceI18n_order_by {
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  name: order_by
  provenance: provenance_order_by
  provenanceId: order_by
}

"""
select columns of table "provenanceI18n"
"""
enum provenanceI18n_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  name

  """column name"""
  provenanceId
}

"""
input type for updating data in table "provenanceI18n"
"""
input provenanceI18n_set_input {
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  name: String
  provenanceId: uuid
}

"""
update columns of table "provenanceI18n"
"""
enum provenanceI18n_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  name

  """column name"""
  provenanceId
}

"""query root"""
type query_root {
  """
  fetch data from the table: "artist"
  """
  artist(
    """distinct select on columns"""
    distinct_on: [artist_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artist_order_by!]

    """filter the rows returned"""
    where: artist_bool_exp
  ): [artist!]!

  """
  fetch data from the table: "artistCategory"
  """
  artistCategory(
    """distinct select on columns"""
    distinct_on: [artistCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistCategory_order_by!]

    """filter the rows returned"""
    where: artistCategory_bool_exp
  ): [artistCategory!]!

  """
  fetch aggregated fields from the table: "artistCategory"
  """
  artistCategory_aggregate(
    """distinct select on columns"""
    distinct_on: [artistCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistCategory_order_by!]

    """filter the rows returned"""
    where: artistCategory_bool_exp
  ): artistCategory_aggregate!

  """fetch data from the table: "artistCategory" using primary key columns"""
  artistCategory_by_pk(artistId: uuid!, categoryId: uuid!): artistCategory

  """
  fetch data from the table: "artistI18n"
  """
  artistI18n(
    """distinct select on columns"""
    distinct_on: [artistI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistI18n_order_by!]

    """filter the rows returned"""
    where: artistI18n_bool_exp
  ): [artistI18n!]!

  """
  fetch aggregated fields from the table: "artistI18n"
  """
  artistI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [artistI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistI18n_order_by!]

    """filter the rows returned"""
    where: artistI18n_bool_exp
  ): artistI18n_aggregate!

  """fetch data from the table: "artistI18n" using primary key columns"""
  artistI18n_by_pk(id: uuid!): artistI18n

  """
  fetch aggregated fields from the table: "artist"
  """
  artist_aggregate(
    """distinct select on columns"""
    distinct_on: [artist_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artist_order_by!]

    """filter the rows returned"""
    where: artist_bool_exp
  ): artist_aggregate!

  """fetch data from the table: "artist" using primary key columns"""
  artist_by_pk(id: uuid!): artist

  """
  fetch data from the table: "basis"
  """
  basis(
    """distinct select on columns"""
    distinct_on: [basis_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basis_order_by!]

    """filter the rows returned"""
    where: basis_bool_exp
  ): [basis!]!

  """
  fetch data from the table: "basisI18n"
  """
  basisI18n(
    """distinct select on columns"""
    distinct_on: [basisI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basisI18n_order_by!]

    """filter the rows returned"""
    where: basisI18n_bool_exp
  ): [basisI18n!]!

  """
  fetch aggregated fields from the table: "basisI18n"
  """
  basisI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [basisI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basisI18n_order_by!]

    """filter the rows returned"""
    where: basisI18n_bool_exp
  ): basisI18n_aggregate!

  """fetch data from the table: "basisI18n" using primary key columns"""
  basisI18n_by_pk(id: uuid!): basisI18n

  """
  fetch aggregated fields from the table: "basis"
  """
  basis_aggregate(
    """distinct select on columns"""
    distinct_on: [basis_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basis_order_by!]

    """filter the rows returned"""
    where: basis_bool_exp
  ): basis_aggregate!

  """fetch data from the table: "basis" using primary key columns"""
  basis_by_pk(id: uuid!): basis

  """
  fetch data from the table: "cart"
  """
  cart(
    """distinct select on columns"""
    distinct_on: [cart_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cart_order_by!]

    """filter the rows returned"""
    where: cart_bool_exp
  ): [cart!]!

  """
  fetch aggregated fields from the table: "cart"
  """
  cart_aggregate(
    """distinct select on columns"""
    distinct_on: [cart_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cart_order_by!]

    """filter the rows returned"""
    where: cart_bool_exp
  ): cart_aggregate!

  """fetch data from the table: "cart" using primary key columns"""
  cart_by_pk(id: uuid!): cart

  """
  fetch data from the table: "category"
  """
  category(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): [category!]!

  """
  fetch data from the table: "categoryI18n"
  """
  categoryI18n(
    """distinct select on columns"""
    distinct_on: [categoryI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categoryI18n_order_by!]

    """filter the rows returned"""
    where: categoryI18n_bool_exp
  ): [categoryI18n!]!

  """
  fetch aggregated fields from the table: "categoryI18n"
  """
  categoryI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [categoryI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categoryI18n_order_by!]

    """filter the rows returned"""
    where: categoryI18n_bool_exp
  ): categoryI18n_aggregate!

  """fetch data from the table: "categoryI18n" using primary key columns"""
  categoryI18n_by_pk(id: uuid!): categoryI18n

  """
  fetch aggregated fields from the table: "category"
  """
  category_aggregate(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): category_aggregate!

  """fetch data from the table: "category" using primary key columns"""
  category_by_pk(id: uuid!): category

  """
  fetch data from the table: "customField"
  """
  customField(
    """distinct select on columns"""
    distinct_on: [customField_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customField_order_by!]

    """filter the rows returned"""
    where: customField_bool_exp
  ): [customField!]!

  """
  fetch data from the table: "customFieldI18n"
  """
  customFieldI18n(
    """distinct select on columns"""
    distinct_on: [customFieldI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldI18n_order_by!]

    """filter the rows returned"""
    where: customFieldI18n_bool_exp
  ): [customFieldI18n!]!

  """
  fetch aggregated fields from the table: "customFieldI18n"
  """
  customFieldI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [customFieldI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldI18n_order_by!]

    """filter the rows returned"""
    where: customFieldI18n_bool_exp
  ): customFieldI18n_aggregate!

  """fetch data from the table: "customFieldI18n" using primary key columns"""
  customFieldI18n_by_pk(id: uuid!): customFieldI18n

  """
  fetch data from the table: "customFieldWork"
  """
  customFieldWork(
    """distinct select on columns"""
    distinct_on: [customFieldWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldWork_order_by!]

    """filter the rows returned"""
    where: customFieldWork_bool_exp
  ): [customFieldWork!]!

  """
  fetch aggregated fields from the table: "customFieldWork"
  """
  customFieldWork_aggregate(
    """distinct select on columns"""
    distinct_on: [customFieldWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldWork_order_by!]

    """filter the rows returned"""
    where: customFieldWork_bool_exp
  ): customFieldWork_aggregate!

  """fetch data from the table: "customFieldWork" using primary key columns"""
  customFieldWork_by_pk(customFieldId: uuid!, workId: uuid!): customFieldWork

  """
  fetch aggregated fields from the table: "customField"
  """
  customField_aggregate(
    """distinct select on columns"""
    distinct_on: [customField_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customField_order_by!]

    """filter the rows returned"""
    where: customField_bool_exp
  ): customField_aggregate!

  """fetch data from the table: "customField" using primary key columns"""
  customField_by_pk(id: uuid!): customField

  """
  fetch data from the table: "exhibition"
  """
  exhibition(
    """distinct select on columns"""
    distinct_on: [exhibition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibition_order_by!]

    """filter the rows returned"""
    where: exhibition_bool_exp
  ): [exhibition!]!

  """
  fetch data from the table: "exhibitionCategory"
  """
  exhibitionCategory(
    """distinct select on columns"""
    distinct_on: [exhibitionCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionCategory_order_by!]

    """filter the rows returned"""
    where: exhibitionCategory_bool_exp
  ): [exhibitionCategory!]!

  """
  fetch aggregated fields from the table: "exhibitionCategory"
  """
  exhibitionCategory_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionCategory_order_by!]

    """filter the rows returned"""
    where: exhibitionCategory_bool_exp
  ): exhibitionCategory_aggregate!

  """
  fetch data from the table: "exhibitionCategory" using primary key columns
  """
  exhibitionCategory_by_pk(categoryId: uuid!, exhibitionId: uuid!): exhibitionCategory

  """
  fetch data from the table: "exhibitionI18n"
  """
  exhibitionI18n(
    """distinct select on columns"""
    distinct_on: [exhibitionI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionI18n_order_by!]

    """filter the rows returned"""
    where: exhibitionI18n_bool_exp
  ): [exhibitionI18n!]!

  """
  fetch aggregated fields from the table: "exhibitionI18n"
  """
  exhibitionI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionI18n_order_by!]

    """filter the rows returned"""
    where: exhibitionI18n_bool_exp
  ): exhibitionI18n_aggregate!

  """fetch data from the table: "exhibitionI18n" using primary key columns"""
  exhibitionI18n_by_pk(id: uuid!): exhibitionI18n

  """
  fetch data from the table: "exhibitionWork"
  """
  exhibitionWork(
    """distinct select on columns"""
    distinct_on: [exhibitionWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionWork_order_by!]

    """filter the rows returned"""
    where: exhibitionWork_bool_exp
  ): [exhibitionWork!]!

  """
  fetch aggregated fields from the table: "exhibitionWork"
  """
  exhibitionWork_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionWork_order_by!]

    """filter the rows returned"""
    where: exhibitionWork_bool_exp
  ): exhibitionWork_aggregate!

  """fetch data from the table: "exhibitionWork" using primary key columns"""
  exhibitionWork_by_pk(exhibitionId: uuid!, workId: uuid!): exhibitionWork

  """
  fetch aggregated fields from the table: "exhibition"
  """
  exhibition_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibition_order_by!]

    """filter the rows returned"""
    where: exhibition_bool_exp
  ): exhibition_aggregate!

  """fetch data from the table: "exhibition" using primary key columns"""
  exhibition_by_pk(id: uuid!): exhibition

  """
  fetch data from the table: "file"
  """
  file(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): [file!]!

  """
  fetch data from the table: "fileI18n"
  """
  fileI18n(
    """distinct select on columns"""
    distinct_on: [fileI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fileI18n_order_by!]

    """filter the rows returned"""
    where: fileI18n_bool_exp
  ): [fileI18n!]!

  """
  fetch aggregated fields from the table: "fileI18n"
  """
  fileI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [fileI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fileI18n_order_by!]

    """filter the rows returned"""
    where: fileI18n_bool_exp
  ): fileI18n_aggregate!

  """fetch data from the table: "fileI18n" using primary key columns"""
  fileI18n_by_pk(id: uuid!): fileI18n

  """
  fetch aggregated fields from the table: "file"
  """
  file_aggregate(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): file_aggregate!

  """fetch data from the table: "file" using primary key columns"""
  file_by_pk(id: uuid!): file

  """
  fetch data from the table: "link"
  """
  link(
    """distinct select on columns"""
    distinct_on: [link_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [link_order_by!]

    """filter the rows returned"""
    where: link_bool_exp
  ): [link!]!

  """
  fetch data from the table: "linkI18n"
  """
  linkI18n(
    """distinct select on columns"""
    distinct_on: [linkI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [linkI18n_order_by!]

    """filter the rows returned"""
    where: linkI18n_bool_exp
  ): [linkI18n!]!

  """
  fetch aggregated fields from the table: "linkI18n"
  """
  linkI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [linkI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [linkI18n_order_by!]

    """filter the rows returned"""
    where: linkI18n_bool_exp
  ): linkI18n_aggregate!

  """fetch data from the table: "linkI18n" using primary key columns"""
  linkI18n_by_pk(id: uuid!): linkI18n

  """
  fetch aggregated fields from the table: "link"
  """
  link_aggregate(
    """distinct select on columns"""
    distinct_on: [link_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [link_order_by!]

    """filter the rows returned"""
    where: link_bool_exp
  ): link_aggregate!

  """fetch data from the table: "link" using primary key columns"""
  link_by_pk(id: uuid!): link

  """
  fetch data from the table: "locale"
  """
  locale(
    """distinct select on columns"""
    distinct_on: [locale_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locale_order_by!]

    """filter the rows returned"""
    where: locale_bool_exp
  ): [locale!]!

  """
  fetch aggregated fields from the table: "locale"
  """
  locale_aggregate(
    """distinct select on columns"""
    distinct_on: [locale_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locale_order_by!]

    """filter the rows returned"""
    where: locale_bool_exp
  ): locale_aggregate!

  """fetch data from the table: "locale" using primary key columns"""
  locale_by_pk(id: uuid!): locale

  """
  fetch data from the table: "navigation"
  """
  navigation(
    """distinct select on columns"""
    distinct_on: [navigation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigation_order_by!]

    """filter the rows returned"""
    where: navigation_bool_exp
  ): [navigation!]!

  """
  fetch data from the table: "navigationI18n"
  """
  navigationI18n(
    """distinct select on columns"""
    distinct_on: [navigationI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigationI18n_order_by!]

    """filter the rows returned"""
    where: navigationI18n_bool_exp
  ): [navigationI18n!]!

  """
  fetch aggregated fields from the table: "navigationI18n"
  """
  navigationI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [navigationI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigationI18n_order_by!]

    """filter the rows returned"""
    where: navigationI18n_bool_exp
  ): navigationI18n_aggregate!

  """fetch data from the table: "navigationI18n" using primary key columns"""
  navigationI18n_by_pk(id: uuid!): navigationI18n

  """
  fetch aggregated fields from the table: "navigation"
  """
  navigation_aggregate(
    """distinct select on columns"""
    distinct_on: [navigation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigation_order_by!]

    """filter the rows returned"""
    where: navigation_bool_exp
  ): navigation_aggregate!

  """fetch data from the table: "navigation" using primary key columns"""
  navigation_by_pk(id: uuid!): navigation

  """
  fetch data from the table: "news"
  """
  news(
    """distinct select on columns"""
    distinct_on: [news_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [news_order_by!]

    """filter the rows returned"""
    where: news_bool_exp
  ): [news!]!

  """
  fetch data from the table: "newsCategory"
  """
  newsCategory(
    """distinct select on columns"""
    distinct_on: [newsCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsCategory_order_by!]

    """filter the rows returned"""
    where: newsCategory_bool_exp
  ): [newsCategory!]!

  """
  fetch aggregated fields from the table: "newsCategory"
  """
  newsCategory_aggregate(
    """distinct select on columns"""
    distinct_on: [newsCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsCategory_order_by!]

    """filter the rows returned"""
    where: newsCategory_bool_exp
  ): newsCategory_aggregate!

  """fetch data from the table: "newsCategory" using primary key columns"""
  newsCategory_by_pk(categoryId: uuid!, newsId: uuid!): newsCategory

  """
  fetch data from the table: "newsI18n"
  """
  newsI18n(
    """distinct select on columns"""
    distinct_on: [newsI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsI18n_order_by!]

    """filter the rows returned"""
    where: newsI18n_bool_exp
  ): [newsI18n!]!

  """
  fetch aggregated fields from the table: "newsI18n"
  """
  newsI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [newsI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsI18n_order_by!]

    """filter the rows returned"""
    where: newsI18n_bool_exp
  ): newsI18n_aggregate!

  """fetch data from the table: "newsI18n" using primary key columns"""
  newsI18n_by_pk(id: uuid!): newsI18n

  """
  fetch aggregated fields from the table: "news"
  """
  news_aggregate(
    """distinct select on columns"""
    distinct_on: [news_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [news_order_by!]

    """filter the rows returned"""
    where: news_bool_exp
  ): news_aggregate!

  """fetch data from the table: "news" using primary key columns"""
  news_by_pk(id: uuid!): news

  """
  fetch data from the table: "order"
  """
  order(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): [order!]!

  """
  fetch data from the table: "orderProduct"
  """
  orderProduct(
    """distinct select on columns"""
    distinct_on: [orderProduct_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [orderProduct_order_by!]

    """filter the rows returned"""
    where: orderProduct_bool_exp
  ): [orderProduct!]!

  """
  fetch aggregated fields from the table: "orderProduct"
  """
  orderProduct_aggregate(
    """distinct select on columns"""
    distinct_on: [orderProduct_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [orderProduct_order_by!]

    """filter the rows returned"""
    where: orderProduct_bool_exp
  ): orderProduct_aggregate!

  """fetch data from the table: "orderProduct" using primary key columns"""
  orderProduct_by_pk(id: uuid!): orderProduct

  """
  fetch aggregated fields from the table: "order"
  """
  order_aggregate(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): order_aggregate!

  """fetch data from the table: "order" using primary key columns"""
  order_by_pk(id: uuid!): order

  """
  fetch data from the table: "page"
  """
  page(
    """distinct select on columns"""
    distinct_on: [page_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [page_order_by!]

    """filter the rows returned"""
    where: page_bool_exp
  ): [page!]!

  """
  fetch data from the table: "pageI18n"
  """
  pageI18n(
    """distinct select on columns"""
    distinct_on: [pageI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pageI18n_order_by!]

    """filter the rows returned"""
    where: pageI18n_bool_exp
  ): [pageI18n!]!

  """
  fetch aggregated fields from the table: "pageI18n"
  """
  pageI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [pageI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pageI18n_order_by!]

    """filter the rows returned"""
    where: pageI18n_bool_exp
  ): pageI18n_aggregate!

  """fetch data from the table: "pageI18n" using primary key columns"""
  pageI18n_by_pk(id: uuid!): pageI18n

  """
  fetch aggregated fields from the table: "page"
  """
  page_aggregate(
    """distinct select on columns"""
    distinct_on: [page_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [page_order_by!]

    """filter the rows returned"""
    where: page_bool_exp
  ): page_aggregate!

  """fetch data from the table: "page" using primary key columns"""
  page_by_pk(id: uuid!): page

  """
  fetch data from the table: "payment"
  """
  payment(
    """distinct select on columns"""
    distinct_on: [payment_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payment_order_by!]

    """filter the rows returned"""
    where: payment_bool_exp
  ): [payment!]!

  """
  fetch aggregated fields from the table: "payment"
  """
  payment_aggregate(
    """distinct select on columns"""
    distinct_on: [payment_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payment_order_by!]

    """filter the rows returned"""
    where: payment_bool_exp
  ): payment_aggregate!

  """fetch data from the table: "payment" using primary key columns"""
  payment_by_pk(id: uuid!): payment

  """
  fetch data from the table: "provenance"
  """
  provenance(
    """distinct select on columns"""
    distinct_on: [provenance_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenance_order_by!]

    """filter the rows returned"""
    where: provenance_bool_exp
  ): [provenance!]!

  """
  fetch data from the table: "provenanceI18n"
  """
  provenanceI18n(
    """distinct select on columns"""
    distinct_on: [provenanceI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenanceI18n_order_by!]

    """filter the rows returned"""
    where: provenanceI18n_bool_exp
  ): [provenanceI18n!]!

  """
  fetch aggregated fields from the table: "provenanceI18n"
  """
  provenanceI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [provenanceI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenanceI18n_order_by!]

    """filter the rows returned"""
    where: provenanceI18n_bool_exp
  ): provenanceI18n_aggregate!

  """fetch data from the table: "provenanceI18n" using primary key columns"""
  provenanceI18n_by_pk(id: uuid!): provenanceI18n

  """
  fetch aggregated fields from the table: "provenance"
  """
  provenance_aggregate(
    """distinct select on columns"""
    distinct_on: [provenance_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenance_order_by!]

    """filter the rows returned"""
    where: provenance_bool_exp
  ): provenance_aggregate!

  """fetch data from the table: "provenance" using primary key columns"""
  provenance_by_pk(id: uuid!): provenance

  """
  fetch data from the table: "school"
  """
  school(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): [school!]!

  """
  fetch data from the table: "schoolI18n"
  """
  schoolI18n(
    """distinct select on columns"""
    distinct_on: [schoolI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolI18n_order_by!]

    """filter the rows returned"""
    where: schoolI18n_bool_exp
  ): [schoolI18n!]!

  """
  fetch aggregated fields from the table: "schoolI18n"
  """
  schoolI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [schoolI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolI18n_order_by!]

    """filter the rows returned"""
    where: schoolI18n_bool_exp
  ): schoolI18n_aggregate!

  """fetch data from the table: "schoolI18n" using primary key columns"""
  schoolI18n_by_pk(id: uuid!): schoolI18n

  """
  fetch aggregated fields from the table: "school"
  """
  school_aggregate(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): school_aggregate!

  """fetch data from the table: "school" using primary key columns"""
  school_by_pk(id: uuid!): school

  """
  fetch data from the table: "slider"
  """
  slider(
    """distinct select on columns"""
    distinct_on: [slider_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [slider_order_by!]

    """filter the rows returned"""
    where: slider_bool_exp
  ): [slider!]!

  """
  fetch data from the table: "sliderI18n"
  """
  sliderI18n(
    """distinct select on columns"""
    distinct_on: [sliderI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sliderI18n_order_by!]

    """filter the rows returned"""
    where: sliderI18n_bool_exp
  ): [sliderI18n!]!

  """
  fetch aggregated fields from the table: "sliderI18n"
  """
  sliderI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [sliderI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sliderI18n_order_by!]

    """filter the rows returned"""
    where: sliderI18n_bool_exp
  ): sliderI18n_aggregate!

  """fetch data from the table: "sliderI18n" using primary key columns"""
  sliderI18n_by_pk(id: uuid!): sliderI18n

  """
  fetch aggregated fields from the table: "slider"
  """
  slider_aggregate(
    """distinct select on columns"""
    distinct_on: [slider_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [slider_order_by!]

    """filter the rows returned"""
    where: slider_bool_exp
  ): slider_aggregate!

  """fetch data from the table: "slider" using primary key columns"""
  slider_by_pk(id: uuid!): slider

  """
  fetch data from the table: "tag"
  """
  tag(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """
  fetch data from the table: "tagI18n"
  """
  tagI18n(
    """distinct select on columns"""
    distinct_on: [tagI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagI18n_order_by!]

    """filter the rows returned"""
    where: tagI18n_bool_exp
  ): [tagI18n!]!

  """
  fetch aggregated fields from the table: "tagI18n"
  """
  tagI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [tagI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagI18n_order_by!]

    """filter the rows returned"""
    where: tagI18n_bool_exp
  ): tagI18n_aggregate!

  """fetch data from the table: "tagI18n" using primary key columns"""
  tagI18n_by_pk(id: uuid!): tagI18n

  """
  fetch aggregated fields from the table: "tag"
  """
  tag_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """fetch data from the table: "tag" using primary key columns"""
  tag_by_pk(id: uuid!): tag

  """
  fetch data from the table: "technique"
  """
  technique(
    """distinct select on columns"""
    distinct_on: [technique_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [technique_order_by!]

    """filter the rows returned"""
    where: technique_bool_exp
  ): [technique!]!

  """
  fetch data from the table: "techniqueI18n"
  """
  techniqueI18n(
    """distinct select on columns"""
    distinct_on: [techniqueI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [techniqueI18n_order_by!]

    """filter the rows returned"""
    where: techniqueI18n_bool_exp
  ): [techniqueI18n!]!

  """
  fetch aggregated fields from the table: "techniqueI18n"
  """
  techniqueI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [techniqueI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [techniqueI18n_order_by!]

    """filter the rows returned"""
    where: techniqueI18n_bool_exp
  ): techniqueI18n_aggregate!

  """fetch data from the table: "techniqueI18n" using primary key columns"""
  techniqueI18n_by_pk(id: uuid!): techniqueI18n

  """
  fetch aggregated fields from the table: "technique"
  """
  technique_aggregate(
    """distinct select on columns"""
    distinct_on: [technique_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [technique_order_by!]

    """filter the rows returned"""
    where: technique_bool_exp
  ): technique_aggregate!

  """fetch data from the table: "technique" using primary key columns"""
  technique_by_pk(id: uuid!): technique

  """
  fetch data from the table: "translation"
  """
  translation(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): [translation!]!

  """
  fetch aggregated fields from the table: "translation"
  """
  translation_aggregate(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): translation_aggregate!

  """fetch data from the table: "translation" using primary key columns"""
  translation_by_pk(id: uuid!): translation

  """
  fetch data from the table: "user"
  """
  user(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """
  fetch aggregated fields from the table: "user"
  """
  user_aggregate(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): user_aggregate!

  """fetch data from the table: "user" using primary key columns"""
  user_by_pk(id: uuid!): user

  """
  fetch data from the table: "work"
  """
  work(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): [work!]!

  """
  fetch data from the table: "workCategory"
  """
  workCategory(
    """distinct select on columns"""
    distinct_on: [workCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workCategory_order_by!]

    """filter the rows returned"""
    where: workCategory_bool_exp
  ): [workCategory!]!

  """
  fetch aggregated fields from the table: "workCategory"
  """
  workCategory_aggregate(
    """distinct select on columns"""
    distinct_on: [workCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workCategory_order_by!]

    """filter the rows returned"""
    where: workCategory_bool_exp
  ): workCategory_aggregate!

  """fetch data from the table: "workCategory" using primary key columns"""
  workCategory_by_pk(categoryId: uuid!, workId: uuid!): workCategory

  """
  fetch data from the table: "workI18n"
  """
  workI18n(
    """distinct select on columns"""
    distinct_on: [workI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workI18n_order_by!]

    """filter the rows returned"""
    where: workI18n_bool_exp
  ): [workI18n!]!

  """
  fetch aggregated fields from the table: "workI18n"
  """
  workI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [workI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workI18n_order_by!]

    """filter the rows returned"""
    where: workI18n_bool_exp
  ): workI18n_aggregate!

  """fetch data from the table: "workI18n" using primary key columns"""
  workI18n_by_pk(id: uuid!): workI18n

  """
  fetch aggregated fields from the table: "work"
  """
  work_aggregate(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): work_aggregate!

  """fetch data from the table: "work" using primary key columns"""
  work_by_pk(id: uuid!): work
}

"""
columns and relationships of "school"
"""
type school {
  deletedAt: timestamptz
  id: uuid!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [schoolI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolI18n_order_by!]

    """filter the rows returned"""
    where: schoolI18n_bool_exp
  ): [schoolI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [schoolI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolI18n_order_by!]

    """filter the rows returned"""
    where: schoolI18n_bool_exp
  ): schoolI18n_aggregate!

  """An array relationship"""
  works(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): [work!]!

  """An aggregated array relationship"""
  works_aggregate(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): work_aggregate!
}

"""
aggregated selection of "school"
"""
type school_aggregate {
  aggregate: school_aggregate_fields
  nodes: [school!]!
}

"""
aggregate fields of "school"
"""
type school_aggregate_fields {
  count(columns: [school_select_column!], distinct: Boolean): Int
  max: school_max_fields
  min: school_min_fields
}

"""
order by aggregate values of table "school"
"""
input school_aggregate_order_by {
  count: order_by
  max: school_max_order_by
  min: school_min_order_by
}

"""
input type for inserting array relation for remote table "school"
"""
input school_arr_rel_insert_input {
  data: [school_insert_input!]!
  on_conflict: school_on_conflict
}

"""
Boolean expression to filter rows from the table "school". All fields are combined with a logical 'AND'.
"""
input school_bool_exp {
  _and: [school_bool_exp]
  _not: school_bool_exp
  _or: [school_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  translations: schoolI18n_bool_exp
  works: work_bool_exp
}

"""
unique or primary key constraints on table "school"
"""
enum school_constraint {
  """unique or primary key constraint"""
  PK_57836c3fe2f2c7734b20911755e
}

"""
input type for inserting data into table "school"
"""
input school_insert_input {
  deletedAt: timestamptz
  id: uuid
  translations: schoolI18n_arr_rel_insert_input
  works: work_arr_rel_insert_input
}

"""aggregate max on columns"""
type school_max_fields {
  deletedAt: timestamptz
}

"""
order by max() on columns of table "school"
"""
input school_max_order_by {
  deletedAt: order_by
}

"""aggregate min on columns"""
type school_min_fields {
  deletedAt: timestamptz
}

"""
order by min() on columns of table "school"
"""
input school_min_order_by {
  deletedAt: order_by
}

"""
response of any mutation on the table "school"
"""
type school_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [school!]!
}

"""
input type for inserting object relation for remote table "school"
"""
input school_obj_rel_insert_input {
  data: school_insert_input!
  on_conflict: school_on_conflict
}

"""
on conflict condition type for table "school"
"""
input school_on_conflict {
  constraint: school_constraint!
  update_columns: [school_update_column!]!
}

"""
ordering options when selecting data from "school"
"""
input school_order_by {
  deletedAt: order_by
  id: order_by
  translations_aggregate: schoolI18n_aggregate_order_by
  works_aggregate: work_aggregate_order_by
}

"""
select columns of table "school"
"""
enum school_select_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
input type for updating data in table "school"
"""
input school_set_input {
  deletedAt: timestamptz
  id: uuid
}

"""
update columns of table "school"
"""
enum school_update_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
columns and relationships of "schoolI18n"
"""
type schoolI18n {
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  name: String!

  """An object relationship"""
  school: school!
  schoolId: uuid!
}

"""
aggregated selection of "schoolI18n"
"""
type schoolI18n_aggregate {
  aggregate: schoolI18n_aggregate_fields
  nodes: [schoolI18n!]!
}

"""
aggregate fields of "schoolI18n"
"""
type schoolI18n_aggregate_fields {
  count(columns: [schoolI18n_select_column!], distinct: Boolean): Int
  max: schoolI18n_max_fields
  min: schoolI18n_min_fields
}

"""
order by aggregate values of table "schoolI18n"
"""
input schoolI18n_aggregate_order_by {
  count: order_by
  max: schoolI18n_max_order_by
  min: schoolI18n_min_order_by
}

"""
input type for inserting array relation for remote table "schoolI18n"
"""
input schoolI18n_arr_rel_insert_input {
  data: [schoolI18n_insert_input!]!
  on_conflict: schoolI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "schoolI18n". All fields are combined with a logical 'AND'.
"""
input schoolI18n_bool_exp {
  _and: [schoolI18n_bool_exp]
  _not: schoolI18n_bool_exp
  _or: [schoolI18n_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  name: varchar_comparison_exp
  school: school_bool_exp
  schoolId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "schoolI18n"
"""
enum schoolI18n_constraint {
  """unique or primary key constraint"""
  PK_e437fa79e5b91d15647aec92d4e
}

"""
input type for inserting data into table "schoolI18n"
"""
input schoolI18n_insert_input {
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  name: String
  school: school_obj_rel_insert_input
  schoolId: uuid
}

"""aggregate max on columns"""
type schoolI18n_max_fields {
  deletedAt: timestamptz
  name: String
}

"""
order by max() on columns of table "schoolI18n"
"""
input schoolI18n_max_order_by {
  deletedAt: order_by
  name: order_by
}

"""aggregate min on columns"""
type schoolI18n_min_fields {
  deletedAt: timestamptz
  name: String
}

"""
order by min() on columns of table "schoolI18n"
"""
input schoolI18n_min_order_by {
  deletedAt: order_by
  name: order_by
}

"""
response of any mutation on the table "schoolI18n"
"""
type schoolI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [schoolI18n!]!
}

"""
input type for inserting object relation for remote table "schoolI18n"
"""
input schoolI18n_obj_rel_insert_input {
  data: schoolI18n_insert_input!
  on_conflict: schoolI18n_on_conflict
}

"""
on conflict condition type for table "schoolI18n"
"""
input schoolI18n_on_conflict {
  constraint: schoolI18n_constraint!
  update_columns: [schoolI18n_update_column!]!
}

"""
ordering options when selecting data from "schoolI18n"
"""
input schoolI18n_order_by {
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  name: order_by
  school: school_order_by
  schoolId: order_by
}

"""
select columns of table "schoolI18n"
"""
enum schoolI18n_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  name

  """column name"""
  schoolId
}

"""
input type for updating data in table "schoolI18n"
"""
input schoolI18n_set_input {
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  name: String
  schoolId: uuid
}

"""
update columns of table "schoolI18n"
"""
enum schoolI18n_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  name

  """column name"""
  schoolId
}

"""
columns and relationships of "slider"
"""
type slider {
  deletedAt: timestamptz
  files(
    """JSON select path"""
    path: String
  ): jsonb!
  id: uuid!
  position: smallint

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [sliderI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sliderI18n_order_by!]

    """filter the rows returned"""
    where: sliderI18n_bool_exp
  ): [sliderI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [sliderI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sliderI18n_order_by!]

    """filter the rows returned"""
    where: sliderI18n_bool_exp
  ): sliderI18n_aggregate!
}

"""
aggregated selection of "slider"
"""
type slider_aggregate {
  aggregate: slider_aggregate_fields
  nodes: [slider!]!
}

"""
aggregate fields of "slider"
"""
type slider_aggregate_fields {
  avg: slider_avg_fields
  count(columns: [slider_select_column!], distinct: Boolean): Int
  max: slider_max_fields
  min: slider_min_fields
  stddev: slider_stddev_fields
  stddev_pop: slider_stddev_pop_fields
  stddev_samp: slider_stddev_samp_fields
  sum: slider_sum_fields
  var_pop: slider_var_pop_fields
  var_samp: slider_var_samp_fields
  variance: slider_variance_fields
}

"""
order by aggregate values of table "slider"
"""
input slider_aggregate_order_by {
  avg: slider_avg_order_by
  count: order_by
  max: slider_max_order_by
  min: slider_min_order_by
  stddev: slider_stddev_order_by
  stddev_pop: slider_stddev_pop_order_by
  stddev_samp: slider_stddev_samp_order_by
  sum: slider_sum_order_by
  var_pop: slider_var_pop_order_by
  var_samp: slider_var_samp_order_by
  variance: slider_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input slider_append_input {
  files: jsonb
}

"""
input type for inserting array relation for remote table "slider"
"""
input slider_arr_rel_insert_input {
  data: [slider_insert_input!]!
  on_conflict: slider_on_conflict
}

"""aggregate avg on columns"""
type slider_avg_fields {
  position: Float
}

"""
order by avg() on columns of table "slider"
"""
input slider_avg_order_by {
  position: order_by
}

"""
Boolean expression to filter rows from the table "slider". All fields are combined with a logical 'AND'.
"""
input slider_bool_exp {
  _and: [slider_bool_exp]
  _not: slider_bool_exp
  _or: [slider_bool_exp]
  deletedAt: timestamptz_comparison_exp
  files: jsonb_comparison_exp
  id: uuid_comparison_exp
  position: smallint_comparison_exp
  translations: sliderI18n_bool_exp
}

"""
unique or primary key constraints on table "slider"
"""
enum slider_constraint {
  """unique or primary key constraint"""
  PK_ae59f1b572454f8251212e2d3dc
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input slider_delete_at_path_input {
  files: [String]
}

"""
delete the array element with specified index (negative integers count from the
end). throws an error if top level container is not an array
"""
input slider_delete_elem_input {
  files: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input slider_delete_key_input {
  files: String
}

"""
input type for incrementing integer columne in table "slider"
"""
input slider_inc_input {
  position: smallint
}

"""
input type for inserting data into table "slider"
"""
input slider_insert_input {
  deletedAt: timestamptz
  files: jsonb
  id: uuid
  position: smallint
  translations: sliderI18n_arr_rel_insert_input
}

"""aggregate max on columns"""
type slider_max_fields {
  deletedAt: timestamptz
  position: smallint
}

"""
order by max() on columns of table "slider"
"""
input slider_max_order_by {
  deletedAt: order_by
  position: order_by
}

"""aggregate min on columns"""
type slider_min_fields {
  deletedAt: timestamptz
  position: smallint
}

"""
order by min() on columns of table "slider"
"""
input slider_min_order_by {
  deletedAt: order_by
  position: order_by
}

"""
response of any mutation on the table "slider"
"""
type slider_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [slider!]!
}

"""
input type for inserting object relation for remote table "slider"
"""
input slider_obj_rel_insert_input {
  data: slider_insert_input!
  on_conflict: slider_on_conflict
}

"""
on conflict condition type for table "slider"
"""
input slider_on_conflict {
  constraint: slider_constraint!
  update_columns: [slider_update_column!]!
}

"""
ordering options when selecting data from "slider"
"""
input slider_order_by {
  deletedAt: order_by
  files: order_by
  id: order_by
  position: order_by
  translations_aggregate: sliderI18n_aggregate_order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input slider_prepend_input {
  files: jsonb
}

"""
select columns of table "slider"
"""
enum slider_select_column {
  """column name"""
  deletedAt

  """column name"""
  files

  """column name"""
  id

  """column name"""
  position
}

"""
input type for updating data in table "slider"
"""
input slider_set_input {
  deletedAt: timestamptz
  files: jsonb
  id: uuid
  position: smallint
}

"""aggregate stddev on columns"""
type slider_stddev_fields {
  position: Float
}

"""
order by stddev() on columns of table "slider"
"""
input slider_stddev_order_by {
  position: order_by
}

"""aggregate stddev_pop on columns"""
type slider_stddev_pop_fields {
  position: Float
}

"""
order by stddev_pop() on columns of table "slider"
"""
input slider_stddev_pop_order_by {
  position: order_by
}

"""aggregate stddev_samp on columns"""
type slider_stddev_samp_fields {
  position: Float
}

"""
order by stddev_samp() on columns of table "slider"
"""
input slider_stddev_samp_order_by {
  position: order_by
}

"""aggregate sum on columns"""
type slider_sum_fields {
  position: smallint
}

"""
order by sum() on columns of table "slider"
"""
input slider_sum_order_by {
  position: order_by
}

"""
update columns of table "slider"
"""
enum slider_update_column {
  """column name"""
  deletedAt

  """column name"""
  files

  """column name"""
  id

  """column name"""
  position
}

"""aggregate var_pop on columns"""
type slider_var_pop_fields {
  position: Float
}

"""
order by var_pop() on columns of table "slider"
"""
input slider_var_pop_order_by {
  position: order_by
}

"""aggregate var_samp on columns"""
type slider_var_samp_fields {
  position: Float
}

"""
order by var_samp() on columns of table "slider"
"""
input slider_var_samp_order_by {
  position: order_by
}

"""aggregate variance on columns"""
type slider_variance_fields {
  position: Float
}

"""
order by variance() on columns of table "slider"
"""
input slider_variance_order_by {
  position: order_by
}

"""
columns and relationships of "sliderI18n"
"""
type sliderI18n {
  body: String
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!

  """An object relationship"""
  slider: slider!
  sliderId: uuid!
  slug: String
  title: String
}

"""
aggregated selection of "sliderI18n"
"""
type sliderI18n_aggregate {
  aggregate: sliderI18n_aggregate_fields
  nodes: [sliderI18n!]!
}

"""
aggregate fields of "sliderI18n"
"""
type sliderI18n_aggregate_fields {
  count(columns: [sliderI18n_select_column!], distinct: Boolean): Int
  max: sliderI18n_max_fields
  min: sliderI18n_min_fields
}

"""
order by aggregate values of table "sliderI18n"
"""
input sliderI18n_aggregate_order_by {
  count: order_by
  max: sliderI18n_max_order_by
  min: sliderI18n_min_order_by
}

"""
input type for inserting array relation for remote table "sliderI18n"
"""
input sliderI18n_arr_rel_insert_input {
  data: [sliderI18n_insert_input!]!
  on_conflict: sliderI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "sliderI18n". All fields are combined with a logical 'AND'.
"""
input sliderI18n_bool_exp {
  _and: [sliderI18n_bool_exp]
  _not: sliderI18n_bool_exp
  _or: [sliderI18n_bool_exp]
  body: varchar_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  slider: slider_bool_exp
  sliderId: uuid_comparison_exp
  slug: varchar_comparison_exp
  title: varchar_comparison_exp
}

"""
unique or primary key constraints on table "sliderI18n"
"""
enum sliderI18n_constraint {
  """unique or primary key constraint"""
  PK_3d799504c4015463943f0ff4a08

  """unique or primary key constraint"""
  UQ_839e449b94adcc2f4cdadaf8911
}

"""
input type for inserting data into table "sliderI18n"
"""
input sliderI18n_insert_input {
  body: String
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  slider: slider_obj_rel_insert_input
  sliderId: uuid
  slug: String
  title: String
}

"""aggregate max on columns"""
type sliderI18n_max_fields {
  body: String
  deletedAt: timestamptz
  slug: String
  title: String
}

"""
order by max() on columns of table "sliderI18n"
"""
input sliderI18n_max_order_by {
  body: order_by
  deletedAt: order_by
  slug: order_by
  title: order_by
}

"""aggregate min on columns"""
type sliderI18n_min_fields {
  body: String
  deletedAt: timestamptz
  slug: String
  title: String
}

"""
order by min() on columns of table "sliderI18n"
"""
input sliderI18n_min_order_by {
  body: order_by
  deletedAt: order_by
  slug: order_by
  title: order_by
}

"""
response of any mutation on the table "sliderI18n"
"""
type sliderI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [sliderI18n!]!
}

"""
input type for inserting object relation for remote table "sliderI18n"
"""
input sliderI18n_obj_rel_insert_input {
  data: sliderI18n_insert_input!
  on_conflict: sliderI18n_on_conflict
}

"""
on conflict condition type for table "sliderI18n"
"""
input sliderI18n_on_conflict {
  constraint: sliderI18n_constraint!
  update_columns: [sliderI18n_update_column!]!
}

"""
ordering options when selecting data from "sliderI18n"
"""
input sliderI18n_order_by {
  body: order_by
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  slider: slider_order_by
  sliderId: order_by
  slug: order_by
  title: order_by
}

"""
select columns of table "sliderI18n"
"""
enum sliderI18n_select_column {
  """column name"""
  body

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  sliderId

  """column name"""
  slug

  """column name"""
  title
}

"""
input type for updating data in table "sliderI18n"
"""
input sliderI18n_set_input {
  body: String
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  sliderId: uuid
  slug: String
  title: String
}

"""
update columns of table "sliderI18n"
"""
enum sliderI18n_update_column {
  """column name"""
  body

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  sliderId

  """column name"""
  slug

  """column name"""
  title
}

scalar smallint

"""
expression to compare columns of type smallint. All fields are combined with logical 'AND'.
"""
input smallint_comparison_exp {
  _eq: smallint
  _gt: smallint
  _gte: smallint
  _in: [smallint]
  _is_null: Boolean
  _lt: smallint
  _lte: smallint
  _neq: smallint
  _nin: [smallint]
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "artist"
  """
  artist(
    """distinct select on columns"""
    distinct_on: [artist_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artist_order_by!]

    """filter the rows returned"""
    where: artist_bool_exp
  ): [artist!]!

  """
  fetch data from the table: "artistCategory"
  """
  artistCategory(
    """distinct select on columns"""
    distinct_on: [artistCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistCategory_order_by!]

    """filter the rows returned"""
    where: artistCategory_bool_exp
  ): [artistCategory!]!

  """
  fetch aggregated fields from the table: "artistCategory"
  """
  artistCategory_aggregate(
    """distinct select on columns"""
    distinct_on: [artistCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistCategory_order_by!]

    """filter the rows returned"""
    where: artistCategory_bool_exp
  ): artistCategory_aggregate!

  """fetch data from the table: "artistCategory" using primary key columns"""
  artistCategory_by_pk(artistId: uuid!, categoryId: uuid!): artistCategory

  """
  fetch data from the table: "artistI18n"
  """
  artistI18n(
    """distinct select on columns"""
    distinct_on: [artistI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistI18n_order_by!]

    """filter the rows returned"""
    where: artistI18n_bool_exp
  ): [artistI18n!]!

  """
  fetch aggregated fields from the table: "artistI18n"
  """
  artistI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [artistI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artistI18n_order_by!]

    """filter the rows returned"""
    where: artistI18n_bool_exp
  ): artistI18n_aggregate!

  """fetch data from the table: "artistI18n" using primary key columns"""
  artistI18n_by_pk(id: uuid!): artistI18n

  """
  fetch aggregated fields from the table: "artist"
  """
  artist_aggregate(
    """distinct select on columns"""
    distinct_on: [artist_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artist_order_by!]

    """filter the rows returned"""
    where: artist_bool_exp
  ): artist_aggregate!

  """fetch data from the table: "artist" using primary key columns"""
  artist_by_pk(id: uuid!): artist

  """
  fetch data from the table: "basis"
  """
  basis(
    """distinct select on columns"""
    distinct_on: [basis_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basis_order_by!]

    """filter the rows returned"""
    where: basis_bool_exp
  ): [basis!]!

  """
  fetch data from the table: "basisI18n"
  """
  basisI18n(
    """distinct select on columns"""
    distinct_on: [basisI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basisI18n_order_by!]

    """filter the rows returned"""
    where: basisI18n_bool_exp
  ): [basisI18n!]!

  """
  fetch aggregated fields from the table: "basisI18n"
  """
  basisI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [basisI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basisI18n_order_by!]

    """filter the rows returned"""
    where: basisI18n_bool_exp
  ): basisI18n_aggregate!

  """fetch data from the table: "basisI18n" using primary key columns"""
  basisI18n_by_pk(id: uuid!): basisI18n

  """
  fetch aggregated fields from the table: "basis"
  """
  basis_aggregate(
    """distinct select on columns"""
    distinct_on: [basis_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [basis_order_by!]

    """filter the rows returned"""
    where: basis_bool_exp
  ): basis_aggregate!

  """fetch data from the table: "basis" using primary key columns"""
  basis_by_pk(id: uuid!): basis

  """
  fetch data from the table: "cart"
  """
  cart(
    """distinct select on columns"""
    distinct_on: [cart_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cart_order_by!]

    """filter the rows returned"""
    where: cart_bool_exp
  ): [cart!]!

  """
  fetch aggregated fields from the table: "cart"
  """
  cart_aggregate(
    """distinct select on columns"""
    distinct_on: [cart_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cart_order_by!]

    """filter the rows returned"""
    where: cart_bool_exp
  ): cart_aggregate!

  """fetch data from the table: "cart" using primary key columns"""
  cart_by_pk(id: uuid!): cart

  """
  fetch data from the table: "category"
  """
  category(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): [category!]!

  """
  fetch data from the table: "categoryI18n"
  """
  categoryI18n(
    """distinct select on columns"""
    distinct_on: [categoryI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categoryI18n_order_by!]

    """filter the rows returned"""
    where: categoryI18n_bool_exp
  ): [categoryI18n!]!

  """
  fetch aggregated fields from the table: "categoryI18n"
  """
  categoryI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [categoryI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categoryI18n_order_by!]

    """filter the rows returned"""
    where: categoryI18n_bool_exp
  ): categoryI18n_aggregate!

  """fetch data from the table: "categoryI18n" using primary key columns"""
  categoryI18n_by_pk(id: uuid!): categoryI18n

  """
  fetch aggregated fields from the table: "category"
  """
  category_aggregate(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): category_aggregate!

  """fetch data from the table: "category" using primary key columns"""
  category_by_pk(id: uuid!): category

  """
  fetch data from the table: "customField"
  """
  customField(
    """distinct select on columns"""
    distinct_on: [customField_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customField_order_by!]

    """filter the rows returned"""
    where: customField_bool_exp
  ): [customField!]!

  """
  fetch data from the table: "customFieldI18n"
  """
  customFieldI18n(
    """distinct select on columns"""
    distinct_on: [customFieldI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldI18n_order_by!]

    """filter the rows returned"""
    where: customFieldI18n_bool_exp
  ): [customFieldI18n!]!

  """
  fetch aggregated fields from the table: "customFieldI18n"
  """
  customFieldI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [customFieldI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldI18n_order_by!]

    """filter the rows returned"""
    where: customFieldI18n_bool_exp
  ): customFieldI18n_aggregate!

  """fetch data from the table: "customFieldI18n" using primary key columns"""
  customFieldI18n_by_pk(id: uuid!): customFieldI18n

  """
  fetch data from the table: "customFieldWork"
  """
  customFieldWork(
    """distinct select on columns"""
    distinct_on: [customFieldWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldWork_order_by!]

    """filter the rows returned"""
    where: customFieldWork_bool_exp
  ): [customFieldWork!]!

  """
  fetch aggregated fields from the table: "customFieldWork"
  """
  customFieldWork_aggregate(
    """distinct select on columns"""
    distinct_on: [customFieldWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldWork_order_by!]

    """filter the rows returned"""
    where: customFieldWork_bool_exp
  ): customFieldWork_aggregate!

  """fetch data from the table: "customFieldWork" using primary key columns"""
  customFieldWork_by_pk(customFieldId: uuid!, workId: uuid!): customFieldWork

  """
  fetch aggregated fields from the table: "customField"
  """
  customField_aggregate(
    """distinct select on columns"""
    distinct_on: [customField_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customField_order_by!]

    """filter the rows returned"""
    where: customField_bool_exp
  ): customField_aggregate!

  """fetch data from the table: "customField" using primary key columns"""
  customField_by_pk(id: uuid!): customField

  """
  fetch data from the table: "exhibition"
  """
  exhibition(
    """distinct select on columns"""
    distinct_on: [exhibition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibition_order_by!]

    """filter the rows returned"""
    where: exhibition_bool_exp
  ): [exhibition!]!

  """
  fetch data from the table: "exhibitionCategory"
  """
  exhibitionCategory(
    """distinct select on columns"""
    distinct_on: [exhibitionCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionCategory_order_by!]

    """filter the rows returned"""
    where: exhibitionCategory_bool_exp
  ): [exhibitionCategory!]!

  """
  fetch aggregated fields from the table: "exhibitionCategory"
  """
  exhibitionCategory_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionCategory_order_by!]

    """filter the rows returned"""
    where: exhibitionCategory_bool_exp
  ): exhibitionCategory_aggregate!

  """
  fetch data from the table: "exhibitionCategory" using primary key columns
  """
  exhibitionCategory_by_pk(categoryId: uuid!, exhibitionId: uuid!): exhibitionCategory

  """
  fetch data from the table: "exhibitionI18n"
  """
  exhibitionI18n(
    """distinct select on columns"""
    distinct_on: [exhibitionI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionI18n_order_by!]

    """filter the rows returned"""
    where: exhibitionI18n_bool_exp
  ): [exhibitionI18n!]!

  """
  fetch aggregated fields from the table: "exhibitionI18n"
  """
  exhibitionI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionI18n_order_by!]

    """filter the rows returned"""
    where: exhibitionI18n_bool_exp
  ): exhibitionI18n_aggregate!

  """fetch data from the table: "exhibitionI18n" using primary key columns"""
  exhibitionI18n_by_pk(id: uuid!): exhibitionI18n

  """
  fetch data from the table: "exhibitionWork"
  """
  exhibitionWork(
    """distinct select on columns"""
    distinct_on: [exhibitionWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionWork_order_by!]

    """filter the rows returned"""
    where: exhibitionWork_bool_exp
  ): [exhibitionWork!]!

  """
  fetch aggregated fields from the table: "exhibitionWork"
  """
  exhibitionWork_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionWork_order_by!]

    """filter the rows returned"""
    where: exhibitionWork_bool_exp
  ): exhibitionWork_aggregate!

  """fetch data from the table: "exhibitionWork" using primary key columns"""
  exhibitionWork_by_pk(exhibitionId: uuid!, workId: uuid!): exhibitionWork

  """
  fetch aggregated fields from the table: "exhibition"
  """
  exhibition_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibition_order_by!]

    """filter the rows returned"""
    where: exhibition_bool_exp
  ): exhibition_aggregate!

  """fetch data from the table: "exhibition" using primary key columns"""
  exhibition_by_pk(id: uuid!): exhibition

  """
  fetch data from the table: "file"
  """
  file(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): [file!]!

  """
  fetch data from the table: "fileI18n"
  """
  fileI18n(
    """distinct select on columns"""
    distinct_on: [fileI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fileI18n_order_by!]

    """filter the rows returned"""
    where: fileI18n_bool_exp
  ): [fileI18n!]!

  """
  fetch aggregated fields from the table: "fileI18n"
  """
  fileI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [fileI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fileI18n_order_by!]

    """filter the rows returned"""
    where: fileI18n_bool_exp
  ): fileI18n_aggregate!

  """fetch data from the table: "fileI18n" using primary key columns"""
  fileI18n_by_pk(id: uuid!): fileI18n

  """
  fetch aggregated fields from the table: "file"
  """
  file_aggregate(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): file_aggregate!

  """fetch data from the table: "file" using primary key columns"""
  file_by_pk(id: uuid!): file

  """
  fetch data from the table: "link"
  """
  link(
    """distinct select on columns"""
    distinct_on: [link_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [link_order_by!]

    """filter the rows returned"""
    where: link_bool_exp
  ): [link!]!

  """
  fetch data from the table: "linkI18n"
  """
  linkI18n(
    """distinct select on columns"""
    distinct_on: [linkI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [linkI18n_order_by!]

    """filter the rows returned"""
    where: linkI18n_bool_exp
  ): [linkI18n!]!

  """
  fetch aggregated fields from the table: "linkI18n"
  """
  linkI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [linkI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [linkI18n_order_by!]

    """filter the rows returned"""
    where: linkI18n_bool_exp
  ): linkI18n_aggregate!

  """fetch data from the table: "linkI18n" using primary key columns"""
  linkI18n_by_pk(id: uuid!): linkI18n

  """
  fetch aggregated fields from the table: "link"
  """
  link_aggregate(
    """distinct select on columns"""
    distinct_on: [link_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [link_order_by!]

    """filter the rows returned"""
    where: link_bool_exp
  ): link_aggregate!

  """fetch data from the table: "link" using primary key columns"""
  link_by_pk(id: uuid!): link

  """
  fetch data from the table: "locale"
  """
  locale(
    """distinct select on columns"""
    distinct_on: [locale_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locale_order_by!]

    """filter the rows returned"""
    where: locale_bool_exp
  ): [locale!]!

  """
  fetch aggregated fields from the table: "locale"
  """
  locale_aggregate(
    """distinct select on columns"""
    distinct_on: [locale_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locale_order_by!]

    """filter the rows returned"""
    where: locale_bool_exp
  ): locale_aggregate!

  """fetch data from the table: "locale" using primary key columns"""
  locale_by_pk(id: uuid!): locale

  """
  fetch data from the table: "navigation"
  """
  navigation(
    """distinct select on columns"""
    distinct_on: [navigation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigation_order_by!]

    """filter the rows returned"""
    where: navigation_bool_exp
  ): [navigation!]!

  """
  fetch data from the table: "navigationI18n"
  """
  navigationI18n(
    """distinct select on columns"""
    distinct_on: [navigationI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigationI18n_order_by!]

    """filter the rows returned"""
    where: navigationI18n_bool_exp
  ): [navigationI18n!]!

  """
  fetch aggregated fields from the table: "navigationI18n"
  """
  navigationI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [navigationI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigationI18n_order_by!]

    """filter the rows returned"""
    where: navigationI18n_bool_exp
  ): navigationI18n_aggregate!

  """fetch data from the table: "navigationI18n" using primary key columns"""
  navigationI18n_by_pk(id: uuid!): navigationI18n

  """
  fetch aggregated fields from the table: "navigation"
  """
  navigation_aggregate(
    """distinct select on columns"""
    distinct_on: [navigation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [navigation_order_by!]

    """filter the rows returned"""
    where: navigation_bool_exp
  ): navigation_aggregate!

  """fetch data from the table: "navigation" using primary key columns"""
  navigation_by_pk(id: uuid!): navigation

  """
  fetch data from the table: "news"
  """
  news(
    """distinct select on columns"""
    distinct_on: [news_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [news_order_by!]

    """filter the rows returned"""
    where: news_bool_exp
  ): [news!]!

  """
  fetch data from the table: "newsCategory"
  """
  newsCategory(
    """distinct select on columns"""
    distinct_on: [newsCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsCategory_order_by!]

    """filter the rows returned"""
    where: newsCategory_bool_exp
  ): [newsCategory!]!

  """
  fetch aggregated fields from the table: "newsCategory"
  """
  newsCategory_aggregate(
    """distinct select on columns"""
    distinct_on: [newsCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsCategory_order_by!]

    """filter the rows returned"""
    where: newsCategory_bool_exp
  ): newsCategory_aggregate!

  """fetch data from the table: "newsCategory" using primary key columns"""
  newsCategory_by_pk(categoryId: uuid!, newsId: uuid!): newsCategory

  """
  fetch data from the table: "newsI18n"
  """
  newsI18n(
    """distinct select on columns"""
    distinct_on: [newsI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsI18n_order_by!]

    """filter the rows returned"""
    where: newsI18n_bool_exp
  ): [newsI18n!]!

  """
  fetch aggregated fields from the table: "newsI18n"
  """
  newsI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [newsI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [newsI18n_order_by!]

    """filter the rows returned"""
    where: newsI18n_bool_exp
  ): newsI18n_aggregate!

  """fetch data from the table: "newsI18n" using primary key columns"""
  newsI18n_by_pk(id: uuid!): newsI18n

  """
  fetch aggregated fields from the table: "news"
  """
  news_aggregate(
    """distinct select on columns"""
    distinct_on: [news_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [news_order_by!]

    """filter the rows returned"""
    where: news_bool_exp
  ): news_aggregate!

  """fetch data from the table: "news" using primary key columns"""
  news_by_pk(id: uuid!): news

  """
  fetch data from the table: "order"
  """
  order(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): [order!]!

  """
  fetch data from the table: "orderProduct"
  """
  orderProduct(
    """distinct select on columns"""
    distinct_on: [orderProduct_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [orderProduct_order_by!]

    """filter the rows returned"""
    where: orderProduct_bool_exp
  ): [orderProduct!]!

  """
  fetch aggregated fields from the table: "orderProduct"
  """
  orderProduct_aggregate(
    """distinct select on columns"""
    distinct_on: [orderProduct_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [orderProduct_order_by!]

    """filter the rows returned"""
    where: orderProduct_bool_exp
  ): orderProduct_aggregate!

  """fetch data from the table: "orderProduct" using primary key columns"""
  orderProduct_by_pk(id: uuid!): orderProduct

  """
  fetch aggregated fields from the table: "order"
  """
  order_aggregate(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): order_aggregate!

  """fetch data from the table: "order" using primary key columns"""
  order_by_pk(id: uuid!): order

  """
  fetch data from the table: "page"
  """
  page(
    """distinct select on columns"""
    distinct_on: [page_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [page_order_by!]

    """filter the rows returned"""
    where: page_bool_exp
  ): [page!]!

  """
  fetch data from the table: "pageI18n"
  """
  pageI18n(
    """distinct select on columns"""
    distinct_on: [pageI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pageI18n_order_by!]

    """filter the rows returned"""
    where: pageI18n_bool_exp
  ): [pageI18n!]!

  """
  fetch aggregated fields from the table: "pageI18n"
  """
  pageI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [pageI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pageI18n_order_by!]

    """filter the rows returned"""
    where: pageI18n_bool_exp
  ): pageI18n_aggregate!

  """fetch data from the table: "pageI18n" using primary key columns"""
  pageI18n_by_pk(id: uuid!): pageI18n

  """
  fetch aggregated fields from the table: "page"
  """
  page_aggregate(
    """distinct select on columns"""
    distinct_on: [page_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [page_order_by!]

    """filter the rows returned"""
    where: page_bool_exp
  ): page_aggregate!

  """fetch data from the table: "page" using primary key columns"""
  page_by_pk(id: uuid!): page

  """
  fetch data from the table: "payment"
  """
  payment(
    """distinct select on columns"""
    distinct_on: [payment_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payment_order_by!]

    """filter the rows returned"""
    where: payment_bool_exp
  ): [payment!]!

  """
  fetch aggregated fields from the table: "payment"
  """
  payment_aggregate(
    """distinct select on columns"""
    distinct_on: [payment_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payment_order_by!]

    """filter the rows returned"""
    where: payment_bool_exp
  ): payment_aggregate!

  """fetch data from the table: "payment" using primary key columns"""
  payment_by_pk(id: uuid!): payment

  """
  fetch data from the table: "provenance"
  """
  provenance(
    """distinct select on columns"""
    distinct_on: [provenance_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenance_order_by!]

    """filter the rows returned"""
    where: provenance_bool_exp
  ): [provenance!]!

  """
  fetch data from the table: "provenanceI18n"
  """
  provenanceI18n(
    """distinct select on columns"""
    distinct_on: [provenanceI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenanceI18n_order_by!]

    """filter the rows returned"""
    where: provenanceI18n_bool_exp
  ): [provenanceI18n!]!

  """
  fetch aggregated fields from the table: "provenanceI18n"
  """
  provenanceI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [provenanceI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenanceI18n_order_by!]

    """filter the rows returned"""
    where: provenanceI18n_bool_exp
  ): provenanceI18n_aggregate!

  """fetch data from the table: "provenanceI18n" using primary key columns"""
  provenanceI18n_by_pk(id: uuid!): provenanceI18n

  """
  fetch aggregated fields from the table: "provenance"
  """
  provenance_aggregate(
    """distinct select on columns"""
    distinct_on: [provenance_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [provenance_order_by!]

    """filter the rows returned"""
    where: provenance_bool_exp
  ): provenance_aggregate!

  """fetch data from the table: "provenance" using primary key columns"""
  provenance_by_pk(id: uuid!): provenance

  """
  fetch data from the table: "school"
  """
  school(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): [school!]!

  """
  fetch data from the table: "schoolI18n"
  """
  schoolI18n(
    """distinct select on columns"""
    distinct_on: [schoolI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolI18n_order_by!]

    """filter the rows returned"""
    where: schoolI18n_bool_exp
  ): [schoolI18n!]!

  """
  fetch aggregated fields from the table: "schoolI18n"
  """
  schoolI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [schoolI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolI18n_order_by!]

    """filter the rows returned"""
    where: schoolI18n_bool_exp
  ): schoolI18n_aggregate!

  """fetch data from the table: "schoolI18n" using primary key columns"""
  schoolI18n_by_pk(id: uuid!): schoolI18n

  """
  fetch aggregated fields from the table: "school"
  """
  school_aggregate(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): school_aggregate!

  """fetch data from the table: "school" using primary key columns"""
  school_by_pk(id: uuid!): school

  """
  fetch data from the table: "slider"
  """
  slider(
    """distinct select on columns"""
    distinct_on: [slider_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [slider_order_by!]

    """filter the rows returned"""
    where: slider_bool_exp
  ): [slider!]!

  """
  fetch data from the table: "sliderI18n"
  """
  sliderI18n(
    """distinct select on columns"""
    distinct_on: [sliderI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sliderI18n_order_by!]

    """filter the rows returned"""
    where: sliderI18n_bool_exp
  ): [sliderI18n!]!

  """
  fetch aggregated fields from the table: "sliderI18n"
  """
  sliderI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [sliderI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sliderI18n_order_by!]

    """filter the rows returned"""
    where: sliderI18n_bool_exp
  ): sliderI18n_aggregate!

  """fetch data from the table: "sliderI18n" using primary key columns"""
  sliderI18n_by_pk(id: uuid!): sliderI18n

  """
  fetch aggregated fields from the table: "slider"
  """
  slider_aggregate(
    """distinct select on columns"""
    distinct_on: [slider_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [slider_order_by!]

    """filter the rows returned"""
    where: slider_bool_exp
  ): slider_aggregate!

  """fetch data from the table: "slider" using primary key columns"""
  slider_by_pk(id: uuid!): slider

  """
  fetch data from the table: "tag"
  """
  tag(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """
  fetch data from the table: "tagI18n"
  """
  tagI18n(
    """distinct select on columns"""
    distinct_on: [tagI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagI18n_order_by!]

    """filter the rows returned"""
    where: tagI18n_bool_exp
  ): [tagI18n!]!

  """
  fetch aggregated fields from the table: "tagI18n"
  """
  tagI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [tagI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagI18n_order_by!]

    """filter the rows returned"""
    where: tagI18n_bool_exp
  ): tagI18n_aggregate!

  """fetch data from the table: "tagI18n" using primary key columns"""
  tagI18n_by_pk(id: uuid!): tagI18n

  """
  fetch aggregated fields from the table: "tag"
  """
  tag_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """fetch data from the table: "tag" using primary key columns"""
  tag_by_pk(id: uuid!): tag

  """
  fetch data from the table: "technique"
  """
  technique(
    """distinct select on columns"""
    distinct_on: [technique_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [technique_order_by!]

    """filter the rows returned"""
    where: technique_bool_exp
  ): [technique!]!

  """
  fetch data from the table: "techniqueI18n"
  """
  techniqueI18n(
    """distinct select on columns"""
    distinct_on: [techniqueI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [techniqueI18n_order_by!]

    """filter the rows returned"""
    where: techniqueI18n_bool_exp
  ): [techniqueI18n!]!

  """
  fetch aggregated fields from the table: "techniqueI18n"
  """
  techniqueI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [techniqueI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [techniqueI18n_order_by!]

    """filter the rows returned"""
    where: techniqueI18n_bool_exp
  ): techniqueI18n_aggregate!

  """fetch data from the table: "techniqueI18n" using primary key columns"""
  techniqueI18n_by_pk(id: uuid!): techniqueI18n

  """
  fetch aggregated fields from the table: "technique"
  """
  technique_aggregate(
    """distinct select on columns"""
    distinct_on: [technique_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [technique_order_by!]

    """filter the rows returned"""
    where: technique_bool_exp
  ): technique_aggregate!

  """fetch data from the table: "technique" using primary key columns"""
  technique_by_pk(id: uuid!): technique

  """
  fetch data from the table: "translation"
  """
  translation(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): [translation!]!

  """
  fetch aggregated fields from the table: "translation"
  """
  translation_aggregate(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): translation_aggregate!

  """fetch data from the table: "translation" using primary key columns"""
  translation_by_pk(id: uuid!): translation

  """
  fetch data from the table: "user"
  """
  user(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """
  fetch aggregated fields from the table: "user"
  """
  user_aggregate(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): user_aggregate!

  """fetch data from the table: "user" using primary key columns"""
  user_by_pk(id: uuid!): user

  """
  fetch data from the table: "work"
  """
  work(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): [work!]!

  """
  fetch data from the table: "workCategory"
  """
  workCategory(
    """distinct select on columns"""
    distinct_on: [workCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workCategory_order_by!]

    """filter the rows returned"""
    where: workCategory_bool_exp
  ): [workCategory!]!

  """
  fetch aggregated fields from the table: "workCategory"
  """
  workCategory_aggregate(
    """distinct select on columns"""
    distinct_on: [workCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workCategory_order_by!]

    """filter the rows returned"""
    where: workCategory_bool_exp
  ): workCategory_aggregate!

  """fetch data from the table: "workCategory" using primary key columns"""
  workCategory_by_pk(categoryId: uuid!, workId: uuid!): workCategory

  """
  fetch data from the table: "workI18n"
  """
  workI18n(
    """distinct select on columns"""
    distinct_on: [workI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workI18n_order_by!]

    """filter the rows returned"""
    where: workI18n_bool_exp
  ): [workI18n!]!

  """
  fetch aggregated fields from the table: "workI18n"
  """
  workI18n_aggregate(
    """distinct select on columns"""
    distinct_on: [workI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workI18n_order_by!]

    """filter the rows returned"""
    where: workI18n_bool_exp
  ): workI18n_aggregate!

  """fetch data from the table: "workI18n" using primary key columns"""
  workI18n_by_pk(id: uuid!): workI18n

  """
  fetch aggregated fields from the table: "work"
  """
  work_aggregate(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): work_aggregate!

  """fetch data from the table: "work" using primary key columns"""
  work_by_pk(id: uuid!): work
}

"""
columns and relationships of "tag"
"""
type tag {
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  translation: tagI18n

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [tagI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagI18n_order_by!]

    """filter the rows returned"""
    where: tagI18n_bool_exp
  ): [tagI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [tagI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagI18n_order_by!]

    """filter the rows returned"""
    where: tagI18n_bool_exp
  ): tagI18n_aggregate!
}

"""
aggregated selection of "tag"
"""
type tag_aggregate {
  aggregate: tag_aggregate_fields
  nodes: [tag!]!
}

"""
aggregate fields of "tag"
"""
type tag_aggregate_fields {
  count(columns: [tag_select_column!], distinct: Boolean): Int
  max: tag_max_fields
  min: tag_min_fields
}

"""
order by aggregate values of table "tag"
"""
input tag_aggregate_order_by {
  count: order_by
  max: tag_max_order_by
  min: tag_min_order_by
}

"""
input type for inserting array relation for remote table "tag"
"""
input tag_arr_rel_insert_input {
  data: [tag_insert_input!]!
  on_conflict: tag_on_conflict
}

"""
Boolean expression to filter rows from the table "tag". All fields are combined with a logical 'AND'.
"""
input tag_bool_exp {
  _and: [tag_bool_exp]
  _not: tag_bool_exp
  _or: [tag_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  translation: tagI18n_bool_exp
  translations: tagI18n_bool_exp
}

"""
unique or primary key constraints on table "tag"
"""
enum tag_constraint {
  """unique or primary key constraint"""
  PK_8e4052373c579afc1471f526760
}

"""
input type for inserting data into table "tag"
"""
input tag_insert_input {
  deletedAt: timestamptz
  id: uuid
  translation: tagI18n_obj_rel_insert_input
  translations: tagI18n_arr_rel_insert_input
}

"""aggregate max on columns"""
type tag_max_fields {
  deletedAt: timestamptz
}

"""
order by max() on columns of table "tag"
"""
input tag_max_order_by {
  deletedAt: order_by
}

"""aggregate min on columns"""
type tag_min_fields {
  deletedAt: timestamptz
}

"""
order by min() on columns of table "tag"
"""
input tag_min_order_by {
  deletedAt: order_by
}

"""
response of any mutation on the table "tag"
"""
type tag_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [tag!]!
}

"""
input type for inserting object relation for remote table "tag"
"""
input tag_obj_rel_insert_input {
  data: tag_insert_input!
  on_conflict: tag_on_conflict
}

"""
on conflict condition type for table "tag"
"""
input tag_on_conflict {
  constraint: tag_constraint!
  update_columns: [tag_update_column!]!
}

"""
ordering options when selecting data from "tag"
"""
input tag_order_by {
  deletedAt: order_by
  id: order_by
  translation: tagI18n_order_by
  translations_aggregate: tagI18n_aggregate_order_by
}

"""
select columns of table "tag"
"""
enum tag_select_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
input type for updating data in table "tag"
"""
input tag_set_input {
  deletedAt: timestamptz
  id: uuid
}

"""
update columns of table "tag"
"""
enum tag_update_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
columns and relationships of "tagI18n"
"""
type tagI18n {
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!

  """An object relationship"""
  tag: tag!
  tagId: uuid!
  title: String!
}

"""
aggregated selection of "tagI18n"
"""
type tagI18n_aggregate {
  aggregate: tagI18n_aggregate_fields
  nodes: [tagI18n!]!
}

"""
aggregate fields of "tagI18n"
"""
type tagI18n_aggregate_fields {
  count(columns: [tagI18n_select_column!], distinct: Boolean): Int
  max: tagI18n_max_fields
  min: tagI18n_min_fields
}

"""
order by aggregate values of table "tagI18n"
"""
input tagI18n_aggregate_order_by {
  count: order_by
  max: tagI18n_max_order_by
  min: tagI18n_min_order_by
}

"""
input type for inserting array relation for remote table "tagI18n"
"""
input tagI18n_arr_rel_insert_input {
  data: [tagI18n_insert_input!]!
  on_conflict: tagI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "tagI18n". All fields are combined with a logical 'AND'.
"""
input tagI18n_bool_exp {
  _and: [tagI18n_bool_exp]
  _not: tagI18n_bool_exp
  _or: [tagI18n_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  tag: tag_bool_exp
  tagId: uuid_comparison_exp
  title: varchar_comparison_exp
}

"""
unique or primary key constraints on table "tagI18n"
"""
enum tagI18n_constraint {
  """unique or primary key constraint"""
  PK_6d1142c74efbd2f8ff2ee523163
}

"""
input type for inserting data into table "tagI18n"
"""
input tagI18n_insert_input {
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  tag: tag_obj_rel_insert_input
  tagId: uuid
  title: String
}

"""aggregate max on columns"""
type tagI18n_max_fields {
  deletedAt: timestamptz
  title: String
}

"""
order by max() on columns of table "tagI18n"
"""
input tagI18n_max_order_by {
  deletedAt: order_by
  title: order_by
}

"""aggregate min on columns"""
type tagI18n_min_fields {
  deletedAt: timestamptz
  title: String
}

"""
order by min() on columns of table "tagI18n"
"""
input tagI18n_min_order_by {
  deletedAt: order_by
  title: order_by
}

"""
response of any mutation on the table "tagI18n"
"""
type tagI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [tagI18n!]!
}

"""
input type for inserting object relation for remote table "tagI18n"
"""
input tagI18n_obj_rel_insert_input {
  data: tagI18n_insert_input!
  on_conflict: tagI18n_on_conflict
}

"""
on conflict condition type for table "tagI18n"
"""
input tagI18n_on_conflict {
  constraint: tagI18n_constraint!
  update_columns: [tagI18n_update_column!]!
}

"""
ordering options when selecting data from "tagI18n"
"""
input tagI18n_order_by {
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  tag: tag_order_by
  tagId: order_by
  title: order_by
}

"""
select columns of table "tagI18n"
"""
enum tagI18n_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  tagId

  """column name"""
  title
}

"""
input type for updating data in table "tagI18n"
"""
input tagI18n_set_input {
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  tagId: uuid
  title: String
}

"""
update columns of table "tagI18n"
"""
enum tagI18n_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  tagId

  """column name"""
  title
}

"""
columns and relationships of "technique"
"""
type technique {
  deletedAt: timestamptz
  id: uuid!

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [techniqueI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [techniqueI18n_order_by!]

    """filter the rows returned"""
    where: techniqueI18n_bool_exp
  ): [techniqueI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [techniqueI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [techniqueI18n_order_by!]

    """filter the rows returned"""
    where: techniqueI18n_bool_exp
  ): techniqueI18n_aggregate!

  """An array relationship"""
  works(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): [work!]!

  """An aggregated array relationship"""
  works_aggregate(
    """distinct select on columns"""
    distinct_on: [work_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [work_order_by!]

    """filter the rows returned"""
    where: work_bool_exp
  ): work_aggregate!
}

"""
aggregated selection of "technique"
"""
type technique_aggregate {
  aggregate: technique_aggregate_fields
  nodes: [technique!]!
}

"""
aggregate fields of "technique"
"""
type technique_aggregate_fields {
  count(columns: [technique_select_column!], distinct: Boolean): Int
  max: technique_max_fields
  min: technique_min_fields
}

"""
order by aggregate values of table "technique"
"""
input technique_aggregate_order_by {
  count: order_by
  max: technique_max_order_by
  min: technique_min_order_by
}

"""
input type for inserting array relation for remote table "technique"
"""
input technique_arr_rel_insert_input {
  data: [technique_insert_input!]!
  on_conflict: technique_on_conflict
}

"""
Boolean expression to filter rows from the table "technique". All fields are combined with a logical 'AND'.
"""
input technique_bool_exp {
  _and: [technique_bool_exp]
  _not: technique_bool_exp
  _or: [technique_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  translations: techniqueI18n_bool_exp
  works: work_bool_exp
}

"""
unique or primary key constraints on table "technique"
"""
enum technique_constraint {
  """unique or primary key constraint"""
  PK_a149a5ec01b7bf13dbeb2f743b5
}

"""
input type for inserting data into table "technique"
"""
input technique_insert_input {
  deletedAt: timestamptz
  id: uuid
  translations: techniqueI18n_arr_rel_insert_input
  works: work_arr_rel_insert_input
}

"""aggregate max on columns"""
type technique_max_fields {
  deletedAt: timestamptz
}

"""
order by max() on columns of table "technique"
"""
input technique_max_order_by {
  deletedAt: order_by
}

"""aggregate min on columns"""
type technique_min_fields {
  deletedAt: timestamptz
}

"""
order by min() on columns of table "technique"
"""
input technique_min_order_by {
  deletedAt: order_by
}

"""
response of any mutation on the table "technique"
"""
type technique_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [technique!]!
}

"""
input type for inserting object relation for remote table "technique"
"""
input technique_obj_rel_insert_input {
  data: technique_insert_input!
  on_conflict: technique_on_conflict
}

"""
on conflict condition type for table "technique"
"""
input technique_on_conflict {
  constraint: technique_constraint!
  update_columns: [technique_update_column!]!
}

"""
ordering options when selecting data from "technique"
"""
input technique_order_by {
  deletedAt: order_by
  id: order_by
  translations_aggregate: techniqueI18n_aggregate_order_by
  works_aggregate: work_aggregate_order_by
}

"""
select columns of table "technique"
"""
enum technique_select_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
input type for updating data in table "technique"
"""
input technique_set_input {
  deletedAt: timestamptz
  id: uuid
}

"""
update columns of table "technique"
"""
enum technique_update_column {
  """column name"""
  deletedAt

  """column name"""
  id
}

"""
columns and relationships of "techniqueI18n"
"""
type techniqueI18n {
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  name: String!

  """An object relationship"""
  technique: technique!
  techniqueId: uuid!
}

"""
aggregated selection of "techniqueI18n"
"""
type techniqueI18n_aggregate {
  aggregate: techniqueI18n_aggregate_fields
  nodes: [techniqueI18n!]!
}

"""
aggregate fields of "techniqueI18n"
"""
type techniqueI18n_aggregate_fields {
  count(columns: [techniqueI18n_select_column!], distinct: Boolean): Int
  max: techniqueI18n_max_fields
  min: techniqueI18n_min_fields
}

"""
order by aggregate values of table "techniqueI18n"
"""
input techniqueI18n_aggregate_order_by {
  count: order_by
  max: techniqueI18n_max_order_by
  min: techniqueI18n_min_order_by
}

"""
input type for inserting array relation for remote table "techniqueI18n"
"""
input techniqueI18n_arr_rel_insert_input {
  data: [techniqueI18n_insert_input!]!
  on_conflict: techniqueI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "techniqueI18n". All fields are combined with a logical 'AND'.
"""
input techniqueI18n_bool_exp {
  _and: [techniqueI18n_bool_exp]
  _not: techniqueI18n_bool_exp
  _or: [techniqueI18n_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  name: varchar_comparison_exp
  technique: technique_bool_exp
  techniqueId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "techniqueI18n"
"""
enum techniqueI18n_constraint {
  """unique or primary key constraint"""
  PK_191ae0cd753e2cdd55986092423
}

"""
input type for inserting data into table "techniqueI18n"
"""
input techniqueI18n_insert_input {
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  name: String
  technique: technique_obj_rel_insert_input
  techniqueId: uuid
}

"""aggregate max on columns"""
type techniqueI18n_max_fields {
  deletedAt: timestamptz
  name: String
}

"""
order by max() on columns of table "techniqueI18n"
"""
input techniqueI18n_max_order_by {
  deletedAt: order_by
  name: order_by
}

"""aggregate min on columns"""
type techniqueI18n_min_fields {
  deletedAt: timestamptz
  name: String
}

"""
order by min() on columns of table "techniqueI18n"
"""
input techniqueI18n_min_order_by {
  deletedAt: order_by
  name: order_by
}

"""
response of any mutation on the table "techniqueI18n"
"""
type techniqueI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [techniqueI18n!]!
}

"""
input type for inserting object relation for remote table "techniqueI18n"
"""
input techniqueI18n_obj_rel_insert_input {
  data: techniqueI18n_insert_input!
  on_conflict: techniqueI18n_on_conflict
}

"""
on conflict condition type for table "techniqueI18n"
"""
input techniqueI18n_on_conflict {
  constraint: techniqueI18n_constraint!
  update_columns: [techniqueI18n_update_column!]!
}

"""
ordering options when selecting data from "techniqueI18n"
"""
input techniqueI18n_order_by {
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  name: order_by
  technique: technique_order_by
  techniqueId: order_by
}

"""
select columns of table "techniqueI18n"
"""
enum techniqueI18n_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  name

  """column name"""
  techniqueId
}

"""
input type for updating data in table "techniqueI18n"
"""
input techniqueI18n_set_input {
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  name: String
  techniqueId: uuid
}

"""
update columns of table "techniqueI18n"
"""
enum techniqueI18n_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  name

  """column name"""
  techniqueId
}

"""
expression to compare columns of type text. All fields are combined with logical 'AND'.
"""
input text_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String]
  _nlike: String
  _nsimilar: String
  _similar: String
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz]
}

"""
columns and relationships of "translation"
"""
type translation {
  deletedAt: timestamptz
  id: uuid!
  key: String!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  value: String!
}

"""
aggregated selection of "translation"
"""
type translation_aggregate {
  aggregate: translation_aggregate_fields
  nodes: [translation!]!
}

"""
aggregate fields of "translation"
"""
type translation_aggregate_fields {
  count(columns: [translation_select_column!], distinct: Boolean): Int
  max: translation_max_fields
  min: translation_min_fields
}

"""
order by aggregate values of table "translation"
"""
input translation_aggregate_order_by {
  count: order_by
  max: translation_max_order_by
  min: translation_min_order_by
}

"""
input type for inserting array relation for remote table "translation"
"""
input translation_arr_rel_insert_input {
  data: [translation_insert_input!]!
  on_conflict: translation_on_conflict
}

"""
Boolean expression to filter rows from the table "translation". All fields are combined with a logical 'AND'.
"""
input translation_bool_exp {
  _and: [translation_bool_exp]
  _not: translation_bool_exp
  _or: [translation_bool_exp]
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  key: varchar_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  value: text_comparison_exp
}

"""
unique or primary key constraints on table "translation"
"""
enum translation_constraint {
  """unique or primary key constraint"""
  PK_7aef875e43ab80d34a0cdd39c70
}

"""
input type for inserting data into table "translation"
"""
input translation_insert_input {
  deletedAt: timestamptz
  id: uuid
  key: String
  locale: locale_obj_rel_insert_input
  localeId: uuid
  value: String
}

"""aggregate max on columns"""
type translation_max_fields {
  deletedAt: timestamptz
  key: String
  value: String
}

"""
order by max() on columns of table "translation"
"""
input translation_max_order_by {
  deletedAt: order_by
  key: order_by
  value: order_by
}

"""aggregate min on columns"""
type translation_min_fields {
  deletedAt: timestamptz
  key: String
  value: String
}

"""
order by min() on columns of table "translation"
"""
input translation_min_order_by {
  deletedAt: order_by
  key: order_by
  value: order_by
}

"""
response of any mutation on the table "translation"
"""
type translation_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [translation!]!
}

"""
input type for inserting object relation for remote table "translation"
"""
input translation_obj_rel_insert_input {
  data: translation_insert_input!
  on_conflict: translation_on_conflict
}

"""
on conflict condition type for table "translation"
"""
input translation_on_conflict {
  constraint: translation_constraint!
  update_columns: [translation_update_column!]!
}

"""
ordering options when selecting data from "translation"
"""
input translation_order_by {
  deletedAt: order_by
  id: order_by
  key: order_by
  locale: locale_order_by
  localeId: order_by
  value: order_by
}

"""
select columns of table "translation"
"""
enum translation_select_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  localeId

  """column name"""
  value
}

"""
input type for updating data in table "translation"
"""
input translation_set_input {
  deletedAt: timestamptz
  id: uuid
  key: String
  localeId: uuid
  value: String
}

"""
update columns of table "translation"
"""
enum translation_update_column {
  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  localeId

  """column name"""
  value
}

"""
columns and relationships of "user"
"""
type user {
  createdAt: timestamptz!
  deletedAt: timestamptz
  email: String!
  id: uuid!
  isBanned: Boolean!
  isConfirmEmail: Boolean!
  isConfirmPhone: Boolean!
  isSuperAdmin: Boolean!
  name: String!

  """An array relationship"""
  orders(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): [order!]!

  """An aggregated array relationship"""
  orders_aggregate(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): order_aggregate!
  password: String!
  patronymic: String!
  phone: String!

  """An array relationship"""
  productsInCart(
    """distinct select on columns"""
    distinct_on: [cart_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cart_order_by!]

    """filter the rows returned"""
    where: cart_bool_exp
  ): [cart!]!

  """An aggregated array relationship"""
  productsInCart_aggregate(
    """distinct select on columns"""
    distinct_on: [cart_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cart_order_by!]

    """filter the rows returned"""
    where: cart_bool_exp
  ): cart_aggregate!
  role: user_role_enum!
  surname: String!
  updatedAt: timestamptz!
}

"""
aggregated selection of "user"
"""
type user_aggregate {
  aggregate: user_aggregate_fields
  nodes: [user!]!
}

"""
aggregate fields of "user"
"""
type user_aggregate_fields {
  count(columns: [user_select_column!], distinct: Boolean): Int
  max: user_max_fields
  min: user_min_fields
}

"""
order by aggregate values of table "user"
"""
input user_aggregate_order_by {
  count: order_by
  max: user_max_order_by
  min: user_min_order_by
}

"""
input type for inserting array relation for remote table "user"
"""
input user_arr_rel_insert_input {
  data: [user_insert_input!]!
  on_conflict: user_on_conflict
}

"""
Boolean expression to filter rows from the table "user". All fields are combined with a logical 'AND'.
"""
input user_bool_exp {
  _and: [user_bool_exp]
  _not: user_bool_exp
  _or: [user_bool_exp]
  createdAt: timestamptz_comparison_exp
  deletedAt: timestamptz_comparison_exp
  email: varchar_comparison_exp
  id: uuid_comparison_exp
  isBanned: boolean_comparison_exp
  isConfirmEmail: boolean_comparison_exp
  isConfirmPhone: boolean_comparison_exp
  isSuperAdmin: boolean_comparison_exp
  name: varchar_comparison_exp
  orders: order_bool_exp
  password: varchar_comparison_exp
  patronymic: varchar_comparison_exp
  phone: varchar_comparison_exp
  productsInCart: cart_bool_exp
  role: user_role_enum_comparison_exp
  surname: varchar_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "user"
"""
enum user_constraint {
  """unique or primary key constraint"""
  PK_cace4a159ff9f2512dd42373760

  """unique or primary key constraint"""
  UQ_e12875dfb3b1d92d7d7c5377e22
}

"""
input type for inserting data into table "user"
"""
input user_insert_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  email: String
  id: uuid
  isBanned: Boolean
  isConfirmEmail: Boolean
  isConfirmPhone: Boolean
  isSuperAdmin: Boolean
  name: String
  orders: order_arr_rel_insert_input
  password: String
  patronymic: String
  phone: String
  productsInCart: cart_arr_rel_insert_input
  role: user_role_enum
  surname: String
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type user_max_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  email: String
  name: String
  password: String
  patronymic: String
  phone: String
  surname: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "user"
"""
input user_max_order_by {
  createdAt: order_by
  deletedAt: order_by
  email: order_by
  name: order_by
  password: order_by
  patronymic: order_by
  phone: order_by
  surname: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type user_min_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  email: String
  name: String
  password: String
  patronymic: String
  phone: String
  surname: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "user"
"""
input user_min_order_by {
  createdAt: order_by
  deletedAt: order_by
  email: order_by
  name: order_by
  password: order_by
  patronymic: order_by
  phone: order_by
  surname: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "user"
"""
type user_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user!]!
}

"""
input type for inserting object relation for remote table "user"
"""
input user_obj_rel_insert_input {
  data: user_insert_input!
  on_conflict: user_on_conflict
}

"""
on conflict condition type for table "user"
"""
input user_on_conflict {
  constraint: user_constraint!
  update_columns: [user_update_column!]!
}

"""
ordering options when selecting data from "user"
"""
input user_order_by {
  createdAt: order_by
  deletedAt: order_by
  email: order_by
  id: order_by
  isBanned: order_by
  isConfirmEmail: order_by
  isConfirmPhone: order_by
  isSuperAdmin: order_by
  name: order_by
  orders_aggregate: order_aggregate_order_by
  password: order_by
  patronymic: order_by
  phone: order_by
  productsInCart_aggregate: cart_aggregate_order_by
  role: order_by
  surname: order_by
  updatedAt: order_by
}

scalar user_role_enum

"""
expression to compare columns of type user_role_enum. All fields are combined with logical 'AND'.
"""
input user_role_enum_comparison_exp {
  _eq: user_role_enum
  _gt: user_role_enum
  _gte: user_role_enum
  _in: [user_role_enum]
  _is_null: Boolean
  _lt: user_role_enum
  _lte: user_role_enum
  _neq: user_role_enum
  _nin: [user_role_enum]
}

"""
select columns of table "user"
"""
enum user_select_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  email

  """column name"""
  id

  """column name"""
  isBanned

  """column name"""
  isConfirmEmail

  """column name"""
  isConfirmPhone

  """column name"""
  isSuperAdmin

  """column name"""
  name

  """column name"""
  password

  """column name"""
  patronymic

  """column name"""
  phone

  """column name"""
  role

  """column name"""
  surname

  """column name"""
  updatedAt
}

"""
input type for updating data in table "user"
"""
input user_set_input {
  createdAt: timestamptz
  deletedAt: timestamptz
  email: String
  id: uuid
  isBanned: Boolean
  isConfirmEmail: Boolean
  isConfirmPhone: Boolean
  isSuperAdmin: Boolean
  name: String
  password: String
  patronymic: String
  phone: String
  role: user_role_enum
  surname: String
  updatedAt: timestamptz
}

"""
update columns of table "user"
"""
enum user_update_column {
  """column name"""
  createdAt

  """column name"""
  deletedAt

  """column name"""
  email

  """column name"""
  id

  """column name"""
  isBanned

  """column name"""
  isConfirmEmail

  """column name"""
  isConfirmPhone

  """column name"""
  isSuperAdmin

  """column name"""
  name

  """column name"""
  password

  """column name"""
  patronymic

  """column name"""
  phone

  """column name"""
  role

  """column name"""
  surname

  """column name"""
  updatedAt
}

scalar uuid

"""
expression to compare columns of type uuid. All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid]
}

"""
expression to compare columns of type varchar. All fields are combined with logical 'AND'.
"""
input varchar_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String]
  _nlike: String
  _nsimilar: String
  _similar: String
}

"""
columns and relationships of "work"
"""
type work {
  appearanceDateInStore: timestamptz

  """An object relationship"""
  artist: artist
  artistId: uuid

  """An object relationship"""
  basis: basis
  basisId: uuid

  """An array relationship"""
  carts(
    """distinct select on columns"""
    distinct_on: [cart_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cart_order_by!]

    """filter the rows returned"""
    where: cart_bool_exp
  ): [cart!]!

  """An aggregated array relationship"""
  carts_aggregate(
    """distinct select on columns"""
    distinct_on: [cart_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cart_order_by!]

    """filter the rows returned"""
    where: cart_bool_exp
  ): cart_aggregate!

  """An array relationship"""
  customFields(
    """distinct select on columns"""
    distinct_on: [customFieldWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldWork_order_by!]

    """filter the rows returned"""
    where: customFieldWork_bool_exp
  ): [customFieldWork!]!

  """An aggregated array relationship"""
  customFields_aggregate(
    """distinct select on columns"""
    distinct_on: [customFieldWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [customFieldWork_order_by!]

    """filter the rows returned"""
    where: customFieldWork_bool_exp
  ): customFieldWork_aggregate!
  deletedAt: timestamptz
  forSale: Boolean!
  id: uuid!
  images(
    """JSON select path"""
    path: String
  ): jsonb

  """An array relationship"""
  orderProducts(
    """distinct select on columns"""
    distinct_on: [orderProduct_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [orderProduct_order_by!]

    """filter the rows returned"""
    where: orderProduct_bool_exp
  ): [orderProduct!]!

  """An aggregated array relationship"""
  orderProducts_aggregate(
    """distinct select on columns"""
    distinct_on: [orderProduct_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [orderProduct_order_by!]

    """filter the rows returned"""
    where: orderProduct_bool_exp
  ): orderProduct_aggregate!
  positionOnMainPage: smallint!
  price: numeric

  """An object relationship"""
  provenance: provenance
  provenanceId: uuid
  quantity: smallint!

  """An object relationship"""
  school: school
  schoolId: uuid
  showInMainPage: Boolean!
  size: _text

  """An object relationship"""
  technique: technique
  techniqueId: uuid

  """An object relationship"""
  translation: workI18n

  """An array relationship"""
  translations(
    """distinct select on columns"""
    distinct_on: [workI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workI18n_order_by!]

    """filter the rows returned"""
    where: workI18n_bool_exp
  ): [workI18n!]!

  """An aggregated array relationship"""
  translations_aggregate(
    """distinct select on columns"""
    distinct_on: [workI18n_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workI18n_order_by!]

    """filter the rows returned"""
    where: workI18n_bool_exp
  ): workI18n_aggregate!

  """An array relationship"""
  workCategories(
    """distinct select on columns"""
    distinct_on: [workCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workCategory_order_by!]

    """filter the rows returned"""
    where: workCategory_bool_exp
  ): [workCategory!]!

  """An aggregated array relationship"""
  workCategories_aggregate(
    """distinct select on columns"""
    distinct_on: [workCategory_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workCategory_order_by!]

    """filter the rows returned"""
    where: workCategory_bool_exp
  ): workCategory_aggregate!

  """An array relationship"""
  workExhibitions(
    """distinct select on columns"""
    distinct_on: [exhibitionWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionWork_order_by!]

    """filter the rows returned"""
    where: exhibitionWork_bool_exp
  ): [exhibitionWork!]!

  """An aggregated array relationship"""
  workExhibitions_aggregate(
    """distinct select on columns"""
    distinct_on: [exhibitionWork_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [exhibitionWork_order_by!]

    """filter the rows returned"""
    where: exhibitionWork_bool_exp
  ): exhibitionWork_aggregate!
}

"""
aggregated selection of "work"
"""
type work_aggregate {
  aggregate: work_aggregate_fields
  nodes: [work!]!
}

"""
aggregate fields of "work"
"""
type work_aggregate_fields {
  avg: work_avg_fields
  count(columns: [work_select_column!], distinct: Boolean): Int
  max: work_max_fields
  min: work_min_fields
  stddev: work_stddev_fields
  stddev_pop: work_stddev_pop_fields
  stddev_samp: work_stddev_samp_fields
  sum: work_sum_fields
  var_pop: work_var_pop_fields
  var_samp: work_var_samp_fields
  variance: work_variance_fields
}

"""
order by aggregate values of table "work"
"""
input work_aggregate_order_by {
  avg: work_avg_order_by
  count: order_by
  max: work_max_order_by
  min: work_min_order_by
  stddev: work_stddev_order_by
  stddev_pop: work_stddev_pop_order_by
  stddev_samp: work_stddev_samp_order_by
  sum: work_sum_order_by
  var_pop: work_var_pop_order_by
  var_samp: work_var_samp_order_by
  variance: work_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input work_append_input {
  images: jsonb
}

"""
input type for inserting array relation for remote table "work"
"""
input work_arr_rel_insert_input {
  data: [work_insert_input!]!
  on_conflict: work_on_conflict
}

"""aggregate avg on columns"""
type work_avg_fields {
  positionOnMainPage: Float
  price: Float
  quantity: Float
}

"""
order by avg() on columns of table "work"
"""
input work_avg_order_by {
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""
Boolean expression to filter rows from the table "work". All fields are combined with a logical 'AND'.
"""
input work_bool_exp {
  _and: [work_bool_exp]
  _not: work_bool_exp
  _or: [work_bool_exp]
  appearanceDateInStore: timestamptz_comparison_exp
  artist: artist_bool_exp
  artistId: uuid_comparison_exp
  basis: basis_bool_exp
  basisId: uuid_comparison_exp
  carts: cart_bool_exp
  customFields: customFieldWork_bool_exp
  deletedAt: timestamptz_comparison_exp
  forSale: boolean_comparison_exp
  id: uuid_comparison_exp
  images: jsonb_comparison_exp
  orderProducts: orderProduct_bool_exp
  positionOnMainPage: smallint_comparison_exp
  price: numeric_comparison_exp
  provenance: provenance_bool_exp
  provenanceId: uuid_comparison_exp
  quantity: smallint_comparison_exp
  school: school_bool_exp
  schoolId: uuid_comparison_exp
  showInMainPage: boolean_comparison_exp
  size: _text_comparison_exp
  technique: technique_bool_exp
  techniqueId: uuid_comparison_exp
  translation: workI18n_bool_exp
  translations: workI18n_bool_exp
  workCategories: workCategory_bool_exp
  workExhibitions: exhibitionWork_bool_exp
}

"""
unique or primary key constraints on table "work"
"""
enum work_constraint {
  """unique or primary key constraint"""
  PK_1ad2a9dfd058d66c37e6d495222
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input work_delete_at_path_input {
  images: [String]
}

"""
delete the array element with specified index (negative integers count from the
end). throws an error if top level container is not an array
"""
input work_delete_elem_input {
  images: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input work_delete_key_input {
  images: String
}

"""
input type for incrementing integer columne in table "work"
"""
input work_inc_input {
  positionOnMainPage: smallint
  quantity: smallint
}

"""
input type for inserting data into table "work"
"""
input work_insert_input {
  appearanceDateInStore: timestamptz
  artist: artist_obj_rel_insert_input
  artistId: uuid
  basis: basis_obj_rel_insert_input
  basisId: uuid
  carts: cart_arr_rel_insert_input
  customFields: customFieldWork_arr_rel_insert_input
  deletedAt: timestamptz
  forSale: Boolean
  id: uuid
  images: jsonb
  orderProducts: orderProduct_arr_rel_insert_input
  positionOnMainPage: smallint
  price: numeric
  provenance: provenance_obj_rel_insert_input
  provenanceId: uuid
  quantity: smallint
  school: school_obj_rel_insert_input
  schoolId: uuid
  showInMainPage: Boolean
  size: _text
  technique: technique_obj_rel_insert_input
  techniqueId: uuid
  translation: workI18n_obj_rel_insert_input
  translations: workI18n_arr_rel_insert_input
  workCategories: workCategory_arr_rel_insert_input
  workExhibitions: exhibitionWork_arr_rel_insert_input
}

"""aggregate max on columns"""
type work_max_fields {
  appearanceDateInStore: timestamptz
  deletedAt: timestamptz
  positionOnMainPage: smallint
  price: numeric
  quantity: smallint
}

"""
order by max() on columns of table "work"
"""
input work_max_order_by {
  appearanceDateInStore: order_by
  deletedAt: order_by
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""aggregate min on columns"""
type work_min_fields {
  appearanceDateInStore: timestamptz
  deletedAt: timestamptz
  positionOnMainPage: smallint
  price: numeric
  quantity: smallint
}

"""
order by min() on columns of table "work"
"""
input work_min_order_by {
  appearanceDateInStore: order_by
  deletedAt: order_by
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""
response of any mutation on the table "work"
"""
type work_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [work!]!
}

"""
input type for inserting object relation for remote table "work"
"""
input work_obj_rel_insert_input {
  data: work_insert_input!
  on_conflict: work_on_conflict
}

"""
on conflict condition type for table "work"
"""
input work_on_conflict {
  constraint: work_constraint!
  update_columns: [work_update_column!]!
}

"""
ordering options when selecting data from "work"
"""
input work_order_by {
  appearanceDateInStore: order_by
  artist: artist_order_by
  artistId: order_by
  basis: basis_order_by
  basisId: order_by
  carts_aggregate: cart_aggregate_order_by
  customFields_aggregate: customFieldWork_aggregate_order_by
  deletedAt: order_by
  forSale: order_by
  id: order_by
  images: order_by
  orderProducts_aggregate: orderProduct_aggregate_order_by
  positionOnMainPage: order_by
  price: order_by
  provenance: provenance_order_by
  provenanceId: order_by
  quantity: order_by
  school: school_order_by
  schoolId: order_by
  showInMainPage: order_by
  size: order_by
  technique: technique_order_by
  techniqueId: order_by
  translation: workI18n_order_by
  translations_aggregate: workI18n_aggregate_order_by
  workCategories_aggregate: workCategory_aggregate_order_by
  workExhibitions_aggregate: exhibitionWork_aggregate_order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input work_prepend_input {
  images: jsonb
}

"""
select columns of table "work"
"""
enum work_select_column {
  """column name"""
  appearanceDateInStore

  """column name"""
  artistId

  """column name"""
  basisId

  """column name"""
  deletedAt

  """column name"""
  forSale

  """column name"""
  id

  """column name"""
  images

  """column name"""
  positionOnMainPage

  """column name"""
  price

  """column name"""
  provenanceId

  """column name"""
  quantity

  """column name"""
  schoolId

  """column name"""
  showInMainPage

  """column name"""
  size

  """column name"""
  techniqueId
}

"""
input type for updating data in table "work"
"""
input work_set_input {
  appearanceDateInStore: timestamptz
  artistId: uuid
  basisId: uuid
  deletedAt: timestamptz
  forSale: Boolean
  id: uuid
  images: jsonb
  positionOnMainPage: smallint
  price: numeric
  provenanceId: uuid
  quantity: smallint
  schoolId: uuid
  showInMainPage: Boolean
  size: _text
  techniqueId: uuid
}

"""aggregate stddev on columns"""
type work_stddev_fields {
  positionOnMainPage: Float
  price: Float
  quantity: Float
}

"""
order by stddev() on columns of table "work"
"""
input work_stddev_order_by {
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""aggregate stddev_pop on columns"""
type work_stddev_pop_fields {
  positionOnMainPage: Float
  price: Float
  quantity: Float
}

"""
order by stddev_pop() on columns of table "work"
"""
input work_stddev_pop_order_by {
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""aggregate stddev_samp on columns"""
type work_stddev_samp_fields {
  positionOnMainPage: Float
  price: Float
  quantity: Float
}

"""
order by stddev_samp() on columns of table "work"
"""
input work_stddev_samp_order_by {
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""aggregate sum on columns"""
type work_sum_fields {
  positionOnMainPage: smallint
  price: numeric
  quantity: smallint
}

"""
order by sum() on columns of table "work"
"""
input work_sum_order_by {
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""
update columns of table "work"
"""
enum work_update_column {
  """column name"""
  appearanceDateInStore

  """column name"""
  artistId

  """column name"""
  basisId

  """column name"""
  deletedAt

  """column name"""
  forSale

  """column name"""
  id

  """column name"""
  images

  """column name"""
  positionOnMainPage

  """column name"""
  price

  """column name"""
  provenanceId

  """column name"""
  quantity

  """column name"""
  schoolId

  """column name"""
  showInMainPage

  """column name"""
  size

  """column name"""
  techniqueId
}

"""aggregate var_pop on columns"""
type work_var_pop_fields {
  positionOnMainPage: Float
  price: Float
  quantity: Float
}

"""
order by var_pop() on columns of table "work"
"""
input work_var_pop_order_by {
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""aggregate var_samp on columns"""
type work_var_samp_fields {
  positionOnMainPage: Float
  price: Float
  quantity: Float
}

"""
order by var_samp() on columns of table "work"
"""
input work_var_samp_order_by {
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""aggregate variance on columns"""
type work_variance_fields {
  positionOnMainPage: Float
  price: Float
  quantity: Float
}

"""
order by variance() on columns of table "work"
"""
input work_variance_order_by {
  positionOnMainPage: order_by
  price: order_by
  quantity: order_by
}

"""
columns and relationships of "workCategory"
"""
type workCategory {
  """An object relationship"""
  category: category!
  categoryId: uuid!

  """An object relationship"""
  work: work!
  workId: uuid!
}

"""
aggregated selection of "workCategory"
"""
type workCategory_aggregate {
  aggregate: workCategory_aggregate_fields
  nodes: [workCategory!]!
}

"""
aggregate fields of "workCategory"
"""
type workCategory_aggregate_fields {
  count(columns: [workCategory_select_column!], distinct: Boolean): Int
}

"""
order by aggregate values of table "workCategory"
"""
input workCategory_aggregate_order_by {
  count: order_by
}

"""
input type for inserting array relation for remote table "workCategory"
"""
input workCategory_arr_rel_insert_input {
  data: [workCategory_insert_input!]!
  on_conflict: workCategory_on_conflict
}

"""
Boolean expression to filter rows from the table "workCategory". All fields are combined with a logical 'AND'.
"""
input workCategory_bool_exp {
  _and: [workCategory_bool_exp]
  _not: workCategory_bool_exp
  _or: [workCategory_bool_exp]
  category: category_bool_exp
  categoryId: uuid_comparison_exp
  work: work_bool_exp
  workId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "workCategory"
"""
enum workCategory_constraint {
  """unique or primary key constraint"""
  PK_131304dd9e91441343c20164123
}

"""
input type for inserting data into table "workCategory"
"""
input workCategory_insert_input {
  category: category_obj_rel_insert_input
  categoryId: uuid
  work: work_obj_rel_insert_input
  workId: uuid
}

"""
response of any mutation on the table "workCategory"
"""
type workCategory_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [workCategory!]!
}

"""
input type for inserting object relation for remote table "workCategory"
"""
input workCategory_obj_rel_insert_input {
  data: workCategory_insert_input!
  on_conflict: workCategory_on_conflict
}

"""
on conflict condition type for table "workCategory"
"""
input workCategory_on_conflict {
  constraint: workCategory_constraint!
  update_columns: [workCategory_update_column!]!
}

"""
ordering options when selecting data from "workCategory"
"""
input workCategory_order_by {
  category: category_order_by
  categoryId: order_by
  work: work_order_by
  workId: order_by
}

"""
select columns of table "workCategory"
"""
enum workCategory_select_column {
  """column name"""
  categoryId

  """column name"""
  workId
}

"""
input type for updating data in table "workCategory"
"""
input workCategory_set_input {
  categoryId: uuid
  workId: uuid
}

"""
update columns of table "workCategory"
"""
enum workCategory_update_column {
  """column name"""
  categoryId

  """column name"""
  workId
}

"""
columns and relationships of "workI18n"
"""
type workI18n {
  body: String
  creationDate: String
  deletedAt: timestamptz
  id: uuid!

  """An object relationship"""
  locale: locale!
  localeId: uuid!
  metaDescription: String!
  metaTitle: String!
  slug: String!
  title: String!

  """An object relationship"""
  work: work!
  workId: uuid!
}

"""
aggregated selection of "workI18n"
"""
type workI18n_aggregate {
  aggregate: workI18n_aggregate_fields
  nodes: [workI18n!]!
}

"""
aggregate fields of "workI18n"
"""
type workI18n_aggregate_fields {
  count(columns: [workI18n_select_column!], distinct: Boolean): Int
  max: workI18n_max_fields
  min: workI18n_min_fields
}

"""
order by aggregate values of table "workI18n"
"""
input workI18n_aggregate_order_by {
  count: order_by
  max: workI18n_max_order_by
  min: workI18n_min_order_by
}

"""
input type for inserting array relation for remote table "workI18n"
"""
input workI18n_arr_rel_insert_input {
  data: [workI18n_insert_input!]!
  on_conflict: workI18n_on_conflict
}

"""
Boolean expression to filter rows from the table "workI18n". All fields are combined with a logical 'AND'.
"""
input workI18n_bool_exp {
  _and: [workI18n_bool_exp]
  _not: workI18n_bool_exp
  _or: [workI18n_bool_exp]
  body: text_comparison_exp
  creationDate: varchar_comparison_exp
  deletedAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  locale: locale_bool_exp
  localeId: uuid_comparison_exp
  metaDescription: varchar_comparison_exp
  metaTitle: varchar_comparison_exp
  slug: varchar_comparison_exp
  title: varchar_comparison_exp
  work: work_bool_exp
  workId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "workI18n"
"""
enum workI18n_constraint {
  """unique or primary key constraint"""
  PK_692aa527444c46169caec207d5f

  """unique or primary key constraint"""
  UQ_f6403f96c54e5b3481008336089
}

"""
input type for inserting data into table "workI18n"
"""
input workI18n_insert_input {
  body: String
  creationDate: String
  deletedAt: timestamptz
  id: uuid
  locale: locale_obj_rel_insert_input
  localeId: uuid
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
  work: work_obj_rel_insert_input
  workId: uuid
}

"""aggregate max on columns"""
type workI18n_max_fields {
  body: String
  creationDate: String
  deletedAt: timestamptz
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""
order by max() on columns of table "workI18n"
"""
input workI18n_max_order_by {
  body: order_by
  creationDate: order_by
  deletedAt: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
}

"""aggregate min on columns"""
type workI18n_min_fields {
  body: String
  creationDate: String
  deletedAt: timestamptz
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
}

"""
order by min() on columns of table "workI18n"
"""
input workI18n_min_order_by {
  body: order_by
  creationDate: order_by
  deletedAt: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
}

"""
response of any mutation on the table "workI18n"
"""
type workI18n_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [workI18n!]!
}

"""
input type for inserting object relation for remote table "workI18n"
"""
input workI18n_obj_rel_insert_input {
  data: workI18n_insert_input!
  on_conflict: workI18n_on_conflict
}

"""
on conflict condition type for table "workI18n"
"""
input workI18n_on_conflict {
  constraint: workI18n_constraint!
  update_columns: [workI18n_update_column!]!
}

"""
ordering options when selecting data from "workI18n"
"""
input workI18n_order_by {
  body: order_by
  creationDate: order_by
  deletedAt: order_by
  id: order_by
  locale: locale_order_by
  localeId: order_by
  metaDescription: order_by
  metaTitle: order_by
  slug: order_by
  title: order_by
  work: work_order_by
  workId: order_by
}

"""
select columns of table "workI18n"
"""
enum workI18n_select_column {
  """column name"""
  body

  """column name"""
  creationDate

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  slug

  """column name"""
  title

  """column name"""
  workId
}

"""
input type for updating data in table "workI18n"
"""
input workI18n_set_input {
  body: String
  creationDate: String
  deletedAt: timestamptz
  id: uuid
  localeId: uuid
  metaDescription: String
  metaTitle: String
  slug: String
  title: String
  workId: uuid
}

"""
update columns of table "workI18n"
"""
enum workI18n_update_column {
  """column name"""
  body

  """column name"""
  creationDate

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  localeId

  """column name"""
  metaDescription

  """column name"""
  metaTitle

  """column name"""
  slug

  """column name"""
  title

  """column name"""
  workId
}
